// vCoverage is marked as error, because it's unknown.
// dcl_input vCoverage

cbuffer cb0 : register(b0)
{
  float4 cb0[57];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float2 v2[2] : TEXCOORD0, // dcl_indexrange
  float2 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD6,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  // float2 v2[2] = { v0,v1 };
  r0.xyz = ddx_coarse(v4.zxy);
  r1.xyz = ddy_coarse(v4.yzx);
  r2.xyz = r1.xyz * r0.xyz;
  r0.xyz = r0.zxy * r1.yzx + -r2.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = max(9.999999939e-009, r0.x);
  r0.y = (int)cb0[40].x;
  r0.z = cb0[40].y;
  r0.w = 0.000000000e+000;
  while (true) {
// loop 
  // ilt r1.x, r0.w, r0.y
  // ilt r1.y, r0.w, l(16)
  // and r1.x, r1.y, r1.x
  // breakc_z r1.x
    // Exactly identical generation
    // r1.x = (asint(r0.w) < asint(r0.y)) ? (int)-1 : 0; //(int)r0.w < (int)r0.y;
    // r1.y = (asint(r0.w) < asint(16)) ? (int)-1 : 0; //(int)r0.w < 16;
    // r1.x = int(r1.x) & int(r1.y); //r1.y ? r1.x : 0;
    // if (int(r1.x) == 0) break;

    r1.x = (int)r0.w < (int)r0.y;
    r1.y = (int)r0.w < 16;
    r1.x = r1.y ? r1.x : 0;
    if (r1.x == 0) break;

    r1.x = (int)cb0[r0.w+41].z;
    r1.xy = cb0[r0.w+41].yx * v2[r1.x+2].yx;
    r1.zw = ddx_coarse(r1.yx);
    r1.xy = ddy_coarse(r1.xy);
    r1.y = r1.w * r1.y;
    r1.x = r1.z * r1.x + -r1.y;
    r1.x = abs(r1.x) / r0.x;
    r0.z = max(r1.x, r0.z);
    r0.w = (int)r0.w + 1;
  }
  r0.x = min(cb0[40].w, r0.z);
  r0.y = cb0[40].z < r0.x;
  r0.zw = cb0[40].wz + -cb0[40].zy;
  r1.xy = -cb0[40].zy + r0.xx;
  r1.zw = -r1.xy + r0.zw;
  r1.xy = r1.xy / r0.zw;
  r2.xz = r1.zw / r0.zw;
  r3.x = r1.x;
  r3.y = r2.x;
  r3.zw = float2(0.000000e+000,1.000000e+000);
  r2.xw = float2(0.000000e+000,1.000000e+000);
  r2.y = r1.y;
  o0.xyzw = r0.yyyy ? r3.xyzw : r2.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyz         0     NONE   float       
// TEXCOORD                11   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 6   xyzw        4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[57], dynamicIndexed
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 4
dcl_indexrange v2.xy 2
deriv_rtx_coarse r0.xyz, v4.zxyz
deriv_rty_coarse r1.xyz, v4.yzxy
mul r2.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
max r0.x, r0.x, l(0.000000)
ftoi r0.y, cb0[40].x
mov r0.z, cb0[40].y
mov r0.w, l(0)
loop 
  ilt r1.x, r0.w, r0.y
  ilt r1.y, r0.w, l(16)
  and r1.x, r1.y, r1.x
  breakc_z r1.x
  ftoi r1.x, cb0[r0.w + 41].z
  mul r1.xy, v[r1.x + 2].yxyy, cb0[r0.w + 41].yxyy
  deriv_rtx_coarse r1.zw, r1.yyyx
  deriv_rty_coarse r1.xy, r1.xyxx
  mul r1.y, r1.y, r1.w
  mad r1.x, r1.z, r1.x, -r1.y
  div r1.x, |r1.x|, r0.x
  max r0.z, r0.z, r1.x
  iadd r0.w, r0.w, l(1)
endloop 
min r0.x, r0.z, cb0[40].w
lt r0.y, cb0[40].z, r0.x
add r0.zw, -cb0[40].zzzy, cb0[40].wwwz
add r1.xy, r0.xxxx, -cb0[40].zyzz
add r1.zw, r0.zzzw, -r1.xxxy
div r1.xy, r1.xyxx, r0.zwzz
div r2.xz, r1.zzwz, r0.zzwz
mov r3.x, r1.x
mov r3.y, r2.x
mov r3.zw, l(0,0,0,1.000000)
mov r2.xw, l(0,0,0,1.000000)
mov r2.y, r1.y
movc o0.xyzw, r0.yyyy, r3.xyzw, r2.xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
T:\SteamLibrary\steamapps\common\Batman Arkham Knight\Binaries\Win64\wrapper1349(22,10-25): error X3017: 'v': initializer does not match type
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
