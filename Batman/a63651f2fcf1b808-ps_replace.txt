// Good example of 'precise' keyword use, including both normal mov and sample indexable.

cbuffer cb0 : register(b0)
{
  row_major float4x4 g_mProj : packoffset(c0);
  row_major float4x4 g_mProjInv : packoffset(c4);
  row_major float4x4 g_mLightToView[4] : packoffset(c8);
  float3 g_vEyePosition : packoffset(c24);
  float g_fDistanceScale : packoffset(c24.w);
  float3 g_vLightPositionVS : packoffset(c25);
  float g_fBufferWidthInv : packoffset(c25.w);
  float3 g_vLightDir : packoffset(c26);
  float g_fBufferHeightInv : packoffset(c26.w);
  float3 g_vSigmaAbsorption : packoffset(c27);
  float g_fResMultiplier : packoffset(c27.w);
  float3 g_vSigmaScatter : packoffset(c28);
  float g_fRadius : packoffset(c28.w);
  float4 g_vCascadeOffsetAndScale[4] : packoffset(c29);
  float4 g_vAirlightParams : packoffset(c33);
  float4 g_vCascadeTessFactor : packoffset(c34);
  float2 g_vShadowMapDim : packoffset(c35);
  uint g_bEnableCookie : packoffset(c35.z);
  uint g_bEnableShadow : packoffset(c35.w);
  float g_fCookieThreshold : packoffset(c36);
  float g_fLength : packoffset(c36.y);
  int g_cookieIndex : packoffset(c36.z);
  float g_fBrightness : packoffset(c36.w);
  float4 g_vCookieOffsetAndScale : packoffset(c37);
  float4 g_vColour : packoffset(c38);
}
SamplerState g_sPoint_s : register(s0);
Texture2D<float4> g_tGodraysBuffer : register(t0);
Texture2DMS<float> tDepthMap : register(t3);
Texture2D<float> tDepthMapLowRes : register(t4);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  [precise(x)] = r0.x;
  [precise(y)] = r0.y;
  [precise(xy)] = r0.x * r1.x;
  [precise(zw)] = r0.z / v1.x;
  [precise(xy)] = trunc(r2.x);
  [precise(xy)] = r1.x * r2.x;
  [precise(xy)] = r2.x;
  [precise(z)] = 0.000000000e+000;
  [precise(zw)] = r1.x + r2.z;
  [precise(zw)] = r1.z + r1.z;
  [precise(xy)] = r1.x + r1.x;
  [precise](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r3.xy, 0.000000000e+000).x;
  [precise](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r4.xy, 0.000000000e+000).z;
  [precise](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r5.xy, 0.000000000e+000).z;
  [precise](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r6.xy, 0.000000000e+000).x;
  [precise(xy)] = r2.x;
  [precise(x)](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r2.x, 0.000000000e+000).x;
  [precise(x)] = r7.x / 1.000000;
  [precise(x)] = r7.x;
  [precise(zw)] = r2.z;
  [precise(x)](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r2.x, 0.000000000e+000).z;
  [precise(y)] = r7.y / 1.000000;
  [precise(y)] = r7.y;
  [precise(zw)] = r1.z;
  [precise(z)](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r1.z, 0.000000000e+000).z;
  [precise(z)] = r7.z / 1.000000;
  [precise(z)] = r7.z;
  [precise(xy)] = r1.x;
  [precise(x)](texture2d)(float = g_tGodraysBuffer.SampleLevel(, r1.x, 0.000000000e+000).x;
  [precise(w)] = r7.w / 1.000000;
  [precise(w)] = r7.w;
  [precise(zw)] = frac(r0.z);
  [precise(xy)] = r1.x;
  [precise(xy)] = r1.x + r1.x;
  [precise(x)] = r1.y * r2.x;
  [precise(y)] = r0.z * r2.y;
  [precise(z)] = r0.w * r2.z;
  [precise(w)] = r0.w * r2.w;
  [precise(zw)] = r0.z;
  [precise(xy)] = r0.x / r0.z;
  [precise(xy)] = (int)r0.x;
  [precise(zw)] = 0.000000e+000;
  [precise(x)](texture2dms)(float = g_tGodraysBuffer.Load(r0.x, 0.000000000e+000).x;
  [precise(x)] = r0.x / 1.000000;
  [precise(x)] = r0.x;
  [precise] = r0.x;
  [precise] = r0.x + r0.x;
  [precise] = r1.x;
  [precise] = max(r0.x, r0.x);
  [precise] = r0.x * r0.x;
  [precise] = r0.x + r0.x;
  [precise] = r0.x / r2.x;
  [precise(x)] = dot(r1.x, r0.xyzw);
  [precise] = r0.x / r0.x;
  [precise] = r0.x * r1.x;
  [precise] = r0.y * r2.x;
  [precise] = r1.x + r1.x;
  [precise] = r0.z * r2.x;
  [precise] = r1.x + r1.x;
  [precise] = r0.w * r0.x;
  [precise] = r0.x + r0.x;
  [precise] = o0.x;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   row_major float4x4 g_mProj;        // Offset:    0 Size:    64 [unused]
//   row_major float4x4 g_mProjInv;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 g_mLightToView[4];// Offset:  128 Size:   256 [unused]
//   float3 g_vEyePosition;             // Offset:  384 Size:    12 [unused]
//   float g_fDistanceScale;            // Offset:  396 Size:     4 [unused]
//   float3 g_vLightPositionVS;         // Offset:  400 Size:    12 [unused]
//   float g_fBufferWidthInv;           // Offset:  412 Size:     4
//   float3 g_vLightDir;                // Offset:  416 Size:    12 [unused]
//   float g_fBufferHeightInv;          // Offset:  428 Size:     4
//   float3 g_vSigmaAbsorption;         // Offset:  432 Size:    12 [unused]
//   float g_fResMultiplier;            // Offset:  444 Size:     4
//   float3 g_vSigmaScatter;            // Offset:  448 Size:    12 [unused]
//   float g_fRadius;                   // Offset:  460 Size:     4 [unused]
//   float4 g_vCascadeOffsetAndScale[4];// Offset:  464 Size:    64 [unused]
//   float4 g_vAirlightParams;          // Offset:  528 Size:    16 [unused]
//   float4 g_vCascadeTessFactor;       // Offset:  544 Size:    16 [unused]
//   float2 g_vShadowMapDim;            // Offset:  560 Size:     8 [unused]
//   uint g_bEnableCookie;              // Offset:  568 Size:     4 [unused]
//   uint g_bEnableShadow;              // Offset:  572 Size:     4 [unused]
//   float g_fCookieThreshold;          // Offset:  576 Size:     4 [unused]
//   float g_fLength;                   // Offset:  580 Size:     4 [unused]
//   int g_cookieIndex;                 // Offset:  584 Size:     4 [unused]
//   float g_fBrightness;               // Offset:  588 Size:     4 [unused]
//   float4 g_vCookieOffsetAndScale;    // Offset:  592 Size:    16 [unused]
//   float4 g_vColour;                  // Offset:  608 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_sPoint                          sampler      NA          NA    0        1
// g_tGodraysBuffer                  texture  float4          2d    0        1
// tDepthMap                         texture   float        2dMS    3        1
// tDepthMapLowRes                   texture   float          2d    4        1
// cb0                               cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[28], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
mov [precise(x)] r0.x, cb0[25].w
mov [precise(y)] r0.y, cb0[26].w
mul [precise(xy)] r1.xy, r0.xyxx, cb0[27].wwww
div [precise(zw)] r0.zw, v1.xxxy, r1.xxxy
round_z [precise(xy)] r2.xy, r0.zwzz
mul [precise(xy)] r2.xy, r1.xyxx, r2.xyxx
mov [precise(xy)] r2.xy, r2.xyxx
mov [precise(z)] r1.z, l(0)
add [precise(zw)] r2.zw, r1.xxxz, r2.xxxy
add [precise(zw)] r1.zw, r1.zzzy, r2.xxxy
add [precise(xy)] r1.xy, r1.xyxx, r2.xyxx
sample_l_indexable [precise](texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable [precise](texture2d)(float,float,float,float) r4.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
sample_l_indexable [precise](texture2d)(float,float,float,float) r5.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
sample_l_indexable [precise](texture2d)(float,float,float,float) r6.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
mov [precise(xy)] r2.xy, r2.xyxx
sample_l_indexable [precise(x)](texture2d)(float,float,float,float) r2.x, r2.xyxx, t4.xyzw, s0, l(0.000000)
div [precise(x)] r7.x, l(1.000000), r2.x
mov [precise(x)] r7.x, r7.x
mov [precise(zw)] r2.zw, r2.zzzw
sample_l_indexable [precise(x)](texture2d)(float,float,float,float) r2.x, r2.zwzz, t4.xyzw, s0, l(0.000000)
div [precise(y)] r7.y, l(1.000000), r2.x
mov [precise(y)] r7.y, r7.y
mov [precise(zw)] r1.zw, r1.zzzw
sample_l_indexable [precise(z)](texture2d)(float,float,float,float) r1.z, r1.zwzz, t4.yzxw, s0, l(0.000000)
div [precise(z)] r7.z, l(1.000000), r1.z
mov [precise(z)] r7.z, r7.z
mov [precise(xy)] r1.xy, r1.xyxx
sample_l_indexable [precise(x)](texture2d)(float,float,float,float) r1.x, r1.xyxx, t4.xyzw, s0, l(0.000000)
div [precise(w)] r7.w, l(1.000000), r1.x
mov [precise(w)] r7.w, r7.w
frc [precise(zw)] r0.zw, r0.zzzw
mov [precise(xy)] r1.xy, -r0.zwzz
add [precise(xy)] r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul [precise(x)] r2.x, r1.y, r1.x
mul [precise(y)] r2.y, r0.z, r1.y
mul [precise(z)] r2.z, r0.w, r1.x
mul [precise(w)] r2.w, r0.w, r0.z
mov [precise(zw)] r0.zw, v1.xxxy
div [precise(xy)] r0.xy, r0.zwzz, r0.xyxx
ftoi [precise(xy)] r0.xy, r0.xyxx
mov [precise(zw)] r0.zw, l(0,0,0,0)
ldms_indexable [precise(x)](texture2dms)(float,float,float,float) r0.x, r0.xyzw, t3.xyzw, l(0)
div [precise(x)] r0.x, l(1.000000), r0.x
mov [precise(x)] r0.x, r0.x
mov [precise] r0.xyzw, -r0.xxxx
add [precise] r0.xyzw, r0.xyzw, r7.xyzw
mov [precise] r1.xyzw, -r0.xyzw
max [precise] r0.xyzw, r0.xyzw, r1.xyzw
mul [precise] r0.xyzw, r0.xyzw, l(20000.000000, 20000.000000, 20000.000000, 20000.000000)
add [precise] r0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div [precise] r0.xyzw, r2.xyzw, r0.xyzw
dp4 [precise(x)] r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div [precise] r0.xyzw, r0.xyzw, r1.xxxx
mul [precise] r1.xyzw, r0.xxxx, r3.xyzw
mul [precise] r2.xyzw, r0.yyyy, r4.xyzw
add [precise] r1.xyzw, r1.xyzw, r2.xyzw
mul [precise] r2.xyzw, r0.zzzz, r5.xyzw
add [precise] r1.xyzw, r1.xyzw, r2.xyzw
mul [precise] r0.xyzw, r0.wwww, r6.xyzw
add [precise] r0.xyzw, r0.xyzw, r1.xyzw
mov [precise] o0.xyzw, r0.xyzw
ret 
// Approximately 63 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
T:\SteamLibrary\steamapps\common\Batman Arkham Knight\Binaries\Win64\wrapper1349(47,12): error X3004: undeclared identifier 'x'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
