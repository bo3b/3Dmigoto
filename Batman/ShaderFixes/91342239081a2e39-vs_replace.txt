//Decals / halos (FRockDecalVertexShader)
cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}


#define cmp -
Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : TEXCOORD5,
  float4 v7 : TEXCOORD6,
  float4 v8 : TEXCOORD7,
  float4 v9 : TEXCOORD8,
  float4 v10 : TEXCOORD9,
  float4 v11 : TEXCOORD10,
  float4 v12 : TANGENT0,
  float4 v13 : BINORMAL0,
  float4 v14 : NORMAL0,
  out float4 o0 : SV_POSITION0,
  out float3 o1 : TANGENT0,
  out float3 o2 : BINORMAL0,
  out float3 o3 : NORMAL0,
  out float4 o4 : TEXCOORD0,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6,
  out float4 o8 : TEXCOORD7,
  out float4 o9 : TEXCOORD8,
  out float4 o10 : TEXCOORD9,
  out float4 o11 : TEXCOORD10)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = v2.xyzw * v0.yyyy;
  r0.xyzw = v1.xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = v3.xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = v4.xyzw * v0.wwww + r0.xyzw;
  r1.xyzw = cb1[1].xyzw * r0.yyyy;
  r1.xyzw = cb1[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb1[2].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb1[3].xyzw * r0.wwww + r1.xyzw;
  
float4 s=StereoParams.Load(0);
float4 r10;
r10=r0;
r0.x += s.x*(r0.w-s.y); 
  
o0.xyzw = r10.xyzw;
  o4.xyzw = r0.xyzw;
  
  o1.xyz = v12.xyz;
  o2.xyz = v13.xyz;
  o3.xyz = v14.xyz;
  o5.xyzw = v5.xyzw;
  o6.xyzw = v6.xyzw;
  o7.xyzw = v7.xyzw;
  o8.xyzw = v8.xyzw;
  o9.xyzw = v9.xyzw;
  o10.xyzw = v10.xyzw;
  o11.xyzw = v11.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.1.30 on Fri Jul 10 00:31:09 2015
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// TEXCOORD                 9   xyzw       10     NONE   float   xyzw
// TEXCOORD                10   xyzw       11     NONE   float   xyzw
// TANGENT                  0   xyzw       12     NONE   float   xyz 
// BINORMAL                 0   xyzw       13     NONE   float   xyz 
// NORMAL                   0   xyzw       14     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TANGENT                  0   xyz         1     NONE   float   xyz 
// BINORMAL                 0   xyz         2     NONE   float   xyz 
// NORMAL                   0   xyz         3     NONE   float   xyz 
// TEXCOORD                 0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// TEXCOORD                 9   xyzw       10     NONE   float   xyzw
// TEXCOORD                10   xyzw       11     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_input v8.xyzw
dcl_input v9.xyzw
dcl_input v10.xyzw
dcl_input v11.xyzw
dcl_input v12.xyz
dcl_input v13.xyz
dcl_input v14.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xyzw
dcl_temps 2
mul r0.xyzw, v0.yyyy, v2.xyzw
mad r0.xyzw, v1.xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, v3.xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, v4.xyzw, v0.wwww, r0.xyzw
mul r1.xyzw, r0.yyyy, cb1[1].xyzw
mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb1[3].xyzw, r0.wwww, r1.xyzw
mov o0.xyzw, r0.xyzw
mov o4.xyzw, r0.xyzw
mov o1.xyz, v12.xyzx
mov o2.xyz, v13.xyzx
mov o3.xyz, v14.xyzx
mov o5.xyzw, v5.xyzw
mov o6.xyzw, v6.xyzw
mov o7.xyzw, v7.xyzw
mov o8.xyzw, v8.xyzw
mov o9.xyzw, v9.xyzw
mov o10.xyzw, v10.xyzw
mov o11.xyzw, v11.xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  