//Reflections from candy machine in Diner

// ---- Created with 3Dmigoto v1.2.21 on Wed Dec 30 18:05:05 2015
Texture2D<float4> t4 : register(t4);

TextureCubeArray<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[22];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[51];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD5,
  float4 v4 : TEXCOORD6,
  float4 v5 : TEXCOORD8,
  float4 v6 : TEXCOORD9,  //uncorrected v3
  out float4 o0 : SV_TARGET0,
  out float4 o1 : SV_TARGET1)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v1.xyz, v1.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = v1.xyz * r0.xxx;
  r0.w = dot(v0.xyz, v0.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = v0.xyz * r0.www;
  r2.xyz = r1.yzx * r0.zxy;
  r2.xyz = r0.yzx * r1.zxy + -r2.xyz;
  r2.xyz = v1.www * r2.xyz;
  r3.xyz = cb1[21].xyz + v6.xyz;
  r4.xyzw = cb1[1].xyzw * v6.yyyy;
  r4.xyzw = cb1[0].xyzw * v6.xxxx + r4.xyzw;
  r4.xyzw = cb1[2].xyzw * v6.zzzz + r4.xyzw;
  r4.xyzw = cb1[3].xyzw * v6.wwww + r4.xyzw;
  r0.w = dot(-v6.xyz, -v6.xyz);
  r0.w = rsqrt(r0.w);
  r5.xyz = -v6.xyz * r0.www;
  r0.w = r5.y * r2.z;
  r0.w = r5.x * r1.z + r0.w;
  r0.w = r5.z * r0.z + r0.w;
  r5.xyz = t0.SampleBias(s0_s, v2.xy, 0).xyz;
  r5.xyz = r5.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.w = dot(r5.xyz, r5.xyz);
  r1.w = rsqrt(r1.w);
  r5.xyz = r5.xyz * r1.www;
  r0.w = saturate(1 + -r0.w);
  r0.w = max(9.99999997e-007, r0.w);
  r0.w = r0.w * r0.w;
  r0.w = r0.w * 0.600000024 + 0.200000003;
  r6.xyz = t2.SampleBias(s2_s, v2.xy, 0).xyz;
  r7.w = saturate(r6.z * r0.w);
  r0.w = cmp(0 >= r7.w);
  if (r0.w != 0) discard;
  r8.xyz = t1.SampleBias(s1_s, v2.xy, 0).xyz;
  r8.xyz = cb0[22].xyz + r8.xyz;
  r6.xy = saturate(r6.xy);
  r1.x = dot(r1.xyz, r5.xyz);
  r1.y = dot(r2.xyz, r5.xyz);
  r1.z = dot(r0.xyz, r5.xyz);
  r0.xyz = cb1[12].xyz * r3.yyy;
  r0.xyz = cb1[11].xyz * r3.xxx + r0.xyz;
  r0.xyz = cb1[13].xyz * r3.zzz + r0.xyz;
  r0.xyz = cb1[14].xyz + r0.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r2.xyz = cb1[16].xyz * r0.yyy;
  r0.xyw = cb1[15].xyz * r0.xxx + r2.xyz;
  r0.xyz = cb1[17].xyz * r0.zzz + r0.xyw;
  r0.xyz = cb1[18].xyz + r0.xyz;
  r0.xyz = -cb1[9].xyz + -r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.w = dot(-r0.xyz, r1.xyz);
  r0.w = r0.w + r0.w;
  r2.xyz = r1.xyz * -r0.www + -r0.xyz;
  r0.x = dot(r1.xyz, r0.xyz);
  r0.x = max(9.99999975e-006, r0.x);
  r0.y = r0.x * -5.55472994 + -6.98316002;
  r0.x = r0.y * r0.x;
  r0.x = exp2(r0.x);
  r0.y = 1 + -r6.y;
  r0.x = r0.x * r0.y + 1;
  r0.y = -0.00787401572 + r6.y;
  r0.y = max(0, r0.y);
  r0.y = sqrt(r0.y);
  r0.y = 1 + -r0.y;
  r0.z = r0.y * r0.y;
  r0.y = -r0.z * r0.y + 1;
  r0.y = r0.y * 7 + -1;
  r0.y = max(0, r0.y);
  r1.xyz = float3(0,0,0);
  r0.zw = float2(0,0);
  while (true) {
    r1.w = cmp((uint)r0.w >= asuint(cb0[50].x));
    if (r1.w != 0) break;
    r1.w = (int)r0.w * 7;
    r5.xyz = cb0[r1.w+28].xyz * r3.yyy;
    r5.xyz = cb0[r1.w+27].xyz * r3.xxx + r5.xyz;
    r5.xyz = cb0[r1.w+29].xyz * r3.zzz + r5.xyz;
    r5.xyz = cb0[r1.w+30].xyz + r5.xyz;
    r6.yzw = float3(-0.5,-0.5,-0.5) + r5.xyz;
    r6.yzw = abs(r6.yzw) + abs(r6.yzw);
    r2.w = max(r6.y, r6.z);
    r2.w = max(r2.w, r6.w);
    r3.w = -cb0[r1.w+26].x + 1;
    r2.w = -r3.w + r2.w;
    r2.w = saturate(r2.w / cb0[r1.w+26].x);
    r2.w = 1 + -r2.w;
    r6.yzw = cb0[r1.w+28].xyz * r2.yyy;
    r6.yzw = cb0[r1.w+27].xyz * r2.xxx + r6.yzw;
    r6.yzw = cb0[r1.w+29].xyz * r2.zzz + r6.yzw;
    r9.xyz = float3(1,1,1) + -r5.xyz;
    r9.xyz = r9.xyz / r6.yzw;
    r10.xyz = -r5.xyz / r6.yzw;
    r11.xyz = cmp(float3(0,0,0) < r6.yzw);
    r9.xyz = r11.xyz ? r9.xyz : r10.xyz;
    r3.w = min(r9.x, r9.y);
    r3.w = min(r3.w, r9.z);
    r5.xyz = r6.yzw * r3.www + r5.xyz;
    r5.xyz = float3(-0.5,-0.5,-0.5) + r5.xyz;
    r3.w = dot(r5.xyz, r5.xyz);
    r3.w = rsqrt(r3.w);
    r5.xyz = r5.xyz * r3.www;
    r5.w = cb0[r1.w+25].w;
    r5.xyz = t3.SampleLevel(s3_s, r5.xyzw, r0.y).xyz;
    r5.xyz = log2(r5.xyz);
    r5.xyz = float3(2.20000005,2.20000005,2.20000005) * r5.xyz;
    r5.xyz = exp2(r5.xyz);
    r5.xyz = r5.xyz * cb0[r1.w+24].xyz + cb0[r1.w+25].xyz;
    r5.xyz = r5.xyz * r0.xxx;
    r5.xyz = r5.xyz * r6.xxx;
    r3.w = saturate(r2.w * cb0[r1.w+26].z + -r0.z);
    r1.xyz = r5.xyz * r3.www + r1.xyz;
    r0.z = r2.w * cb0[r1.w+26].z + r0.z;
    r0.w = (int)r0.w + 1;
  }
  r0.xyz = r8.xyz + r1.xyz;
  r0.w = 1 + -v5.w;
  r7.xyz = r0.xyz * r0.www + v5.xyz;
  r0.xy = r4.xy / r4.ww;
  r0.xy = r0.xy * cb1[19].xy + cb1[19].wz;
  t4.GetDimensions(0, uiDest.x, uiDest.y, uiDest.z);
  r0.zw = uiDest.xy;
  r0.zw = (uint2)r0.zw;
  r0.xy = r0.xy * r0.zw;
  r0.xy = (uint2)r0.xy;
  r0.zw = float2(0,0);
  r0.x = t4.Load(r0.xyz).x;
  r0.x = min(0.999999881, r0.x);
  r0.x = r0.x * cb1[20].z + -cb1[20].w;
  r0.x = 1 / r0.x;
  r0.x = cmp(r4.z < r0.x);
  r0.x = r0.x ? 1.000000 : 0;
  r0.y = cb0[50].z * r0.x;
  o1.xyzw = r7.xyzw * r0.yyyy;
  r0.x = -cb0[50].z * r0.x + 1;
  o0.xyzw = r7.xyzw * r0.xxxx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.21 on Wed Dec 30 18:05:05 2015
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyz         0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 5   xyzw        3     NONE   float   xyzw
// TEXCOORD                 6   xyzw        4     NONE   float       
// TEXCOORD                 8   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[51], dynamicIndexed
dcl_constantbuffer cb1[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecubearray (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 12
dp3 r0.x, v1.xyzx, v1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v1.xyzx
dp3 r0.w, v0.xyzx, v0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v0.xyzx
mul r2.xyz, r0.zxyz, r1.yzxy
mad r2.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
mul r2.xyz, r2.xyzx, v1.wwww
add r3.xyz, v3.xyzx, cb1[21].xyzx
mul r4.xyzw, v3.yyyy, cb1[1].xyzw
mad r4.xyzw, cb1[0].xyzw, v3.xxxx, r4.xyzw
mad r4.xyzw, cb1[2].xyzw, v3.zzzz, r4.xyzw
mad r4.xyzw, cb1[3].xyzw, v3.wwww, r4.xyzw
dp3 r0.w, -v3.xyzx, -v3.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, -v3.xyzx
mul r0.w, r2.z, r5.y
mad r0.w, r5.x, r1.z, r0.w
mad r0.w, r5.z, r0.z, r0.w
sample_b_indexable(texture2d)(float,float,float,float) r5.xyz, v2.xyxx, t0.xyzw, s0, l(0.000000)
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
add_sat r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000001)
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, l(0.600000), l(0.200000)
sample_b_indexable(texture2d)(float,float,float,float) r6.xyz, v2.xyxx, t2.xyzw, s2, l(0.000000)
mul_sat r7.w, r0.w, r6.z
ge r0.w, l(0.000000), r7.w
discard_nz r0.w
sample_b_indexable(texture2d)(float,float,float,float) r8.xyz, v2.xyxx, t1.xyzw, s1, l(0.000000)
add r8.xyz, r8.xyzx, cb0[22].xyzx
mov_sat r6.xy, r6.xyxx
dp3 r1.x, r1.xyzx, r5.xyzx
dp3 r1.y, r2.xyzx, r5.xyzx
dp3 r1.z, r0.xyzx, r5.xyzx
mul r0.xyz, r3.yyyy, cb1[12].xyzx
mad r0.xyz, cb1[11].xyzx, r3.xxxx, r0.xyzx
mad r0.xyz, cb1[13].xyzx, r3.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb1[14].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.yyyy, cb1[16].xyzx
mad r0.xyw, cb1[15].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb1[17].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb1[18].xyzx
add r0.xyz, -r0.xyzx, -cb1[9].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, -r0.xyzx, r1.xyzx
add r0.w, r0.w, r0.w
mad r2.xyz, r1.xyzx, -r0.wwww, -r0.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000010)
mad r0.y, r0.x, l(-5.554730), l(-6.983160)
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
add r0.y, -r6.y, l(1.000000)
mad r0.x, r0.x, r0.y, l(1.000000)
add r0.y, r6.y, l(-0.00787401572)
max r0.y, r0.y, l(0.000000)
sqrt r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mad r0.y, -r0.z, r0.y, l(1.000000)
mad r0.y, r0.y, l(7.000000), l(-1.000000)
max r0.y, r0.y, l(0.000000)
mov r1.xyz, l(0,0,0,0)
mov r0.zw, l(0,0,0,0)
loop 
  uge r1.w, r0.w, cb0[50].x
  breakc_nz r1.w
  imul null, r1.w, r0.w, l(7)
  mul r5.xyz, r3.yyyy, cb0[r1.w + 28].xyzx
  mad r5.xyz, cb0[r1.w + 27].xyzx, r3.xxxx, r5.xyzx
  mad r5.xyz, cb0[r1.w + 29].xyzx, r3.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb0[r1.w + 30].xyzx
  add r6.yzw, r5.xxyz, l(0.000000, -0.500000, -0.500000, -0.500000)
  add r6.yzw, |r6.yyzw|, |r6.yyzw|
  max r2.w, r6.z, r6.y
  max r2.w, r6.w, r2.w
  add r3.w, l(1.000000), -cb0[r1.w + 26].x
  add r2.w, r2.w, -r3.w
  div_sat r2.w, r2.w, cb0[r1.w + 26].x
  add r2.w, -r2.w, l(1.000000)
  mul r6.yzw, r2.yyyy, cb0[r1.w + 28].xxyz
  mad r6.yzw, cb0[r1.w + 27].xxyz, r2.xxxx, r6.yyzw
  mad r6.yzw, cb0[r1.w + 29].xxyz, r2.zzzz, r6.yyzw
  add r9.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r9.xyz, r9.xyzx, r6.yzwy
  div r10.xyz, -r5.xyzx, r6.yzwy
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.yzwy
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r3.w, r9.y, r9.x
  min r3.w, r9.z, r3.w
  mad r5.xyz, r6.yzwy, r3.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  dp3 r3.w, r5.xyzx, r5.xyzx
  rsq r3.w, r3.w
  mul r5.xyz, r3.wwww, r5.xyzx
  mov r5.w, cb0[r1.w + 25].w
  sample_l_indexable(texturecubearray)(float,float,float,float) r5.xyz, r5.xyzw, t3.xyzw, s3, r0.y
  log r5.xyz, r5.xyzx
  mul r5.xyz, r5.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
  exp r5.xyz, r5.xyzx
  mad r5.xyz, r5.xyzx, cb0[r1.w + 24].xyzx, cb0[r1.w + 25].xyzx
  mul r5.xyz, r0.xxxx, r5.xyzx
  mul r5.xyz, r6.xxxx, r5.xyzx
  mad_sat r3.w, r2.w, cb0[r1.w + 26].z, -r0.z
  mad r1.xyz, r5.xyzx, r3.wwww, r1.xyzx
  mad r0.z, r2.w, cb0[r1.w + 26].z, r0.z
  iadd r0.w, r0.w, l(1)
endloop 
add r0.xyz, r1.xyzx, r8.xyzx
add r0.w, -v5.w, l(1.000000)
mad r7.xyz, r0.xyzx, r0.wwww, v5.xyzx
div r0.xy, r4.xyxx, r4.wwww
mad r0.xy, r0.xyxx, cb1[19].xyxx, cb1[19].wzww
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.zw, l(0), t4.zwxy
utof r0.zw, r0.zzzw
mul r0.xy, r0.zwzz, r0.xyxx
ftou r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t4.xyzw
min r0.x, r0.x, l(0.999999881)
mad r0.x, r0.x, cb1[20].z, -cb1[20].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
lt r0.x, r4.z, r0.x
and r0.x, r0.x, l(0x3f800000)
mul r0.y, r0.x, cb0[50].z
mul o1.xyzw, r0.yyyy, r7.xyzw
mad r0.x, -cb0[50].z, r0.x, l(1.000000)
mul o0.xyzw, r0.xxxx, r7.xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
