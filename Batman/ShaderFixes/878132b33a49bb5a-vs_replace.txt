//Plastic Cake cover in diner + other reflections

// ---- Created with 3Dmigoto v1.2.21 on Wed Dec 30 17:44:13 2015
Texture3D<float4> t1 : register(t1);

Texture3D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[26];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[23];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include <ShaderFixes/matrix.hlsl>

void main( 
  float v0 : SPLITPOS0,
  float v1 : SPLITPOS1,
  float v2 : SPLITPOS2,
  float3 v3 : TANGENT0,
  float4 v4 : NORMAL0,
  float4 v5 : COLOR1,
  float2 v6 : TEXCOORD0,
  out float4 o0 : TEXCOORD10,
  out float4 o1 : TEXCOORD11,
  out float4 o2 : TEXCOORD0,
  out float4 o3_corrected : TEXCOORD5,
  out float4 o4 : TEXCOORD6,
  out float4 o5 : TEXCOORD7,
  out float4 o6 : TEXCOORD8,
  out float4 o3_uncorrected : TEXCOORD9,
  out float4 o7 : SV_POSITION0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.xyzw = v4.xyzw * float4(2,2,2,2) + float4(-1,-1,-1,-1);
  r2.xyz = r1.yzx * r0.xyz;
  r0.xyz = r1.xyz * r0.yzx + -r2.xyz;
  r0.xyz = r0.xyz * r1.www;
  r2.xyz = r0.xyz * r1.yzx;
  r2.xyz = r0.zxy * r1.zxy + -r2.xyz;
  r2.xyz = r2.xyz * r1.www;
  r2.yw = cb0[1].xz * r2.yy;
  r2.xy = cb0[0].xz * r2.xx + r2.yw;
  r2.xy = cb0[2].xz * r2.zz + r2.xy;
  r0.zw = cb0[1].xz * r0.zz;
  r0.yz = cb0[0].xz * r0.yy + r0.zw;
  r0.xy = cb0[2].xz * r0.xx + r0.yz;
  r2.z = r0.x;
  o1.y = r0.y;
  r0.xy = cb0[1].xz * r1.yy;
  r0.xy = cb0[0].xz * r1.xx + r0.xy;
  r0.xy = cb0[2].xz * r1.zz + r0.xy;
  o1.w = cb0[22].w * r1.w;
  r2.w = r0.x;
  o1.z = r0.y;
  o0.xyz = r2.xzw;
  o1.x = r2.y;
  o2.xy = v6.xy;
  r0.xyzw = cb0[1].xyzw * v1.xxxx;
  r0.xyzw = cb0[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb0[2].xyzw * v2.xxxx + r0.xyzw;
  r0.xyzw = cb0[3].xyzw + r0.xyzw;
  r0.xyzw = cb1[9].xyzw + r0.xyzw;
o3_uncorrected.xyzw = r0.xyzw;
  o4.xyzw = v5.zyxw;
  r1.xyz = cb1[10].xyz + r0.xyz;
  r1.xyz = -cb1[25].xyz + r1.xyz;
  r1.xyz = r1.xyz * float3(4.88281257e-005,4.88281257e-005,8.13802108e-005) + float3(0.5,0.5,0.5);
  r1.xyz = t0.SampleLevel(s0_s, r1.xyz, 0).xyz;
  o5.xyz = r1.xyz;
  r1.xyzw = cb1[1].xyzw * r0.yyyy;
  r1.xyzw = cb1[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb1[2].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb1[3].xyzw * r0.wwww + r1.xyzw;
  
float4 s=StereoParams.Load(0);
float4 r20;
r20=r0;
r0.x += s.x*(r0.w-s.y);
o3_corrected = mul(r0, inverse(cb1[0], cb1[1], cb1[2], cb1[3])); 
  
  r1.x = saturate(0.00030048078 * r0.w);
  r1.x = r1.x * 0.390625 + 0.0078125;
  r1.yzw = float3(-3328,-19712,-167168) + r0.www;
  r1.yzw = saturate(float3(6.10351563e-005,1.35633682e-005,7.62939453e-006) * r1.yzw);
  r1.x = r1.y * 0.234375 + r1.x;
  r1.x = r1.z * 0.28125 + r1.x;
  r1.z = r1.w * 0.0625 + r1.x;
  r2.xy = r20.xy / r0.ww;
o7.xyzw = r20.xyzw;
  r1.xy = r2.xy * float2(0.5,-0.5) + float2(0.5,0.5);
  r0.xyzw = t1.SampleLevel(s1_s, r1.xyz, 0).xyzw;
  o6.xyz = r0.xyz * r0.xyz;
  o6.w = r0.w;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.21 on Wed Dec 30 17:44:13 2015
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SPLITPOS                 0   x           0     NONE   float   x   
// SPLITPOS                 1   x           1     NONE   float   x   
// SPLITPOS                 2   x           2     NONE   float   x   
// TANGENT                  0   xyz         3     NONE   float   xyz 
// NORMAL                   0   xyzw        4     NONE   float   xyzw
// COLOR                    1   xyzw        5     NONE   float   xyzw
// TEXCOORD                 0   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyz         0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 5   xyzw        3     NONE   float   xyzw
// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
// TEXCOORD                 7   xyz         5     NONE   float   xyz 
// TEXCOORD                 8   xyzw        6     NONE   float   xyzw
// SV_POSITION              0   xyzw        7      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[23], immediateIndexed
dcl_constantbuffer cb1[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input v0.x
dcl_input v1.x
dcl_input v2.x
dcl_input v3.xyz
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xy
dcl_output o0.xyz
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output_siv o7.xyzw, position
dcl_temps 3
mad r0.xyz, v3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyzw, v4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r2.xyz, r0.xyzx, r1.yzxy
mad r0.xyz, r1.xyzx, r0.yzxy, -r2.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
mul r2.xyz, r1.yzxy, r0.xyzx
mad r2.xyz, r0.zxyz, r1.zxyz, -r2.xyzx
mul r2.xyz, r1.wwww, r2.xyzx
mul r2.yw, r2.yyyy, cb0[1].xxxz
mad r2.xy, cb0[0].xzxx, r2.xxxx, r2.ywyy
mad r2.xy, cb0[2].xzxx, r2.zzzz, r2.xyxx
mul r0.zw, r0.zzzz, cb0[1].xxxz
mad r0.yz, cb0[0].xxzx, r0.yyyy, r0.zzwz
mad r0.xy, cb0[2].xzxx, r0.xxxx, r0.yzyy
mov r2.z, r0.x
mov o1.y, r0.y
mul r0.xy, r1.yyyy, cb0[1].xzxx
mad r0.xy, cb0[0].xzxx, r1.xxxx, r0.xyxx
mad r0.xy, cb0[2].xzxx, r1.zzzz, r0.xyxx
mul o1.w, r1.w, cb0[22].w
mov r2.w, r0.x
mov o1.z, r0.y
mov o0.xyz, r2.xzwx
mov o1.x, r2.y
mov o2.xy, v6.xyxx
mul r0.xyzw, v1.xxxx, cb0[1].xyzw
mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, v2.xxxx, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
add r0.xyzw, r0.xyzw, cb1[9].xyzw
mov o3.xyzw, r0.xyzw
mov o4.xyzw, v5.zyxw
add r1.xyz, r0.xyzx, cb1[10].xyzx
add r1.xyz, r1.xyzx, -cb1[25].xyzx
mad r1.xyz, r1.xyzx, l(0.0000488281257, 0.0000488281257, 0.0000813802108, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r1.xyz, r1.xyzx, t0.xyzw, s0, l(0.000000)
mov o5.xyz, r1.xyzx
mul r1.xyzw, r0.yyyy, cb1[1].xyzw
mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb1[3].xyzw, r0.wwww, r1.xyzw
mul_sat r1.x, r0.w, l(0.000300480780)
mad r1.x, r1.x, l(0.390625), l(0.00781250000)
add r1.yzw, r0.wwww, l(0.000000, -3328.000000, -19712.000000, -167168.000000)
mul_sat r1.yzw, r1.yyzw, l(0.000000, 0.0000610351563, 0.0000135633682, 0.00000762939453)
mad r1.x, r1.y, l(0.234375), r1.x
mad r1.x, r1.z, l(0.281250), r1.x
mad r1.z, r1.w, l(0.062500), r1.x
div r2.xy, r0.xyxx, r0.wwww
mov o7.xyzw, r0.xyzw
mad r1.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
mul o6.xyz, r0.xyzx, r0.xyzx
mov o6.w, r0.w
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  