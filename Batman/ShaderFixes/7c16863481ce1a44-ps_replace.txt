// ---- Created with 3Dmigoto v1.2.21 on Wed Dec 30 17:12:28 2015
Texture2D<float4> t0 : register(t0);

cbuffer cb1 : register(b1)
{
  float4 cb1[21];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[53];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float4 v5 : TEXCOORD5,
  float3 v6 : TEXCOORD6,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v5.xy / v5.ww;
  r0.xy = r0.xy * cb1[19].xy + cb1[19].wz;
  r0.xy = cb0[10].xy * r0.xy;
  r0.xy = (uint2)r0.xy;
  r0.zw = float2(0,0);
  r0.x = t0.Load(r0.xyz).x;
  r0.x = min(0.999999881, r0.x);
  r0.x = r0.x * cb1[20].z + -cb1[20].w;
  r0.x = 1 / r0.x;
  r0.yzw = v5.xyz / v5.www;
  r0.yz = cb0[50].xy * r0.yz;
  r0.w = r0.w + -r0.x;
  r0.w = saturate(0.0625 * r0.w);
  r0.w = max(cb0[52].x, r0.w);
  r0.yz = r0.yz * r0.xx;
  r1.xyz = cb1[16].xyz * r0.zzz;
  r1.xyz = cb1[15].xyz * r0.yyy + r1.xyz;
  r0.xyz = cb1[17].xyz * r0.xxx + r1.xyz;
  r0.xyz = cb1[18].xyz + r0.xyz;
  r0.xyz = cb1[9].xyz + r0.xyz;
  r0.x = dot(r0.xyz, cb0[51].xyz);
  r0.x = -cb0[51].w + r0.x;
  r0.y = -16 + r0.x;
  r0.x = -16 + -r0.x;
  r0.xy = saturate(float2(0.0625,0.0625) * r0.xy);
  r0.x = max(r0.y, r0.x);
  o0.xyzw = max(r0.xxxx, r0.wwww);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.21 on Wed Dec 30 17:12:28 2015
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyz         0     NONE   float       
// TEXCOORD                11   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
// TEXCOORD                 1   xy          3     NONE   float       
// TEXCOORD                 2   xy          4     NONE   float       
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[53], immediateIndexed
dcl_constantbuffer cb1[21], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 2
div r0.xy, v5.xyxx, v5.wwww
mad r0.xy, r0.xyxx, cb1[19].xyxx, cb1[19].wzww
mul r0.xy, r0.xyxx, cb0[10].xyxx
ftou r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t0.xyzw
min r0.x, r0.x, l(0.999999881)
mad r0.x, r0.x, cb1[20].z, -cb1[20].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
div r0.yzw, v5.xxyz, v5.wwww
mul r0.yz, r0.yyzy, cb0[50].xxyx
add r0.w, -r0.x, r0.w
mul_sat r0.w, r0.w, l(0.062500)
max r0.w, r0.w, cb0[52].x
mul r0.yz, r0.xxxx, r0.yyzy
mul r1.xyz, r0.zzzz, cb1[16].xyzx
mad r1.xyz, cb1[15].xyzx, r0.yyyy, r1.xyzx
mad r0.xyz, cb1[17].xyzx, r0.xxxx, r1.xyzx
add r0.xyz, r0.xyzx, cb1[18].xyzx
add r0.xyz, r0.xyzx, cb1[9].xyzx
dp3 r0.x, r0.xyzx, cb0[51].xyzx
add r0.x, r0.x, -cb0[51].w
add r0.y, r0.x, l(-16.000000)
add r0.x, -r0.x, l(-16.000000)
mul_sat r0.xy, r0.xyxx, l(0.062500, 0.062500, 0.000000, 0.000000)
max r0.x, r0.x, r0.y
max o0.xyzw, r0.wwww, r0.xxxx
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
