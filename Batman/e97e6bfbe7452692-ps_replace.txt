// Another possible shadow+surface shader.
//
// This one had bad input, where fxc combined two registers, changing the signature.

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[28];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
precise  float2 v0 : TEXCOORD0,
precise  float2 v1 : TEXCOORD1,
  float3 v2 : COLOR3,
  out float3 o0 : SV_TARGET0,
  out float3 o1 : SV_TARGET1,
  out float4 o2 : SV_TARGET2,
  precise out float4 o3 : SV_TARGET3)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = t1.SampleBias(s1_s, v1.xy, 0.000000000e+000).xyz;
  r0.xyz = max(float3(1.000000e-006,1.000000e-006,1.000000e-006), r0.xyz);
  r0.xyz = log2(r0.xyz);
  r0.xyz = float3(2.200000e+000,2.200000e+000,2.200000e+000) * r0.xyz;
  r0.xyz = exp2(r0.xyz);
  r0.w = 0.000000000e+000 < v1.x;
  r1.xyz = r0.www ? cb0[24].xyz : 0;
  r0.w = v1.x >= 0.000000000e+000;
  r1.xyz = r0.www ? r1.xyz : 0;
  r0.xyz = r1.xyz * r0.xyz + cb0[23].xyz;
  o0.xyz = cb0[22].xyz + r0.xyz;
  r0.xy = t0.SampleBias(s0_s, v0.xy, 0.000000000e+000).xy;
  r0.xy = r0.xy * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r0.w = dot(r0.xy, r0.xy);
  r0.w = 1.000000000e+000 + -r0.w;
  r0.z = sqrt(r0.w);
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.xyz = ddx_coarse(v2.zxy);
  r2.xyz = ddy_coarse(v2.xyz);
  r3.xyz = r2.yzx * r1.xyz;
  r3.xyz = r1.zxy * r2.zxy + -r3.xyz;
  r4.xyz = r3.xyz * r1.xyz;
  r1.xyz = r3.zxy * r1.yzx + -r4.xyz;
  r4.xy = ddy_coarse(v0.xy);
  r4.yzw = r4.yyy * r1.xyz;
  r1.xyz = r4.xxx * r1.yzx;
  r5.xyz = r3.zxy * r2.xyz;
  r2.xyz = r2.zxy * r3.xyz + -r5.xyz;
  r3.xy = ddx_coarse(v0.xy);
  r3.yzw = r3.yyy * r2.xyz + r4.yzw;
  r1.xyz = r3.xxx * r2.yzx + r1.xyz;
  r0.w = dot(r3.yzw, r3.yzw);
  r0.w = rsqrt(r0.w);
  r2.xyz = r3.yzw * r0.www;
  r3.xyz = cb0[5].xyz * r2.xxx;
  r3.xyz = cb0[4].xyz * r2.zzz + r3.xyz;
  r3.xyz = cb0[6].xyz * r2.yyy + r3.xyz;
  r3.xyz = r3.xyz * r0.yyy;
  r0.y = dot(r1.xyz, r1.xyz);
  r0.y = rsqrt(r0.y);
  r1.xyz = r1.xyz * r0.yyy;
  r4.xyz = cb0[5].xyz * r1.zzz;
  r4.xyz = cb0[4].xyz * r1.yyy + r4.xyz;
  r4.xyz = cb0[6].xyz * r1.xxx + r4.xyz;
  r0.xyw = r4.xyz * r0.xxx + r3.xyz;
  r3.xyz = r1.xyz * r2.xyz;
  r1.xyz = r1.zxy * r2.yzx + -r3.xyz;
  r2.xyz = cb0[5].xyz * r1.yyy;
  r1.xyw = cb0[4].xyz * r1.xxx + r2.xyz;
  r1.xyz = cb0[6].xyz * r1.zzz + r1.xyw;
  r0.xyz = r1.xyz * r0.zzz + r0.xyw;
  o1.xyz = r0.xyz * float3(5.000000e-001,5.000000e-001,5.000000e-001) + float3(5.000000e-001,5.000000e-001,5.000000e-001);
  r0.xyz = t2.SampleBias(s2_s, v0.xy, 0.000000000e+000).xyz;
  r0.xyz = max(float3(1.000000e-006,1.000000e-006,1.000000e-006), r0.xyz);
  r0.xyz = log2(r0.xyz);
  r0.xyz = float3(2.200000e+000,2.200000e+000,2.200000e+000) * r0.xyz;
  r0.xyz = exp2(r0.xyz);
  r1.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -cb0[22].xyz;
  o2.xyz = r1.xyz * r0.xyz;
  r0.x = asint(cb0[27].x);
  o2.w = 3.921568859e-003 * r0.x;
  r0.xyz = t3.SampleBias(s3_s, v0.xy, 0.000000000e+000).xyz;
  r0.xyz = max(float3(1.000000e-006,1.000000e-006,1.000000e-006), r0.yxz);
  r0.xyz = log2(r0.xyz);
  r0.xyz = float3(2.200000e+000,2.200000e+000,2.200000e+000) * r0.xyz;
  r0.xyz = exp2(r0.xyz);
  r0.w = r0.y * cb0[21].y + -r0.y;
  o3.x = cb0[25].x * r0.w + r0.y;
  o3.yz = r0.xz;
  o3.w = 0.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.1.27 on Sun Jul 05 22:51:36 2015
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xy          1     NONE   float   xy  
// COLOR                    3   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
// SV_TARGET                1   xyz         1   TARGET   float   xyz 
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
// SV_TARGET                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[28], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 6
sample_b_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t1.xyzw, s1, l(0.000000)
max r0.xyz, r0.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
exp r0.xyz, r0.xyzx
lt r0.w, l(0.000000), v1.x
and r1.xyz, r0.wwww, cb0[24].xyzx
ge r0.w, v1.x, l(0.000000)
and r1.xyz, r1.xyzx, r0.wwww
mad r0.xyz, r1.xyzx, r0.xyzx, cb0[23].xyzx
add o0.xyz, r0.xyzx, cb0[22].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r0.xy, v0.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
deriv_rtx_coarse r1.xyz, v2.zxyz
deriv_rty_coarse r2.xyz, v2.xyzx
mul r3.xyz, r1.xyzx, r2.yzxy
mad r3.xyz, r1.zxyz, r2.zxyz, -r3.xyzx
mul r4.xyz, r1.xyzx, r3.xyzx
mad r1.xyz, r3.zxyz, r1.yzxy, -r4.xyzx
deriv_rty_coarse r4.xy, v0.xyxx
mul r4.yzw, r1.xxyz, r4.yyyy
mul r1.xyz, r1.yzxy, r4.xxxx
mul r5.xyz, r2.xyzx, r3.zxyz
mad r2.xyz, r2.zxyz, r3.xyzx, -r5.xyzx
deriv_rtx_coarse r3.xy, v0.xyxx
mad r3.yzw, r3.yyyy, r2.xxyz, r4.yyzw
mad r1.xyz, r3.xxxx, r2.yzxy, r1.xyzx
dp3 r0.w, r3.yzwy, r3.yzwy
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r3.yzwy
mul r3.xyz, r2.xxxx, cb0[5].xyzx
mad r3.xyz, cb0[4].xyzx, r2.zzzz, r3.xyzx
mad r3.xyz, cb0[6].xyzx, r2.yyyy, r3.xyzx
mul r3.xyz, r0.yyyy, r3.xyzx
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx
mul r4.xyz, r1.zzzz, cb0[5].xyzx
mad r4.xyz, cb0[4].xyzx, r1.yyyy, r4.xyzx
mad r4.xyz, cb0[6].xyzx, r1.xxxx, r4.xyzx
mad r0.xyw, r4.xyxz, r0.xxxx, r3.xyxz
mul r3.xyz, r2.xyzx, r1.xyzx
mad r1.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
mul r2.xyz, r1.yyyy, cb0[5].xyzx
mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
mad r0.xyz, r1.xyzx, r0.zzzz, r0.xywx
mad o1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r0.xyz, v0.xyxx, t2.xyzw, s2, l(0.000000)
max r0.xyz, r0.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
exp r0.xyz, r0.xyzx
add r1.xyz, -cb0[22].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul o2.xyz, r0.xyzx, r1.xyzx
itof r0.x, cb0[27].x
mul o2.w, r0.x, l(0.003922)
sample_b_indexable(texture2d)(float,float,float,float) r0.xyz, v0.xyxx, t3.xyzw, s3, l(0.000000)
max r0.xyz, r0.yxzy, l(0.000001, 0.000001, 0.000001, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.w, r0.y, cb0[21].y, -r0.y
mad o3.x, cb0[25].x, r0.w, r0.y
mov o3.yz, r0.xxzx
mov o3.w, l(0)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
