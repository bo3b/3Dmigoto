
cbuffer csmshader : register(b6)
{
  float4 gCSMShaderVars_shared[12] : packoffset(c0);
  float4 gCSMDepthBias : packoffset(c12);
  float4 gCSMDepthSlopeBias : packoffset(c13);
  float4 gCSMResolution : packoffset(c14);
  float4 gCSMShadowParams : packoffset(c15);
  row_major float4x4 gLocalLightShadowData[8] : packoffset(c16);
  float4 gShadowTexParam : packoffset(c48);
}

cbuffer cascadeshadows_rendering_locals : register(b10)
{
  row_major float4x4 viewToWorldProjectionParam : packoffset(c0);
  float4 perspectiveShearParam : packoffset(c4);
  float4 shadowParams2 : packoffset(c5);
}
SamplerState depthBufferSamp_s : register(s3);
SamplerComparisonState gCSMShadowTextureSamp_s : register(s15);
Texture2D<float4> depthBufferSamp : register(t3);
Texture2D<float4> gCSMShadowTexture : register(t15);
Texture2D<float4> StereoParmsTexture : register(t20);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float3 v3 : TEXCOORD2,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v1.xy * float2(2,2) + float2(-1,-1);
  r0.xy = r0.xy * float2(1,-1) + perspectiveShearParam.xy;
  r0.y = viewToWorldProjectionParam._m13 * r0.y;
  r0.x = viewToWorldProjectionParam._m03 * r0.x;
  r0.yzw = viewToWorldProjectionParam._m10_m11_m12 * r0.yyy;
  r0.xyz = r0.xxx * viewToWorldProjectionParam._m00_m01_m02 + r0.yzw;
  r0.xyz = -viewToWorldProjectionParam._m20_m21_m22 + r0.xyz;
  r1.xyzw = depthBufferSamp.Sample(depthBufferSamp_s, v1.xy).xyzw;
  r0.w = 1 + viewToWorldProjectionParam._m33;
  r0.w = r0.w + -r1.x;
  r0.w = viewToWorldProjectionParam._m23 / r0.w;
  r1.xyzw = StereoParmsTexture.Load(float4(0,0,0,0)).xyzw;
  r1.y = -r1.y + r0.w;
  r1.x = r1.x * r1.y;
  r1.x = viewToWorldProjectionParam._m03 * r1.x;
  r1.xyz = -viewToWorldProjectionParam._m00_m01_m02 * r1.xxx + viewToWorldProjectionParam._m30_m31_m32;
  r0.xyz = r0.xyz * r0.www + r1.xyz;
  r0.w = saturate(r0.w * gCSMShaderVars_shared[0].w + gCSMShaderVars_shared[1].w);
  r1.xyz = gCSMShaderVars_shared[1].xyz * r0.yyy;
  r1.xyz = r0.xxx * gCSMShaderVars_shared[0].xyz + r1.xyz;
  r0.xyz = r0.zzz * gCSMShaderVars_shared[2].xyz + r1.xyz;
  r0.xyz = r0.xyz * gCSMShaderVars_shared[7].xyz + gCSMShaderVars_shared[11].xyz;
  r1.x = r0.z;
  r1.yzw = r0.xyz * float3(1,0.25,1) + float3(0.5,0.875,0);
  r0.x = max(abs(r0.x), abs(r0.y));
  r0.x = -0.449999988 + r0.x;
  r0.x = saturate(15 * r0.x);
  r2.y = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r1.yz, r1.x).x;
  r3.xy = float2(-1,-0.25) * gCSMResolution.zw;
  r3.z = 0;
  r3.xyz = r3.xyz + r1.yzw;
  r3.x = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r3.xy, r3.z).x;
  r4.xy = float2(0,-0.25) * gCSMResolution.zw;
  r4.z = 0;
  r4.xyz = r4.xyz + r1.yzw;
  r3.y = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r4.xy, r4.z).x;
  r4.xy = float2(1,-0.25) * gCSMResolution.zw;
  r4.z = 0;
  r4.xyz = r4.xyz + r1.yzw;
  r3.z = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r4.xy, r4.z).x;
  r4.xy = float2(-1,0) * gCSMResolution.zw;
  r4.z = 0;
  r4.xyz = r4.xyz + r1.yzw;
  r2.x = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r4.xy, r4.z).x;
  r4.xy = float2(1,0) * gCSMResolution.zw;
  r4.z = 0;
  r4.xyz = r4.xyz + r1.yzw;
  r2.z = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r4.xy, r4.z).x;
  r2.xyz = r3.xyz + r2.xyz;
  r3.xy = float2(-1,0.25) * gCSMResolution.zw;
  r3.z = 0;
  r3.xyz = r3.xyz + r1.yzw;
  r3.x = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r3.xy, r3.z).x;
  r4.xy = float2(0,0.25) * gCSMResolution.zw;
  r4.z = 0;
  r4.xyz = r4.xyz + r1.yzw;
  r3.y = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r4.xy, r4.z).x;
  r4.xy = float2(1,0.25) * gCSMResolution.zw;
  r4.z = 0;
  r1.xyz = r4.xyz + r1.yzw;
  r3.z = gCSMShadowTexture.SampleCmpLevelZero(gCSMShadowTextureSamp_s, r1.xy, r1.z).x;
  r1.xyz = r3.xyz + r2.xyz;
  r0.y = dot(r1.xyz, float3(1,1,1));
  r0.y = r0.y * 0.111111112 + r0.w;
  o0.xyzw = r0.yyyy + r0.xxxx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer csmshader
// {
//
//   float4 gCSMShaderVars_shared[12];  // Offset:    0 Size:   192
//   float4 gCSMDepthBias;              // Offset:  192 Size:    16 [unused]
//   float4 gCSMDepthSlopeBias;         // Offset:  208 Size:    16 [unused]
//   float4 gCSMResolution;             // Offset:  224 Size:    16
//   float4 gCSMShadowParams;           // Offset:  240 Size:    16 [unused]
//   row_major float4x4 gLocalLightShadowData[8];// Offset:  256 Size:   512 [unused]
//   float4 gShadowTexParam;            // Offset:  768 Size:    16 [unused]
//
// }
//
// cbuffer cascadeshadows_rendering_locals
// {
//
//   row_major float4x4 viewToWorldProjectionParam;// Offset:    0 Size:    64
//   float4 perspectiveShearParam;      // Offset:   64 Size:    16
//   float4 shadowParams2;              // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// depthBufferSamp                   sampler      NA          NA    3        1
// gCSMShadowTextureSamp           sampler_c      NA          NA   15        1
// depthBufferSamp                   texture  float4          2d    3        1
// gCSMShadowTexture                 texture  float4          2d   15        1
// StereoParmsTexture                texture  float4          2d   20        1
// csmshader                         cbuffer      NA          NA    6        1
// cascadeshadows_rendering_locals    cbuffer      NA          NA   10        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb6[15], immediateIndexed
dcl_constantbuffer cb10[5], immediateIndexed
dcl_sampler s3, mode_default
dcl_sampler s15, mode_comparison
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), cb10[4].xyxx
mul r0.y, r0.y, cb10[1].w
mul r0.x, r0.x, cb10[0].w
mul r0.yzw, r0.yyyy, cb10[1].xxyz
mad r0.xyz, r0.xxxx, cb10[0].xyzx, r0.yzwy
add r0.xyz, r0.xyzx, -cb10[2].xyzx
sample r1.xyzw, v1.xyxx, t3.xyzw, s3
add r0.w, cb10[3].w, l(1.000000)
add r0.w, -r1.x, r0.w
div r0.w, cb10[2].w, r0.w
ld r1.xyzw, l(0, 0, 0, 0), t20.xyzw
add r1.y, r0.w, -r1.y
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, cb10[0].w
mad r1.xyz, -cb10[0].xyzx, r1.xxxx, cb10[3].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
mad_sat r0.w, r0.w, cb6[0].w, cb6[1].w
mul r1.xyz, r0.yyyy, cb6[1].xyzx
mad r1.xyz, r0.xxxx, cb6[0].xyzx, r1.xyzx
mad r0.xyz, r0.zzzz, cb6[2].xyzx, r1.xyzx
mad r0.xyz, r0.xyzx, cb6[7].xyzx, cb6[11].xyzx
mov r1.x, r0.z
mad r1.yzw, r0.xxyz, l(0.000000, 1.000000, 0.250000, 1.000000), l(0.000000, 0.500000, 0.875000, 0.000000)
max r0.x, |r0.y|, |r0.x|
add r0.x, r0.x, l(-0.450000)
mul_sat r0.x, r0.x, l(15.000000)
sample_c_lz r2.y, r1.yzyy, t15.xxxx, s15, r1.x
mul r3.xy, cb6[14].zwzz, l(-1.000000, -0.250000, 0.000000, 0.000000)
mov r3.z, l(0)
add r3.xyz, r1.yzwy, r3.xyzx
sample_c_lz r3.x, r3.xyxx, t15.xxxx, s15, r3.z
mul r4.xy, cb6[14].zwzz, l(0.000000, -0.250000, 0.000000, 0.000000)
mov r4.z, l(0)
add r4.xyz, r1.yzwy, r4.xyzx
sample_c_lz r3.y, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, cb6[14].zwzz, l(1.000000, -0.250000, 0.000000, 0.000000)
mov r4.z, l(0)
add r4.xyz, r1.yzwy, r4.xyzx
sample_c_lz r3.z, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, cb6[14].zwzz, l(-1.000000, 0.000000, 0.000000, 0.000000)
mov r4.z, l(0)
add r4.xyz, r1.yzwy, r4.xyzx
sample_c_lz r2.x, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, cb6[14].zwzz, l(1.000000, 0.000000, 0.000000, 0.000000)
mov r4.z, l(0)
add r4.xyz, r1.yzwy, r4.xyzx
sample_c_lz r2.z, r4.xyxx, t15.xxxx, s15, r4.z
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xy, cb6[14].zwzz, l(-1.000000, 0.250000, 0.000000, 0.000000)
mov r3.z, l(0)
add r3.xyz, r1.yzwy, r3.xyzx
sample_c_lz r3.x, r3.xyxx, t15.xxxx, s15, r3.z
mul r4.xy, cb6[14].zwzz, l(0.000000, 0.250000, 0.000000, 0.000000)
mov r4.z, l(0)
add r4.xyz, r1.yzwy, r4.xyzx
sample_c_lz r3.y, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, cb6[14].zwzz, l(1.000000, 0.250000, 0.000000, 0.000000)
mov r4.z, l(0)
add r1.xyz, r1.yzwy, r4.xyzx
sample_c_lz r3.z, r1.xyxx, t15.xxxx, s15, r1.z
add r1.xyz, r2.xyzx, r3.xyzx
dp3 r0.y, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.y, r0.y, l(0.111111), r0.w
add o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 66 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.1.36 on Fri Jul 31 21:35:12 2015
//
//
// Buffer Definitions: 
//
// cbuffer csmshader
// {
//
//   float4 gCSMShaderVars_shared[12];  // Offset:    0 Size:   192
//   float4 gCSMDepthBias;              // Offset:  192 Size:    16 [unused]
//   float4 gCSMDepthSlopeBias;         // Offset:  208 Size:    16 [unused]
//   float4 gCSMResolution;             // Offset:  224 Size:    16
//   float4 gCSMShadowParams;           // Offset:  240 Size:    16 [unused]
//   row_major float4x4 gLocalLightShadowData[8];// Offset:  256 Size:   512 [unused]
//   float4 gShadowTexParam;            // Offset:  768 Size:    16 [unused]
//
// }
//
// cbuffer cascadeshadows_rendering_locals
// {
//
//   row_major float4x4 viewToWorldProjectionParam;// Offset:    0 Size:    64
//   float4 perspectiveShearParam;      // Offset:   64 Size:    16
//   float4 shadowParams2;              // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// depthBufferSamp_s                 sampler      NA          NA    3        1
// gCSMShadowTextureSamp_s         sampler_c      NA          NA   15        1
// depthBufferSamp                   texture  float4          2d    3        1
// gCSMShadowTexture                 texture  float4          2d   15        1
// StereoParmsTexture                texture  float4          2d   20        1
// csmshader                         cbuffer      NA          NA    6        1
// cascadeshadows_rendering_locals    cbuffer      NA          NA   10        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb6[15], immediateIndexed
dcl_constantbuffer cb10[5], immediateIndexed
dcl_sampler s3, mode_default
dcl_sampler s15, mode_comparison
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), cb10[4].xyxx
mul r0.y, r0.y, cb10[1].w
mul r0.x, r0.x, cb10[0].w
mul r0.yzw, r0.yyyy, cb10[1].xxyz
mad r0.xyz, r0.xxxx, cb10[0].xyzx, r0.yzwy
add r0.xyz, r0.xyzx, -cb10[2].xyzx
sample r1.xyzw, v1.xyxx, t3.xyzw, s3
add r0.w, l(1.000000), cb10[3].w
add r0.w, -r1.x, r0.w
div r0.w, cb10[2].w, r0.w
ld r1.xyzw, l(0, 0, 0, 0), t20.xyzw
add r1.y, r0.w, -r1.y
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, cb10[0].w
mad r1.xyz, -cb10[0].xyzx, r1.xxxx, cb10[3].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
mad_sat r0.w, r0.w, cb6[0].w, cb6[1].w
mul r1.xyz, r0.yyyy, cb6[1].xyzx
mad r1.xyz, r0.xxxx, cb6[0].xyzx, r1.xyzx
mad r0.xyz, r0.zzzz, cb6[2].xyzx, r1.xyzx
mad r0.xyz, r0.xyzx, cb6[7].xyzx, cb6[11].xyzx
mad r1.xy, r0.xyxx, l(1.000000, 0.250000, 0.000000, 0.000000), l(0.500000, 0.875000, 0.000000, 0.000000)
sample_c_lz r1.y, r1.xyxx, t15.xxxx, s15, r0.z
mad r2.xyz, r0.xyzx, l(1.000000, 0.250000, 1.000000, 0.000000), l(0.500000, 0.875000, 0.000000, 0.000000)
max r0.x, |r0.y|, |r0.x|
add r0.x, r0.x, l(-0.450000)
mul_sat r0.x, r0.x, l(15.000000)
mul r3.xy, l(-1.000000, -0.250000, 0.000000, 0.000000), cb6[14].zwzz
mov r3.z, l(0)
add r3.xyz, r2.xyzx, r3.xyzx
sample_c_lz r3.x, r3.xyxx, t15.xxxx, s15, r3.z
mul r4.xy, l(0.000000, -0.250000, 0.000000, 0.000000), cb6[14].zwzz
mov r4.z, l(0)
add r4.xyz, r2.xyzx, r4.xyzx
sample_c_lz r3.y, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, l(1.000000, -0.250000, 0.000000, 0.000000), cb6[14].zwzz
mov r4.z, l(0)
add r4.xyz, r2.xyzx, r4.xyzx
sample_c_lz r3.z, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, l(-1.000000, 0.000000, 0.000000, 0.000000), cb6[14].zwzz
mov r4.z, l(0)
add r4.xyz, r2.xyzx, r4.xyzx
sample_c_lz r1.x, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, l(1.000000, 0.000000, 0.000000, 0.000000), cb6[14].zwzz
mov r4.z, l(0)
add r4.xyz, r2.xyzx, r4.xyzx
sample_c_lz r1.z, r4.xyxx, t15.xxxx, s15, r4.z
add r1.xyz, r1.xyzx, r3.xyzx
mul r3.xy, l(-1.000000, 0.250000, 0.000000, 0.000000), cb6[14].zwzz
mov r3.z, l(0)
add r3.xyz, r2.xyzx, r3.xyzx
sample_c_lz r3.x, r3.xyxx, t15.xxxx, s15, r3.z
mul r4.xy, l(0.000000, 0.250000, 0.000000, 0.000000), cb6[14].zwzz
mov r4.z, l(0)
add r4.xyz, r2.xyzx, r4.xyzx
sample_c_lz r3.y, r4.xyxx, t15.xxxx, s15, r4.z
mul r4.xy, l(1.000000, 0.250000, 0.000000, 0.000000), cb6[14].zwzz
mov r4.z, l(0)
add r2.xyz, r2.xyzx, r4.xyzx
sample_c_lz r3.z, r2.xyxx, t15.xxxx, s15, r2.z
add r1.xyz, r1.xyzx, r3.xyzx
dp3 r0.y, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.y, r0.y, l(0.111111), r0.w
add o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 66 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
