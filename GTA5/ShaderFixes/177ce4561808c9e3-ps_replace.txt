
cbuffer rage_matrices : register(b1)
{
  row_major float4x4 gWorld : packoffset(c0);
  row_major float4x4 gWorldView : packoffset(c4);
  row_major float4x4 gWorldViewProj : packoffset(c8);
  row_major float4x4 gViewInverse : packoffset(c12);
}

cbuffer misc_globals : register(b2)
{
  float4 globalFade : packoffset(c0);
  float globalHeightScale : packoffset(c1);
  float globalShaderQuality : packoffset(c1.y);
  float globalReuseMe00001 : packoffset(c1.z);
  float globalReuseMe00002 : packoffset(c1.w);
  float4 POMFlags : packoffset(c2);
  float4 g_Rage_Tessellation_CameraPosition : packoffset(c3);
  float4 g_Rage_Tessellation_CameraZAxis : packoffset(c4);
  float4 g_Rage_Tessellation_ScreenSpaceErrorParams : packoffset(c5);
  float4 g_Rage_Tessellation_LinearScale : packoffset(c6);
  float4 g_Rage_Tessellation_Frustum[4] : packoffset(c7);
  float4 g_Rage_Tessellation_Epsilons : packoffset(c11);
  float4 globalScalars : packoffset(c12);
  float4 globalScalars2 : packoffset(c13);
  float4 globalScalars3 : packoffset(c14);
  float4 globalScreenSize : packoffset(c15);
  uint4 gTargetAAParams : packoffset(c16);
  float4 colorize : packoffset(c17);
  float4 gGlobalParticleShadowBias : packoffset(c18);
  float gGlobalParticleDofAlphaScale : packoffset(c19);
  float gGlobalFogIntensity : packoffset(c19.y);
  float4 gPlayerLFootPos : packoffset(c20);
  float4 gPlayerRFootPos : packoffset(c21);
  float4 gStereoParams : packoffset(c22);
  float4 gStereoParams1 : packoffset(c23);
}

cbuffer lighting_globals : register(b3)
{
  float4 gDirectionalLight : packoffset(c0);
  float4 gDirectionalColour : packoffset(c1);
  int gNumForwardLights : packoffset(c2);
  float4 gLightPositionAndInvDistSqr[8] : packoffset(c3);
  float4 gLightDirectionAndFalloffExponent[8] : packoffset(c11);
  float4 gLightColourAndCapsuleExtent[8] : packoffset(c19);
  float gLightConeScale[8] : packoffset(c27);
  float gLightConeOffset[8] : packoffset(c35);
  float4 gLightNaturalAmbient0 : packoffset(c43);
  float4 gLightNaturalAmbient1 : packoffset(c44);
  float4 gLightArtificialIntAmbient0 : packoffset(c45);
  float4 gLightArtificialIntAmbient1 : packoffset(c46);
  float4 gLightArtificialExtAmbient0 : packoffset(c47);
  float4 gLightArtificialExtAmbient1 : packoffset(c48);
  float4 gDirectionalAmbientColour : packoffset(c49);
  float4 globalFogParams[5] : packoffset(c50);
  float4 globalFogColor : packoffset(c55);
  float4 globalFogColorE : packoffset(c56);
  float4 globalFogColorN : packoffset(c57);
  float4 globalFogColorMoon : packoffset(c58);
  float4 gReflectionTweaks : packoffset(c59);
}

cbuffer water_globals : register(b4)
{
  float2 gWorldBaseVS : packoffset(c0);
  float4 gFlowParams : packoffset(c1);
  float4 gFlowParams2 : packoffset(c2);
  float4 gWaterAmbientColor : packoffset(c3);
  float4 gWaterDirectionalColor : packoffset(c4);
  float4 gScaledTime : packoffset(c5);
  float4 gOceanParams0 : packoffset(c6);
  float4 gOceanParams1 : packoffset(c7);
  row_major float4x4 gReflectionWorldViewProj : packoffset(c8);
  float4 gFogLight_Debugging : packoffset(c12);
  row_major float4x4 gRefractionWorldViewProj : packoffset(c13);
  float4 gOceanParams2 : packoffset(c17);
}

cbuffer water_common_locals : register(b9)
{
  float RippleBumpiness : packoffset(c0);
  float RippleSpeed : packoffset(c0.y);
  float RippleScale : packoffset(c0.z);
  float SpecularIntensity : packoffset(c0.w);
  float SpecularFalloff : packoffset(c1);
  float ParallaxIntensity : packoffset(c1.y);
}
SamplerState ReflectionSampler_s : register(s1);
SamplerState StaticFoamSampler_s : register(s4);
SamplerState BlendSampler_s : register(s6);
SamplerState PlanarReflectionSampler_s : register(s7);
SamplerState WetSampler_s : register(s9);
SamplerState WaterBumpSampler_s : register(s10);
SamplerState RefractionSampler_s : register(s12);
SamplerState WaterBumpSampler2_s : register(s14);
SamplerState LightingSampler_s : register(s15);
Texture2D<float4> ReflectionSampler : register(t1);
Texture2D<float4> StaticFoamSampler : register(t4);
Texture2D<float4> BlendSampler : register(t6);
Texture2D<float4> PlanarReflectionSampler : register(t7);
Texture2D<float4> WetSampler : register(t9);
Texture2D<float4> WaterBumpSampler : register(t10);
Texture2D<float4> RefractionSampler : register(t12);
Texture2D<float4> WaterBumpSampler2 : register(t14);
Texture2D<float4> LightingSampler : register(t15);
Texture2D<float4> StereoParmsTexture : register(t20);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : TEXCOORD6,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = RippleSpeed * v5.zw;
  r1.xyzw = -r0.xyxy * gFlowParams.xxyy + v2.xyxy;
  r0.x = dot(r0.xy, r0.xy);
  r0.x = sqrt(r0.x);
  r0.x = min(1, r0.x);
  r0.yz = RippleScale * r1.xy;
  r1.xy = r1.zw * RippleScale + float2(0.5,0.5);
  r1.xy = float2(2.29999995,2.29999995) * r1.xy;
  r0.yz = float2(2.29999995,2.29999995) * r0.yz;
  r2.xyzw = WaterBumpSampler2.Sample(WaterBumpSampler2_s, r0.yz).xyzw;
  r3.xyzw = WaterBumpSampler.Sample(WaterBumpSampler_s, r0.yz).xyzw;
  r4.xyzw = WaterBumpSampler2.Sample(WaterBumpSampler2_s, r1.xy).xyzw;
  r1.xyzw = WaterBumpSampler.Sample(WaterBumpSampler_s, r1.xy).xyzw;
  r3.zw = r1.xy;
  r2.zw = r4.xy;
  r1.xyzw = r3.xyzw + r2.xyzw;
  r2.xyzw = float4(0.5,0.5,0.5,0.5) + r3.xyzw;
  r1.xyzw = -r2.xyzw + r1.xyzw;
  r0.xyzw = r0.xxxx * r1.xyzw + r2.xyzw;
  r0.xyzw = r0.xyzw * float4(2,2,2,2) + float4(-2,-2,-2,-2);
  r0.xyzw = gFlowParams.zzww * r0.xyzw;
  r0.xy = r0.xy + r0.zw;
  r0.zw = RippleBumpiness * r0.xy;
  r0.x = dot(r0.xy, r0.xy);
  r0.x = sqrt(r0.x);
  r0.x = r0.x * 0.270000011 + 0.439999998;
  r1.xy = r0.zw * v2.ww + v4.xy;
  r1.z = v4.z;
  r0.y = dot(r1.xyz, r1.xyz);
  r0.y = rsqrt(r0.y);
  r2.xyz = -r1.xyz * r0.yyy + float3(0,0,1);
  r0.yzw = r1.xyz * r0.yyy;
  r1.xyz = r2.xyz * float3(0.833333313,0.833333313,0.833333313) + r0.yzw;
  r2.xyz = -gViewInverse._m30_m31_m32 + v2.xyz;
  r1.w = dot(r2.xyz, r2.xyz);
  r1.w = rsqrt(r1.w);
  r3.xyz = r2.xyz * r1.www;
  r2.w = dot(r3.xyz, r1.xyz);
  r2.w = r2.w + r2.w;
  r1.xyz = r1.xyz * -r2.www + r3.xyz;
  r2.w = dot(-r3.xyz, r0.yzw);
  r3.x = -r2.z * r1.w + -r1.z;
  r3.x = -r2.z * r1.w + abs(r3.x);
  r1.z = -r3.x + r1.z;
  r1.z = v5.y * r1.z + r3.x;
  r3.x = 1 + abs(r1.z);
  r3.yz = float2(0.25,0.5) * r1.xy;
  r3.xy = r3.yz / r3.xx;
  r3.yz = float2(0.25,0.5) + -r3.xy;
  r3.w = 1 + -r3.y;
  r4.x = 0 < r1.z;
  r3.x = r4.x ? r3.w : r3.y;
  r3.xyzw = ReflectionSampler.Sample(ReflectionSampler_s, r3.xz).xyzw;
  r4.xyz = gReflectionWorldViewProj._m10_m13_m11 * r1.yyy;
  r4.xyz = r1.xxx * gReflectionWorldViewProj._m00_m03_m01 + r4.xyz;
  r1.xyz = r1.zzz * gReflectionWorldViewProj._m20_m23_m21 + r4.xyz;
  r4.xyz = float3(0.5,0.5,0.5) * r1.xyz;
  r5.y = r1.y * 0.5 + -r4.z;
  r5.x = r4.x + r4.y;
  r1.xy = r5.xy / r1.yy;
  r4.xyzw = PlanarReflectionSampler.Sample(PlanarReflectionSampler_s, r1.xy).xyzw;
  r1.xyz = -r4.xyz + r3.xyz;
  r1.xyz = v5.yyy * r1.xyz + r4.xyz;
  r3.xyzw = WetSampler.Sample(WetSampler_s, v1.zw).xyzw;
  r3.x = 0.649999976 * r3.x;
  r3.y = 512 + -v4.w;
  r3.y = saturate(0.001953125 * r3.y);
  r3.x = r3.x * r3.y;
  r4.xyzw = StaticFoamSampler.Sample(StaticFoamSampler_s, v3.zw).xyzw;
  r3.y = 0.349999994 * r4.y;
  r3.x = r3.y * r0.x + r3.x;
  r3.yw = float2(0.5,0.5);
  r4.xyzw = BlendSampler.Sample(BlendSampler_s, r3.xy).xyzw;
  r5.xy = -r0.yz;
  r5.z = 0;
  r4.xzw = r2.xyz * r1.www + r5.xyz;
  r2.xyz = r2.xyz * r1.www + gDirectionalLight.xyz;
  r5.xy = v6.xy / v6.ww;
  r6.xyzw = LightingSampler.Sample(LightingSampler_s, r5.xy).xyzw;
  r4.xzw = r4.xzw * r6.yyy + v2.xyz;
  r5.z = r6.y;
  r6.xyz = gRefractionWorldViewProj._m10_m11_m13 * r4.zzz;
  r6.xyz = r4.xxx * gRefractionWorldViewProj._m00_m01_m03 + r6.xyz;
  r4.xzw = r4.www * gRefractionWorldViewProj._m20_m21_m23 + r6.xyz;
  r4.xzw = gRefractionWorldViewProj._m30_m31_m33 + r4.xzw;
  r6.xyzw = StereoParmsTexture.Load(float4(0,0,0,0)).xyzw;
  r0.x = -r6.y + r4.w;
  r0.x = r6.x * r0.x + r4.x;
  r3.xy = float2(0.5,0.5) * r4.wz;
  r6.x = r0.x * 0.5 + r3.x;
  r6.y = r4.w * 0.5 + -r3.y;
  r6.xy = r6.xy / r4.ww;
  r7.xyzw = LightingSampler.Sample(LightingSampler_s, r6.xy).xyzw;
  r0.x = 0 != r7.z;
  r6.z = r7.y;
  r4.xzw = r0.xxx ? r5.xyz : r6.xyz;
  r0.x = r4.y * r4.w;
  r5.xyzw = RefractionSampler.Sample(RefractionSampler_s, r4.xz).xyzw;
  r1.w = dot(r0.yzw, -gDirectionalLight.xyz);
  r1.w = saturate(r1.w * 0.699999988 + 0.300000012);
  r4.xyz = gWaterDirectionalColor.xyz * r1.www;
  r4.xyz = r4.xyz * r7.www + gWaterAmbientColor.xyz;
  r4.xyz = r4.xyz * r0.xxx + r5.xyz;
  r1.xyz = -r4.xyz + r1.xyz;
  r0.x = 1 + -r2.w;
  r3.z = r0.x * 0.300000012 + r2.w;
  r3.xyzw = BlendSampler.Sample(BlendSampler_s, r3.zw).xyzw;
  r1.xyz = r3.xxx * r1.xyz + r4.xyz;
  r0.x = dot(r2.xyz, r2.xyz);
  r0.x = rsqrt(r0.x);
  r2.xyz = r2.xyz * r0.xxx;
  r0.x = saturate(dot(-r2.xyz, r0.yzw));
  r0.x = log2(r0.x);
  r0.x = SpecularFalloff * r0.x;
  r0.x = exp2(r0.x);
  r0.x = SpecularIntensity * r0.x;
  r0.x = r0.x * r7.w;
  r0.xyz = gWaterDirectionalColor.xyz * r0.xxx + r1.xyz;
  r0.xyz = r0.xyz + -r4.xyz;
  r0.xyz = r4.www * r0.xyz + r4.xyz;
  o0.xyz = globalScalars3.zzz * r0.xyz;
  o0.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64 [unused]
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64 [unused]
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64
//
// }
//
// cbuffer misc_globals
// {
//
//   float4 globalFade;                 // Offset:    0 Size:    16 [unused]
//   float globalHeightScale;           // Offset:   16 Size:     4 [unused]
//   float globalShaderQuality;         // Offset:   20 Size:     4 [unused]
//   float globalReuseMe00001;          // Offset:   24 Size:     4 [unused]
//   float globalReuseMe00002;          // Offset:   28 Size:     4 [unused]
//   float4 POMFlags;                   // Offset:   32 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraPosition;// Offset:   48 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraZAxis;// Offset:   64 Size:    16 [unused]
//   float4 g_Rage_Tessellation_ScreenSpaceErrorParams;// Offset:   80 Size:    16 [unused]
//   float4 g_Rage_Tessellation_LinearScale;// Offset:   96 Size:    16 [unused]
//   float4 g_Rage_Tessellation_Frustum[4];// Offset:  112 Size:    64 [unused]
//   float4 g_Rage_Tessellation_Epsilons;// Offset:  176 Size:    16 [unused]
//   float4 globalScalars;              // Offset:  192 Size:    16 [unused]
//   float4 globalScalars2;             // Offset:  208 Size:    16 [unused]
//   float4 globalScalars3;             // Offset:  224 Size:    16
//   float4 globalScreenSize;           // Offset:  240 Size:    16 [unused]
//   uint4 gTargetAAParams;             // Offset:  256 Size:    16 [unused]
//   float4 colorize;                   // Offset:  272 Size:    16 [unused]
//   float4 gGlobalParticleShadowBias;  // Offset:  288 Size:    16 [unused]
//   float gGlobalParticleDofAlphaScale;// Offset:  304 Size:     4 [unused]
//   float gGlobalFogIntensity;         // Offset:  308 Size:     4 [unused]
//   float4 gPlayerLFootPos;            // Offset:  320 Size:    16 [unused]
//   float4 gPlayerRFootPos;            // Offset:  336 Size:    16 [unused]
//   float4 gStereoParams;              // Offset:  352 Size:    16 [unused]
//   float4 gStereoParams1;             // Offset:  368 Size:    16 [unused]
//
// }
//
// cbuffer lighting_globals
// {
//
//   float4 gDirectionalLight;          // Offset:    0 Size:    16
//   float4 gDirectionalColour;         // Offset:   16 Size:    16 [unused]
//   int gNumForwardLights;             // Offset:   32 Size:     4 [unused]
//   float4 gLightPositionAndInvDistSqr[8];// Offset:   48 Size:   128 [unused]
//   float4 gLightDirectionAndFalloffExponent[8];// Offset:  176 Size:   128 [unused]
//   float4 gLightColourAndCapsuleExtent[8];// Offset:  304 Size:   128 [unused]
//   float gLightConeScale[8];          // Offset:  432 Size:   116 [unused]
//   float gLightConeOffset[8];         // Offset:  560 Size:   116 [unused]
//   float4 gLightNaturalAmbient0;      // Offset:  688 Size:    16 [unused]
//   float4 gLightNaturalAmbient1;      // Offset:  704 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient0;// Offset:  720 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient1;// Offset:  736 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient0;// Offset:  752 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient1;// Offset:  768 Size:    16 [unused]
//   float4 gDirectionalAmbientColour;  // Offset:  784 Size:    16 [unused]
//   float4 globalFogParams[5];         // Offset:  800 Size:    80 [unused]
//   float4 globalFogColor;             // Offset:  880 Size:    16 [unused]
//   float4 globalFogColorE;            // Offset:  896 Size:    16 [unused]
//   float4 globalFogColorN;            // Offset:  912 Size:    16 [unused]
//   float4 globalFogColorMoon;         // Offset:  928 Size:    16 [unused]
//   float4 gReflectionTweaks;          // Offset:  944 Size:    16 [unused]
//
// }
//
// cbuffer water_globals
// {
//
//   float2 gWorldBaseVS;               // Offset:    0 Size:     8 [unused]
//   float4 gFlowParams;                // Offset:   16 Size:    16
//   float4 gFlowParams2;               // Offset:   32 Size:    16 [unused]
//   float4 gWaterAmbientColor;         // Offset:   48 Size:    16
//   float4 gWaterDirectionalColor;     // Offset:   64 Size:    16
//   float4 gScaledTime;                // Offset:   80 Size:    16 [unused]
//   float4 gOceanParams0;              // Offset:   96 Size:    16 [unused]
//   float4 gOceanParams1;              // Offset:  112 Size:    16 [unused]
//   row_major float4x4 gReflectionWorldViewProj;// Offset:  128 Size:    64
//   float4 gFogLight_Debugging;        // Offset:  192 Size:    16 [unused]
//   row_major float4x4 gRefractionWorldViewProj;// Offset:  208 Size:    64
//   float4 gOceanParams2;              // Offset:  272 Size:    16 [unused]
//
// }
//
// cbuffer water_common_locals
// {
//
//   float RippleBumpiness;             // Offset:    0 Size:     4
//   float RippleSpeed;                 // Offset:    4 Size:     4
//   float RippleScale;                 // Offset:    8 Size:     4
//   float SpecularIntensity;           // Offset:   12 Size:     4
//   float SpecularFalloff;             // Offset:   16 Size:     4
//   float ParallaxIntensity;           // Offset:   20 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ReflectionSampler                 sampler      NA          NA    1        1
// StaticFoamSampler                 sampler      NA          NA    4        1
// BlendSampler                      sampler      NA          NA    6        1
// PlanarReflectionSampler           sampler      NA          NA    7        1
// WetSampler                        sampler      NA          NA    9        1
// WaterBumpSampler                  sampler      NA          NA   10        1
// RefractionSampler                 sampler      NA          NA   12        1
// WaterBumpSampler2                 sampler      NA          NA   14        1
// LightingSampler                   sampler      NA          NA   15        1
// ReflectionSampler                 texture  float4          2d    1        1
// StaticFoamSampler                 texture  float4          2d    4        1
// BlendSampler                      texture  float4          2d    6        1
// PlanarReflectionSampler           texture  float4          2d    7        1
// WetSampler                        texture  float4          2d    9        1
// WaterBumpSampler                  texture  float4          2d   10        1
// RefractionSampler                 texture  float4          2d   12        1
// WaterBumpSampler2                 texture  float4          2d   14        1
// LightingSampler                   texture  float4          2d   15        1
// StereoParmsTexture                texture  float4          2d   20        1
// rage_matrices                     cbuffer      NA          NA    1        1
// misc_globals                      cbuffer      NA          NA    2        1
// lighting_globals                  cbuffer      NA          NA    3        1
// water_globals                     cbuffer      NA          NA    4        1
// water_common_locals               cbuffer      NA          NA    9        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float     zw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float     zw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float    yzw
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb1[16], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[17], immediateIndexed
dcl_constantbuffer cb9[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s4, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s12, mode_default
dcl_sampler s14, mode_default
dcl_sampler s15, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.zw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.yzw
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 8
mul r0.xy, v5.zwzz, cb9[0].yyyy
mad r1.xyzw, -r0.xyxy, cb4[1].xxyy, v2.xyxy
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
min r0.x, r0.x, l(1.000000)
mul r0.yz, r1.xxyx, cb9[0].zzzz
mad r1.xy, r1.zwzz, cb9[0].zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, l(2.300000, 2.300000, 0.000000, 0.000000)
mul r0.yz, r0.yyzy, l(0.000000, 2.300000, 2.300000, 0.000000)
sample r2.xyzw, r0.yzyy, t14.xyzw, s14
sample r3.xyzw, r0.yzyy, t10.xyzw, s10
sample r4.xyzw, r1.xyxx, t14.xyzw, s14
sample r1.xyzw, r1.xyxx, t10.xyzw, s10
mov r3.zw, r1.xxxy
mov r2.zw, r4.xxxy
add r1.xyzw, r2.xyzw, r3.xyzw
add r2.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r1.xyzw, r1.xyzw, -r2.xyzw
mad r0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-2.000000, -2.000000, -2.000000, -2.000000)
mul r0.xyzw, r0.xyzw, cb4[1].zzww
add r0.xy, r0.zwzz, r0.xyxx
mul r0.zw, r0.xxxy, cb9[0].xxxx
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mad r0.x, r0.x, l(0.270000), l(0.440000)
mad r1.xy, r0.zwzz, v2.wwww, v4.xyxx
mov r1.z, v4.z
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mad r2.xyz, -r1.xyzx, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r0.yzw, r0.yyyy, r1.xxyz
mad r1.xyz, r2.xyzx, l(0.833333, 0.833333, 0.833333, 0.000000), r0.yzwy
add r2.xyz, v2.xyzx, -cb1[15].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
dp3 r2.w, r3.xyzx, r1.xyzx
add r2.w, r2.w, r2.w
mad r1.xyz, r1.xyzx, -r2.wwww, r3.xyzx
dp3 r2.w, -r3.xyzx, r0.yzwy
mad r3.x, -r2.z, r1.w, -r1.z
mad r3.x, -r2.z, r1.w, |r3.x|
add r1.z, r1.z, -r3.x
mad r1.z, v5.y, r1.z, r3.x
add r3.x, |r1.z|, l(1.000000)
mul r3.yz, r1.xxyx, l(0.000000, 0.250000, 0.500000, 0.000000)
div r3.xy, r3.yzyy, r3.xxxx
add r3.yz, -r3.xxyx, l(0.000000, 0.250000, 0.500000, 0.000000)
add r3.w, -r3.y, l(1.000000)
lt r4.x, l(0.000000), r1.z
movc r3.x, r4.x, r3.w, r3.y
sample r3.xyzw, r3.xzxx, t1.xyzw, s1
mul r4.xyz, r1.yyyy, cb4[9].xwyx
mad r4.xyz, r1.xxxx, cb4[8].xwyx, r4.xyzx
mad r1.xyz, r1.zzzz, cb4[10].xwyx, r4.xyzx
mul r4.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r5.y, r1.y, l(0.500000), -r4.z
add r5.x, r4.y, r4.x
div r1.xy, r5.xyxx, r1.yyyy
sample r4.xyzw, r1.xyxx, t7.xyzw, s7
add r1.xyz, r3.xyzx, -r4.xyzx
mad r1.xyz, v5.yyyy, r1.xyzx, r4.xyzx
sample r3.xyzw, v1.zwzz, t9.xyzw, s9
mul r3.x, r3.x, l(0.650000)
add r3.y, -v4.w, l(512.000000)
mul_sat r3.y, r3.y, l(0.001953)
mul r3.x, r3.y, r3.x
sample r4.xyzw, v3.zwzz, t4.xyzw, s4
mul r3.y, r4.y, l(0.350000)
mad r3.x, r3.y, r0.x, r3.x
mov r3.yw, l(0,0.500000,0,0.500000)
sample r4.xyzw, r3.xyxx, t6.xyzw, s6
mov r5.xy, -r0.yzyy
mov r5.z, l(0)
mad r4.xzw, r2.xxyz, r1.wwww, r5.xxyz
mad r2.xyz, r2.xyzx, r1.wwww, cb3[0].xyzx
div r5.xy, v6.xyxx, v6.wwww
sample r6.xyzw, r5.xyxx, t15.xyzw, s15
mad r4.xzw, r4.xxzw, r6.yyyy, v2.xxyz
mov r5.z, r6.y
mul r6.xyz, r4.zzzz, cb4[14].xywx
mad r6.xyz, r4.xxxx, cb4[13].xywx, r6.xyzx
mad r4.xzw, r4.wwww, cb4[15].xxyw, r6.xxyz
add r4.xzw, r4.xxzw, cb4[16].xxyw
ld r6.xyzw, l(0, 0, 0, 0), t20.xyzw
add r0.x, r4.w, -r6.y
mad r0.x, r6.x, r0.x, r4.x
mul r3.xy, r4.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r6.x, r0.x, l(0.500000), r3.x
mad r6.y, r4.w, l(0.500000), -r3.y
div r6.xy, r6.xyxx, r4.wwww
sample r7.xyzw, r6.xyxx, t15.xyzw, s15
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r7.z
mov r6.z, r7.y
movc r4.xzw, r0.xxxx, r5.xxyz, r6.xxyz
mul r0.x, r4.w, r4.y
sample r5.xyzw, r4.xzxx, t12.xyzw, s12
dp3 r1.w, r0.yzwy, -cb3[0].xyzx
mad_sat r1.w, r1.w, l(0.700000), l(0.300000)
mul r4.xyz, r1.wwww, cb4[4].xyzx
mad r4.xyz, r4.xyzx, r7.wwww, cb4[3].xyzx
mad r4.xyz, r4.xyzx, r0.xxxx, r5.xyzx
add r1.xyz, r1.xyzx, -r4.xyzx
add r0.x, -r2.w, l(1.000000)
mad r3.z, r0.x, l(0.300000), r2.w
sample r3.xyzw, r3.zwzz, t6.xyzw, s6
mad r1.xyz, r3.xxxx, r1.xyzx, r4.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
dp3_sat r0.x, -r2.xyzx, r0.yzwy
log r0.x, r0.x
mul r0.x, r0.x, cb9[1].x
exp r0.x, r0.x
mul r0.x, r0.x, cb9[0].w
mul r0.x, r7.w, r0.x
mad r0.xyz, cb4[4].xyzx, r0.xxxx, r1.xyzx
add r0.xyz, -r4.xyzx, r0.xyzx
mad r0.xyz, r4.wwww, r0.xyzx, r4.xyzx
mul o0.xyz, r0.xyzx, cb2[14].zzzz
mov o0.w, l(0)
ret 
// Approximately 123 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.1.36 on Fri Jul 31 21:34:53 2015
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64 [unused]
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64 [unused]
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64
//
// }
//
// cbuffer misc_globals
// {
//
//   float4 globalFade;                 // Offset:    0 Size:    16 [unused]
//   float globalHeightScale;           // Offset:   16 Size:     4 [unused]
//   float globalShaderQuality;         // Offset:   20 Size:     4 [unused]
//   float globalReuseMe00001;          // Offset:   24 Size:     4 [unused]
//   float globalReuseMe00002;          // Offset:   28 Size:     4 [unused]
//   float4 POMFlags;                   // Offset:   32 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraPosition;// Offset:   48 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraZAxis;// Offset:   64 Size:    16 [unused]
//   float4 g_Rage_Tessellation_ScreenSpaceErrorParams;// Offset:   80 Size:    16 [unused]
//   float4 g_Rage_Tessellation_LinearScale;// Offset:   96 Size:    16 [unused]
//   float4 g_Rage_Tessellation_Frustum[4];// Offset:  112 Size:    64 [unused]
//   float4 g_Rage_Tessellation_Epsilons;// Offset:  176 Size:    16 [unused]
//   float4 globalScalars;              // Offset:  192 Size:    16 [unused]
//   float4 globalScalars2;             // Offset:  208 Size:    16 [unused]
//   float4 globalScalars3;             // Offset:  224 Size:    16
//   float4 globalScreenSize;           // Offset:  240 Size:    16 [unused]
//   uint4 gTargetAAParams;             // Offset:  256 Size:    16 [unused]
//   float4 colorize;                   // Offset:  272 Size:    16 [unused]
//   float4 gGlobalParticleShadowBias;  // Offset:  288 Size:    16 [unused]
//   float gGlobalParticleDofAlphaScale;// Offset:  304 Size:     4 [unused]
//   float gGlobalFogIntensity;         // Offset:  308 Size:     4 [unused]
//   float4 gPlayerLFootPos;            // Offset:  320 Size:    16 [unused]
//   float4 gPlayerRFootPos;            // Offset:  336 Size:    16 [unused]
//   float4 gStereoParams;              // Offset:  352 Size:    16 [unused]
//   float4 gStereoParams1;             // Offset:  368 Size:    16 [unused]
//
// }
//
// cbuffer lighting_globals
// {
//
//   float4 gDirectionalLight;          // Offset:    0 Size:    16
//   float4 gDirectionalColour;         // Offset:   16 Size:    16 [unused]
//   int gNumForwardLights;             // Offset:   32 Size:     4 [unused]
//   float4 gLightPositionAndInvDistSqr[8];// Offset:   48 Size:   128 [unused]
//   float4 gLightDirectionAndFalloffExponent[8];// Offset:  176 Size:   128 [unused]
//   float4 gLightColourAndCapsuleExtent[8];// Offset:  304 Size:   128 [unused]
//   float gLightConeScale[8];          // Offset:  432 Size:   116 [unused]
//   float gLightConeOffset[8];         // Offset:  560 Size:   116 [unused]
//   float4 gLightNaturalAmbient0;      // Offset:  688 Size:    16 [unused]
//   float4 gLightNaturalAmbient1;      // Offset:  704 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient0;// Offset:  720 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient1;// Offset:  736 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient0;// Offset:  752 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient1;// Offset:  768 Size:    16 [unused]
//   float4 gDirectionalAmbientColour;  // Offset:  784 Size:    16 [unused]
//   float4 globalFogParams[5];         // Offset:  800 Size:    80 [unused]
//   float4 globalFogColor;             // Offset:  880 Size:    16 [unused]
//   float4 globalFogColorE;            // Offset:  896 Size:    16 [unused]
//   float4 globalFogColorN;            // Offset:  912 Size:    16 [unused]
//   float4 globalFogColorMoon;         // Offset:  928 Size:    16 [unused]
//   float4 gReflectionTweaks;          // Offset:  944 Size:    16 [unused]
//
// }
//
// cbuffer water_globals
// {
//
//   float2 gWorldBaseVS;               // Offset:    0 Size:     8 [unused]
//   float4 gFlowParams;                // Offset:   16 Size:    16
//   float4 gFlowParams2;               // Offset:   32 Size:    16 [unused]
//   float4 gWaterAmbientColor;         // Offset:   48 Size:    16
//   float4 gWaterDirectionalColor;     // Offset:   64 Size:    16
//   float4 gScaledTime;                // Offset:   80 Size:    16 [unused]
//   float4 gOceanParams0;              // Offset:   96 Size:    16 [unused]
//   float4 gOceanParams1;              // Offset:  112 Size:    16 [unused]
//   row_major float4x4 gReflectionWorldViewProj;// Offset:  128 Size:    64
//   float4 gFogLight_Debugging;        // Offset:  192 Size:    16 [unused]
//   row_major float4x4 gRefractionWorldViewProj;// Offset:  208 Size:    64
//   float4 gOceanParams2;              // Offset:  272 Size:    16 [unused]
//
// }
//
// cbuffer water_common_locals
// {
//
//   float RippleBumpiness;             // Offset:    0 Size:     4
//   float RippleSpeed;                 // Offset:    4 Size:     4
//   float RippleScale;                 // Offset:    8 Size:     4
//   float SpecularIntensity;           // Offset:   12 Size:     4
//   float SpecularFalloff;             // Offset:   16 Size:     4
//   float ParallaxIntensity;           // Offset:   20 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ReflectionSampler_s               sampler      NA          NA    1        1
// StaticFoamSampler_s               sampler      NA          NA    4        1
// BlendSampler_s                    sampler      NA          NA    6        1
// PlanarReflectionSampler_s         sampler      NA          NA    7        1
// WetSampler_s                      sampler      NA          NA    9        1
// WaterBumpSampler_s                sampler      NA          NA   10        1
// RefractionSampler_s               sampler      NA          NA   12        1
// WaterBumpSampler2_s               sampler      NA          NA   14        1
// LightingSampler_s                 sampler      NA          NA   15        1
// ReflectionSampler                 texture  float4          2d    1        1
// StaticFoamSampler                 texture  float4          2d    4        1
// BlendSampler                      texture  float4          2d    6        1
// PlanarReflectionSampler           texture  float4          2d    7        1
// WetSampler                        texture  float4          2d    9        1
// WaterBumpSampler                  texture  float4          2d   10        1
// RefractionSampler                 texture  float4          2d   12        1
// WaterBumpSampler2                 texture  float4          2d   14        1
// LightingSampler                   texture  float4          2d   15        1
// StereoParmsTexture                texture  float4          2d   20        1
// rage_matrices                     cbuffer      NA          NA    1        1
// misc_globals                      cbuffer      NA          NA    2        1
// lighting_globals                  cbuffer      NA          NA    3        1
// water_globals                     cbuffer      NA          NA    4        1
// water_common_locals               cbuffer      NA          NA    9        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float     zw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float     zw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float    yzw
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb1[16], immediateIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[17], immediateIndexed
dcl_constantbuffer cb9[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s4, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s12, mode_default
dcl_sampler s14, mode_default
dcl_sampler s15, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.zw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.yzw
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 8
mul r0.xy, v5.zwzz, cb9[0].yyyy
mad r1.xyzw, -r0.xyxy, cb4[1].xxyy, v2.xyxy
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
min r0.x, r0.x, l(1.000000)
mul r0.yz, r1.xxyx, cb9[0].zzzz
mad r1.xy, cb9[0].zzzz, r1.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, l(2.300000, 2.300000, 0.000000, 0.000000)
mul r0.yz, r0.yyzy, l(0.000000, 2.300000, 2.300000, 0.000000)
sample r2.xyzw, r0.yzyy, t14.xyzw, s14
sample r3.xyzw, r0.yzyy, t10.xyzw, s10
sample r4.xyzw, r1.xyxx, t14.xyzw, s14
sample r1.xyzw, r1.xyxx, t10.xyzw, s10
mov r3.zw, r1.xxxy
mov r2.zw, r4.xxxy
add r1.xyzw, r2.xyzw, r3.xyzw
add r2.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r1.xyzw, r1.xyzw, -r2.xyzw
mad r0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-2.000000, -2.000000, -2.000000, -2.000000)
mul r0.xyzw, r0.xyzw, cb4[1].zzww
add r0.xy, r0.zwzz, r0.xyxx
mul r0.zw, r0.xxxy, cb9[0].xxxx
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mad r0.x, r0.x, l(0.270000), l(0.440000)
mad r1.xy, r0.zwzz, v2.wwww, v4.xyxx
mov r1.z, v4.z
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mad r2.xyz, -r1.xyzx, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r0.yzw, r0.yyyy, r1.xxyz
mad r1.xyz, r2.xyzx, l(0.833333, 0.833333, 0.833333, 0.000000), r0.yzwy
add r2.xyz, v2.xyzx, -cb1[15].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
dp3 r2.w, r3.xyzx, r1.xyzx
add r2.w, r2.w, r2.w
mad r1.xyz, r1.xyzx, -r2.wwww, r3.xyzx
dp3 r2.w, -r3.xyzx, r0.yzwy
mad r3.x, -r2.z, r1.w, -r1.z
mad r3.x, -r2.z, r1.w, |r3.x|
add r1.z, r1.z, -r3.x
mad r1.z, v5.y, r1.z, r3.x
add r3.x, |r1.z|, l(1.000000)
mul r3.yz, r1.xxyx, l(0.000000, 0.250000, 0.500000, 0.000000)
div r3.xy, r3.yzyy, r3.xxxx
add r3.yz, -r3.xxyx, l(0.000000, 0.250000, 0.500000, 0.000000)
add r3.w, -r3.y, l(1.000000)
lt r4.x, l(0.000000), r1.z
movc r3.x, r4.x, r3.w, r3.y
sample r3.xyzw, r3.xzxx, t1.xyzw, s1
mul r4.xyz, r1.yyyy, cb4[9].xwyx
mad r4.xyz, r1.xxxx, cb4[8].xwyx, r4.xyzx
mad r1.xyz, r1.zzzz, cb4[10].xwyx, r4.xyzx
mul r4.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r5.y, r1.y, l(0.500000), -r4.z
add r5.x, r4.y, r4.x
div r1.xy, r5.xyxx, r1.yyyy
sample r4.xyzw, r1.xyxx, t7.xyzw, s7
add r1.xyz, r3.xyzx, -r4.xyzx
mad r1.xyz, v5.yyyy, r1.xyzx, r4.xyzx
sample r3.xyzw, v3.zwzz, t4.xyzw, s4
mul r0.x, r0.x, r3.y
sample r3.xyzw, v1.zwzz, t9.xyzw, s9
mul r3.x, r3.x, l(0.650000)
add r3.y, -v4.w, l(512.000000)
mul_sat r3.y, r3.y, l(0.001953)
mul r3.x, r3.y, r3.x
mad r3.x, r0.x, l(0.350000), r3.x
mov r3.yw, l(0,0.500000,0,0.500000)
sample r4.xyzw, r3.xyxx, t6.xyzw, s6
mov r5.xy, -r0.yzyy
mov r5.z, l(0)
mad r4.xzw, r2.xxyz, r1.wwww, r5.xxyz
mad r2.xyz, r2.xyzx, r1.wwww, cb3[0].xyzx
div r5.xy, v6.xyxx, v6.wwww
sample r6.xyzw, r5.xyxx, t15.xyzw, s15
mad r4.xzw, r4.xxzw, r6.yyyy, v2.xxyz
mov r5.z, r6.y
mul r6.xyz, r4.zzzz, cb4[14].xywx
mad r6.xyz, r4.xxxx, cb4[13].xywx, r6.xyzx
mad r4.xzw, r4.wwww, cb4[15].xxyw, r6.xxyz
add r4.xzw, r4.xxzw, cb4[16].xxyw
ld r6.xyzw, l(0, 0, 0, 0), t20.xyzw
add r0.x, r4.w, -r6.y
mad r0.x, r6.x, r0.x, r4.x
mul r3.xy, r4.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r6.x, r0.x, l(0.500000), r3.x
mad r6.y, r4.w, l(0.500000), -r3.y
div r6.xy, r6.xyxx, r4.wwww
sample r7.xyzw, r6.xyxx, t15.xyzw, s15
ne r0.x, r7.z, l(0.000000)
mov r6.z, r7.y
movc r4.xzw, r0.xxxx, r5.xxyz, r6.xxyz
mul r0.x, r4.w, r4.y
sample r5.xyzw, r4.xzxx, t12.xyzw, s12
dp3 r1.w, r0.yzwy, -cb3[0].xyzx
mad_sat r1.w, r1.w, l(0.700000), l(0.300000)
mul r4.xyz, r1.wwww, cb4[4].xyzx
mad r4.xyz, r4.xyzx, r7.wwww, cb4[3].xyzx
mad r4.xyz, r4.xyzx, r0.xxxx, r5.xyzx
add r1.xyz, r1.xyzx, -r4.xyzx
add r0.x, -r2.w, l(1.000000)
mad r3.z, r0.x, l(0.300000), r2.w
sample r3.xyzw, r3.zwzz, t6.xyzw, s6
mad r1.xyz, r3.xxxx, r1.xyzx, r4.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
dp3_sat r0.x, -r2.xyzx, r0.yzwy
log r0.x, r0.x
mul r0.x, r0.x, cb9[1].x
exp r0.x, r0.x
mul r0.x, r0.x, cb9[0].w
mul r0.x, r7.w, r0.x
mad r0.xyz, cb4[4].xyzx, r0.xxxx, r1.xyzx
add r0.xyz, -r4.xyzx, r0.xyzx
mad r0.xyz, r4.wwww, r0.xyzx, r4.xyzx
mul o0.xyz, r0.xyzx, cb2[14].zzzz
mov o0.w, l(0)
ret 
// Approximately 123 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
