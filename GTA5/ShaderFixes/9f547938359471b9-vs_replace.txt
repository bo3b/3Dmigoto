
cbuffer rage_matrices : register(b1)
{
  row_major float4x4 gWorld : packoffset(c0);
  row_major float4x4 gWorldView : packoffset(c4);
  row_major float4x4 gWorldViewProj : packoffset(c8);
  row_major float4x4 gViewInverse : packoffset(c12);
}

cbuffer rage_clipplanes : register(b0)
{
  float4 ClipPlanes : packoffset(c0);
}

cbuffer misc_globals : register(b2)
{
  float4 globalFade : packoffset(c0);
  float globalHeightScale : packoffset(c1);
  float globalShaderQuality : packoffset(c1.y);
  float globalReuseMe00001 : packoffset(c1.z);
  float globalReuseMe00002 : packoffset(c1.w);
  float4 POMFlags : packoffset(c2);
  float4 g_Rage_Tessellation_CameraPosition : packoffset(c3);
  float4 g_Rage_Tessellation_CameraZAxis : packoffset(c4);
  float4 g_Rage_Tessellation_ScreenSpaceErrorParams : packoffset(c5);
  float4 g_Rage_Tessellation_LinearScale : packoffset(c6);
  float4 g_Rage_Tessellation_Frustum[4] : packoffset(c7);
  float4 g_Rage_Tessellation_Epsilons : packoffset(c11);
  float4 globalScalars : packoffset(c12);
  float4 globalScalars2 : packoffset(c13);
  float4 globalScalars3 : packoffset(c14);
  float4 globalScreenSize : packoffset(c15);
  uint4 gTargetAAParams : packoffset(c16);
  float4 colorize : packoffset(c17);
  float4 gGlobalParticleShadowBias : packoffset(c18);
  float gGlobalParticleDofAlphaScale : packoffset(c19);
  float gGlobalFogIntensity : packoffset(c19.y);
  float4 gPlayerLFootPos : packoffset(c20);
  float4 gPlayerRFootPos : packoffset(c21);
  float4 gStereoParams : packoffset(c22);
  float4 gStereoParams1 : packoffset(c23);
}

cbuffer lighting_globals : register(b3)
{
  float4 gDirectionalLight : packoffset(c0);
  float4 gDirectionalColour : packoffset(c1);
  int gNumForwardLights : packoffset(c2);
  float4 gLightPositionAndInvDistSqr[8] : packoffset(c3);
  float4 gLightDirectionAndFalloffExponent[8] : packoffset(c11);
  float4 gLightColourAndCapsuleExtent[8] : packoffset(c19);
  float gLightConeScale[8] : packoffset(c27);
  float gLightConeOffset[8] : packoffset(c35);
  float4 gLightNaturalAmbient0 : packoffset(c43);
  float4 gLightNaturalAmbient1 : packoffset(c44);
  float4 gLightArtificialIntAmbient0 : packoffset(c45);
  float4 gLightArtificialIntAmbient1 : packoffset(c46);
  float4 gLightArtificialExtAmbient0 : packoffset(c47);
  float4 gLightArtificialExtAmbient1 : packoffset(c48);
  float4 gDirectionalAmbientColour : packoffset(c49);
  float4 globalFogParams[5] : packoffset(c50);
  float4 globalFogColor : packoffset(c55);
  float4 globalFogColorE : packoffset(c56);
  float4 globalFogColorN : packoffset(c57);
  float4 globalFogColorMoon : packoffset(c58);
  float4 gReflectionTweaks : packoffset(c59);
}

cbuffer common_locals : register(b13)
{
  float3 globalAnimUV0 : packoffset(c0);
  float3 globalAnimUV1 : packoffset(c1);
}
Texture2D<float4> StereoParmsTexture : register(t20);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float2 v4 : TEXCOORD2,
  float3 v5 : NORMAL0,
  float4 v6 : TANGENT0,
  uint v7 : SV_InstanceID0,
  out float4 o0 : COLOR0,
  out float2 o1 : TEXCOORD0,
  out float2 p1 : TEXCOORD8,
  out float3 o2 : TEXCOORD1,
  out float p2 : TEXCOORD10,
  out float4 o3 : TEXCOORD3,
  out float4 o4 : TEXCOORD4,
  out float4 o5 : TEXCOORD5,
  out float4 o6 : TEXCOORD6,
  out float4 o7 : SV_Position0,
  out float4 o8 : SV_ClipDistance0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = gWorld._m10_m11_m12 * v0.yyy;
  r0.xyz = v0.xxx * gWorld._m00_m01_m02 + r0.xyz;
  r0.xyz = v0.zzz * gWorld._m20_m21_m22 + r0.xyz;
  r0.xyz = gWorld._m30_m31_m32 + r0.xyz;
  r1.xyz = gViewInverse._m30_m31_m32 + -r0.xyz;
  r0.w = dot(v5.xyz, v5.xyz);
  r0.w = r0.w < 0.100000001;
  r2.xyz = r0.www ? float3(0,0,1) : v5.xyz;
  r3.xyz = gWorld._m10_m11_m12 * r2.yyy;
  r2.xyw = r2.xxx * gWorld._m00_m01_m02 + r3.xyz;
  r2.xyz = r2.zzz * gWorld._m20_m21_m22 + r2.xyw;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r2.xyz * r0.www;
  r3.xyz = gWorld._m10_m11_m12 * v6.yyy;
  r3.xyz = v6.xxx * gWorld._m00_m01_m02 + r3.xyz;
  r3.xyz = v6.zzz * gWorld._m20_m21_m22 + r3.xyz;
  r4.xyz = r3.zxy * r2.yzx;
  r4.xyz = r3.yzx * r2.zxy + -r4.xyz;
  o5.xyz = v6.www * r4.xyz;
  r4.xyzw = gWorldViewProj._m10_m11_m12_m13 * v0.yyyy;
  r4.xyzw = v0.xxxx * gWorldViewProj._m00_m01_m02_m03 + r4.xyzw;
  r4.xyzw = v0.zzzz * gWorldViewProj._m20_m21_m22_m23 + r4.xyzw;
  r4.xyzw = gWorldViewProj._m30_m31_m32_m33 + r4.xyzw;
  r0.w = 0 != gStereoParams.z;
  if (r0.w != 0) {
    r5.xyzw = StereoParmsTexture.Load(float4(0,0,0,0)).xyzw;
    r0.w = -r5.y + r4.w;
    r4.x = -r5.x * r0.w + r4.x;
  }
  r5.xy = v2.xy;
  r5.z = 1;
  o1.x = dot(globalAnimUV0.xyz, r5.xyz);
  o1.y = dot(globalAnimUV1.xyz, r5.xyz);
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = 3.99999999e-006 * r0.w;
  r5.x = min(1, r0.w);
  r5.y = 1 + -r5.x;
  r5.xy = saturate(-globalScalars2.zz + r5.xy);
  r0.w = -1 + gDirectionalAmbientColour.w;
  r5.xy = r5.xy * r0.ww + float2(1,1);
  o0.xy = saturate(v1.xy * r5.xy);
  o8.x = dot(r4.xyzw, ClipPlanes.xyzw);
  o0.zw = v1.zw;
  p1.xy = v4.xy;
  p2.x = r4.w;
  o2.xyz = r2.xyz;
  o6.xyz = r0.xyz;
  o6.w = 1;
  o7.xyzw = r4.xyzw;
  o8.yzw = float3(0,0,0);
  o3.xyz = r1.xyz;
  o4.xyz = r3.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64
//
// }
//
// cbuffer rage_clipplanes
// {
//
//   float4 ClipPlanes;                 // Offset:    0 Size:    16
//
// }
//
// cbuffer misc_globals
// {
//
//   float4 globalFade;                 // Offset:    0 Size:    16 [unused]
//   float globalHeightScale;           // Offset:   16 Size:     4 [unused]
//   float globalShaderQuality;         // Offset:   20 Size:     4 [unused]
//   float globalReuseMe00001;          // Offset:   24 Size:     4 [unused]
//   float globalReuseMe00002;          // Offset:   28 Size:     4 [unused]
//   float4 POMFlags;                   // Offset:   32 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraPosition;// Offset:   48 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraZAxis;// Offset:   64 Size:    16 [unused]
//   float4 g_Rage_Tessellation_ScreenSpaceErrorParams;// Offset:   80 Size:    16 [unused]
//   float4 g_Rage_Tessellation_LinearScale;// Offset:   96 Size:    16 [unused]
//   float4 g_Rage_Tessellation_Frustum[4];// Offset:  112 Size:    64 [unused]
//   float4 g_Rage_Tessellation_Epsilons;// Offset:  176 Size:    16 [unused]
//   float4 globalScalars;              // Offset:  192 Size:    16 [unused]
//   float4 globalScalars2;             // Offset:  208 Size:    16
//   float4 globalScalars3;             // Offset:  224 Size:    16 [unused]
//   float4 globalScreenSize;           // Offset:  240 Size:    16 [unused]
//   uint4 gTargetAAParams;             // Offset:  256 Size:    16 [unused]
//   float4 colorize;                   // Offset:  272 Size:    16 [unused]
//   float4 gGlobalParticleShadowBias;  // Offset:  288 Size:    16 [unused]
//   float gGlobalParticleDofAlphaScale;// Offset:  304 Size:     4 [unused]
//   float gGlobalFogIntensity;         // Offset:  308 Size:     4 [unused]
//   float4 gPlayerLFootPos;            // Offset:  320 Size:    16 [unused]
//   float4 gPlayerRFootPos;            // Offset:  336 Size:    16 [unused]
//   float4 gStereoParams;              // Offset:  352 Size:    16
//   float4 gStereoParams1;             // Offset:  368 Size:    16 [unused]
//
// }
//
// cbuffer lighting_globals
// {
//
//   float4 gDirectionalLight;          // Offset:    0 Size:    16 [unused]
//   float4 gDirectionalColour;         // Offset:   16 Size:    16 [unused]
//   int gNumForwardLights;             // Offset:   32 Size:     4 [unused]
//   float4 gLightPositionAndInvDistSqr[8];// Offset:   48 Size:   128 [unused]
//   float4 gLightDirectionAndFalloffExponent[8];// Offset:  176 Size:   128 [unused]
//   float4 gLightColourAndCapsuleExtent[8];// Offset:  304 Size:   128 [unused]
//   float gLightConeScale[8];          // Offset:  432 Size:   116 [unused]
//   float gLightConeOffset[8];         // Offset:  560 Size:   116 [unused]
//   float4 gLightNaturalAmbient0;      // Offset:  688 Size:    16 [unused]
//   float4 gLightNaturalAmbient1;      // Offset:  704 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient0;// Offset:  720 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient1;// Offset:  736 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient0;// Offset:  752 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient1;// Offset:  768 Size:    16 [unused]
//   float4 gDirectionalAmbientColour;  // Offset:  784 Size:    16
//   float4 globalFogParams[5];         // Offset:  800 Size:    80 [unused]
//   float4 globalFogColor;             // Offset:  880 Size:    16 [unused]
//   float4 globalFogColorE;            // Offset:  896 Size:    16 [unused]
//   float4 globalFogColorN;            // Offset:  912 Size:    16 [unused]
//   float4 globalFogColorMoon;         // Offset:  928 Size:    16 [unused]
//   float4 gReflectionTweaks;          // Offset:  944 Size:    16 [unused]
//
// }
//
// cbuffer common_locals
// {
//
//   float3 globalAnimUV0;              // Offset:    0 Size:    12
//   float3 globalAnimUV1;              // Offset:   16 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// StereoParmsTexture                texture  float4          2d   20        1
// rage_clipplanes                   cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
// misc_globals                      cbuffer      NA          NA    2        1
// lighting_globals                  cbuffer      NA          NA    3        1
// common_locals                     cbuffer      NA          NA   13        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float       
// TEXCOORD                 2   xy          4     NONE   float   xy  
// NORMAL                   0   xyz         5     NONE   float   xyz 
// TANGENT                  0   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7   INSTID    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 8     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                10      w        2     NONE   float      w
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_ClipDistance          0   xyzw        8  CLIPDST   float   xyzw
//
vs_4_0
dcl_constantbuffer cb1[16], immediateIndexed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[50], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t20
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v4.xy
dcl_input v5.xyz
dcl_input v6.xyzw
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output_siv o7.xyzw, position
dcl_output_siv o8.xyzw, clip_distance
dcl_temps 6
mul r0.xyz, v0.yyyy, cb1[1].xyzx
mad r0.xyz, v0.xxxx, cb1[0].xyzx, r0.xyzx
mad r0.xyz, v0.zzzz, cb1[2].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, cb1[3].xyzx
add r1.xyz, -r0.xyzx, cb1[15].xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
lt r0.w, r0.w, l(0.100000)
movc r2.xyz, r0.wwww, l(0,0,1.000000,0), v5.xyzx
mul r3.xyz, r2.yyyy, cb1[1].xyzx
mad r2.xyw, r2.xxxx, cb1[0].xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, cb1[2].xyzx, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, v6.yyyy, cb1[1].xyzx
mad r3.xyz, v6.xxxx, cb1[0].xyzx, r3.xyzx
mad r3.xyz, v6.zzzz, cb1[2].xyzx, r3.xyzx
mul r4.xyz, r2.yzxy, r3.zxyz
mad r4.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
mul o5.xyz, r4.xyzx, v6.wwww
mul r4.xyzw, v0.yyyy, cb1[9].xyzw
mad r4.xyzw, v0.xxxx, cb1[8].xyzw, r4.xyzw
mad r4.xyzw, v0.zzzz, cb1[10].xyzw, r4.xyzw
add r4.xyzw, r4.xyzw, cb1[11].xyzw
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[22].z
if_nz r0.w
  ld r5.xyzw, l(0, 0, 0, 0), t20.xyzw
  add r0.w, r4.w, -r5.y
  mad r4.x, -r5.x, r0.w, r4.x
endif 
mov r5.xy, v2.xyxx
mov r5.z, l(1.000000)
dp3 o1.x, cb13[0].xyzx, r5.xyzx
dp3 o1.y, cb13[1].xyzx, r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
mul r0.w, r0.w, l(0.000004)
min r5.x, r0.w, l(1.000000)
add r5.y, -r5.x, l(1.000000)
add_sat r5.xy, r5.xyxx, -cb2[13].zzzz
add r0.w, cb3[49].w, l(-1.000000)
mad r5.xy, r5.xyxx, r0.wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
mul_sat o0.xy, r5.xyxx, v1.xyxx
dp4 o8.x, r4.xyzw, cb0[0].xyzw
mov o0.zw, v1.zzzw
mov o1.zw, v4.xxxy
mov o2.w, r4.w
mov o2.xyz, r2.xyzx
mov o6.xyz, r0.xyzx
mov o6.w, l(1.000000)
mov o7.xyzw, r4.xyzw
mov o8.yzw, l(0,0,0,0)
mov o3.xyz, r1.xyzx
mov o4.xyz, r3.xyzx
ret 
// Approximately 54 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.1.36 on Fri Jul 31 21:20:01 2015
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64
//
// }
//
// cbuffer rage_clipplanes
// {
//
//   float4 ClipPlanes;                 // Offset:    0 Size:    16
//
// }
//
// cbuffer misc_globals
// {
//
//   float4 globalFade;                 // Offset:    0 Size:    16 [unused]
//   float globalHeightScale;           // Offset:   16 Size:     4 [unused]
//   float globalShaderQuality;         // Offset:   20 Size:     4 [unused]
//   float globalReuseMe00001;          // Offset:   24 Size:     4 [unused]
//   float globalReuseMe00002;          // Offset:   28 Size:     4 [unused]
//   float4 POMFlags;                   // Offset:   32 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraPosition;// Offset:   48 Size:    16 [unused]
//   float4 g_Rage_Tessellation_CameraZAxis;// Offset:   64 Size:    16 [unused]
//   float4 g_Rage_Tessellation_ScreenSpaceErrorParams;// Offset:   80 Size:    16 [unused]
//   float4 g_Rage_Tessellation_LinearScale;// Offset:   96 Size:    16 [unused]
//   float4 g_Rage_Tessellation_Frustum[4];// Offset:  112 Size:    64 [unused]
//   float4 g_Rage_Tessellation_Epsilons;// Offset:  176 Size:    16 [unused]
//   float4 globalScalars;              // Offset:  192 Size:    16 [unused]
//   float4 globalScalars2;             // Offset:  208 Size:    16
//   float4 globalScalars3;             // Offset:  224 Size:    16 [unused]
//   float4 globalScreenSize;           // Offset:  240 Size:    16 [unused]
//   uint4 gTargetAAParams;             // Offset:  256 Size:    16 [unused]
//   float4 colorize;                   // Offset:  272 Size:    16 [unused]
//   float4 gGlobalParticleShadowBias;  // Offset:  288 Size:    16 [unused]
//   float gGlobalParticleDofAlphaScale;// Offset:  304 Size:     4 [unused]
//   float gGlobalFogIntensity;         // Offset:  308 Size:     4 [unused]
//   float4 gPlayerLFootPos;            // Offset:  320 Size:    16 [unused]
//   float4 gPlayerRFootPos;            // Offset:  336 Size:    16 [unused]
//   float4 gStereoParams;              // Offset:  352 Size:    16
//   float4 gStereoParams1;             // Offset:  368 Size:    16 [unused]
//
// }
//
// cbuffer lighting_globals
// {
//
//   float4 gDirectionalLight;          // Offset:    0 Size:    16 [unused]
//   float4 gDirectionalColour;         // Offset:   16 Size:    16 [unused]
//   int gNumForwardLights;             // Offset:   32 Size:     4 [unused]
//   float4 gLightPositionAndInvDistSqr[8];// Offset:   48 Size:   128 [unused]
//   float4 gLightDirectionAndFalloffExponent[8];// Offset:  176 Size:   128 [unused]
//   float4 gLightColourAndCapsuleExtent[8];// Offset:  304 Size:   128 [unused]
//   float gLightConeScale[8];          // Offset:  432 Size:   116 [unused]
//   float gLightConeOffset[8];         // Offset:  560 Size:   116 [unused]
//   float4 gLightNaturalAmbient0;      // Offset:  688 Size:    16 [unused]
//   float4 gLightNaturalAmbient1;      // Offset:  704 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient0;// Offset:  720 Size:    16 [unused]
//   float4 gLightArtificialIntAmbient1;// Offset:  736 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient0;// Offset:  752 Size:    16 [unused]
//   float4 gLightArtificialExtAmbient1;// Offset:  768 Size:    16 [unused]
//   float4 gDirectionalAmbientColour;  // Offset:  784 Size:    16
//   float4 globalFogParams[5];         // Offset:  800 Size:    80 [unused]
//   float4 globalFogColor;             // Offset:  880 Size:    16 [unused]
//   float4 globalFogColorE;            // Offset:  896 Size:    16 [unused]
//   float4 globalFogColorN;            // Offset:  912 Size:    16 [unused]
//   float4 globalFogColorMoon;         // Offset:  928 Size:    16 [unused]
//   float4 gReflectionTweaks;          // Offset:  944 Size:    16 [unused]
//
// }
//
// cbuffer common_locals
// {
//
//   float3 globalAnimUV0;              // Offset:    0 Size:    12
//   float3 globalAnimUV1;              // Offset:   16 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// StereoParmsTexture                texture  float4          2d   20        1
// rage_clipplanes                   cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
// misc_globals                      cbuffer      NA          NA    2        1
// lighting_globals                  cbuffer      NA          NA    3        1
// common_locals                     cbuffer      NA          NA   13        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float       
// TEXCOORD                 2   xy          4     NONE   float   xy  
// NORMAL                   0   xyz         5     NONE   float   xyz 
// TANGENT                  0   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7   INSTID    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 8     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                10      w        2     NONE   float      w
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_ClipDistance          0   xyzw        8  CLIPDST   float   xyzw
//
vs_4_0
dcl_constantbuffer cb1[16], immediateIndexed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[50], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t20
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v4.xy
dcl_input v5.xyz
dcl_input v6.xyzw
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output_siv o7.xyzw, position
dcl_output_siv o8.xyzw, clip_distance
dcl_temps 6
mul r0.xyz, v0.yyyy, cb1[1].xyzx
mad r0.xyz, v0.xxxx, cb1[0].xyzx, r0.xyzx
mad r0.xyz, v0.zzzz, cb1[2].xyzx, r0.xyzx
add r0.xyz, r0.xyzx, cb1[3].xyzx
add r1.xyz, -r0.xyzx, cb1[15].xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
lt r0.w, r0.w, l(0.100000)
movc r2.xyz, r0.wwww, l(0,0,1.000000,0), v5.xyzx
mul r3.xyz, r2.yyyy, cb1[1].xyzx
mad r2.xyw, r2.xxxx, cb1[0].xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, cb1[2].xyzx, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, v6.yyyy, cb1[1].xyzx
mad r3.xyz, v6.xxxx, cb1[0].xyzx, r3.xyzx
mad r3.xyz, v6.zzzz, cb1[2].xyzx, r3.xyzx
mul r4.xyz, r2.yzxy, r3.zxyz
mad r4.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
mul o5.xyz, r4.xyzx, v6.wwww
mul r4.xyzw, v0.yyyy, cb1[9].xyzw
mad r4.xyzw, v0.xxxx, cb1[8].xyzw, r4.xyzw
mad r4.xyzw, v0.zzzz, cb1[10].xyzw, r4.xyzw
add r4.xyzw, r4.xyzw, cb1[11].xyzw
ne r0.w, l(0.000000), cb2[22].z
if_nz r0.w
  ld r5.xyzw, l(0, 0, 0, 0), t20.xyzw
  add r0.w, r4.w, -r5.y
  mad r4.x, -r5.x, r0.w, r4.x
endif 
mov r5.xy, v2.xyxx
mov r5.z, l(1.000000)
dp3 o1.x, cb13[0].xyzx, r5.xyzx
dp3 o1.y, cb13[1].xyzx, r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
mul r0.w, r0.w, l(0.000004)
min r5.x, r0.w, l(1.000000)
add r5.y, -r5.x, l(1.000000)
add_sat r5.xy, r5.xyxx, -cb2[13].zzzz
add r0.w, l(-1.000000), cb3[49].w
mad r5.xy, r5.xyxx, r0.wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
mul_sat o0.xy, r5.xyxx, v1.xyxx
dp4 o8.x, r4.xyzw, cb0[0].xyzw
mov o0.zw, v1.zzzw
mov o6.xyz, r0.xyzx
mov o6.w, l(1.000000)
mov o7.xyzw, r4.xyzw
mov o8.yzw, l(0,0,0,0)
mov o2.xyz, r2.xyzx
mov o3.xyz, r1.xyzx
mov o4.xyz, r3.xyzx
mov o1.zw, v4.xxxy
mov o2.w, r4.w
ret 
// Approximately 54 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
