
cbuffer rage_matrices : register(b1)
{
  row_major float4x4 gWorld : packoffset(c0);
  row_major float4x4 gWorldView : packoffset(c4);
  row_major float4x4 gWorldViewProj : packoffset(c8);
  row_major float4x4 gViewInverse : packoffset(c12);
}

cbuffer water_globals : register(b4)
{
  float2 gWorldBaseVS : packoffset(c0);
  float4 gFlowParams : packoffset(c1);
  float4 gFlowParams2 : packoffset(c2);
  float4 gWaterAmbientColor : packoffset(c3);
  float4 gWaterDirectionalColor : packoffset(c4);
  float4 gScaledTime : packoffset(c5);
  float4 gOceanParams0 : packoffset(c6);
  float4 gOceanParams1 : packoffset(c7);
  row_major float4x4 gReflectionWorldViewProj : packoffset(c8);
  float4 gFogLight_Debugging : packoffset(c12);
  row_major float4x4 gRefractionWorldViewProj : packoffset(c13);
  float4 gOceanParams2 : packoffset(c17);
}

cbuffer water_locals : register(b0)
{
  float4 OceanLocalParams0 : packoffset(c0);
  float4 FogParams : packoffset(c1);
  float4 QuadAlpha : packoffset(c2);
  float3 CameraPosition : packoffset(c3);
}
Texture2D<float4> StereoParmsTexture : register(t20);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  float4 v2 : COLOR0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = gWorldViewProj._m10_m11_m12_m13 * v0.yyyy;
  r0.xyzw = v0.xxxx * gWorldViewProj._m00_m01_m02_m03 + r0.xyzw;
  r0.xyzw = v0.zzzz * gWorldViewProj._m20_m21_m22_m23 + r0.xyzw;
  r0.xyzw = gWorldViewProj._m30_m31_m32_m33 + r0.xyzw;
  o0.xyzw = r0.xyzw;
  r1.xyz = float3(0.5,0.5,0.5) * r0.wyx;
  r0.y = r0.w * 0.5 + -r1.y;
  o1.y = r0.y;
  o5.y = r0.y;
  o1.x = r1.z + r1.x;
  r2.xyz = gWorld._m30_m31_m32 + v0.xyz;
  r0.yz = -gWorldBaseVS.xy + r2.xy;
  o1.zw = r0.yz * float2(0.001953125,0.001953125) + float2(0.001953125,0.001953125);
  o2.xyz = float3(0,0,1);
  o2.w = v2.w;
  r2.w = r0.w;
  o3.xyzw = r2.xyzw;
  o5.zw = r2.ww;
  r0.yz = -FogParams.xy + r2.xy;
  o4.zw = gWaterAmbientColor.ww * r2.xy;
  r0.yz = FogParams.zw * r0.yz;
  o4.xy = r0.yz * float2(1,-1) + float2(0,1);
  r3.xyzw = StereoParmsTexture.Load(float4(0,0,0,0)).xyzw;
  r0.y = -r3.y + r2.w;
  r0.x = r3.x * r0.y + r0.x;
  o5.x = r0.x * 0.5 + r1.x;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64 [unused]
//
// }
//
// cbuffer water_globals
// {
//
//   float2 gWorldBaseVS;               // Offset:    0 Size:     8
//   float4 gFlowParams;                // Offset:   16 Size:    16 [unused]
//   float4 gFlowParams2;               // Offset:   32 Size:    16 [unused]
//   float4 gWaterAmbientColor;         // Offset:   48 Size:    16
//   float4 gWaterDirectionalColor;     // Offset:   64 Size:    16 [unused]
//   float4 gScaledTime;                // Offset:   80 Size:    16 [unused]
//   float4 gOceanParams0;              // Offset:   96 Size:    16 [unused]
//   float4 gOceanParams1;              // Offset:  112 Size:    16 [unused]
//   row_major float4x4 gReflectionWorldViewProj;// Offset:  128 Size:    64 [unused]
//   float4 gFogLight_Debugging;        // Offset:  192 Size:    16 [unused]
//   row_major float4x4 gRefractionWorldViewProj;// Offset:  208 Size:    64 [unused]
//   float4 gOceanParams2;              // Offset:  272 Size:    16 [unused]
//
// }
//
// cbuffer water_locals
// {
//
//   float4 OceanLocalParams0;          // Offset:    0 Size:    16 [unused]
//   float4 FogParams;                  // Offset:   16 Size:    16
//   float4 QuadAlpha;                  // Offset:   32 Size:    16 [unused]
//   float3 CameraPosition;             // Offset:   48 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// StereoParmsTexture                texture  float4          2d   20        1
// water_locals                      cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
// water_globals                     cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t20
dcl_input v0.xyz
dcl_input v2.w
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 4
mul r0.xyzw, v0.yyyy, cb1[9].xyzw
mad r0.xyzw, v0.xxxx, cb1[8].xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, cb1[10].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[11].xyzw
mov o0.xyzw, r0.xyzw
mul r1.xyz, r0.wyxw, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.y, r0.w, l(0.500000), -r1.y
mov o1.y, r0.y
mov o5.y, r0.y
add o1.x, r1.x, r1.z
add r2.xyz, v0.xyzx, cb1[3].xyzx
add r0.yz, r2.xxyx, -cb4[0].xxyx
mad o1.zw, r0.yyyz, l(0.000000, 0.000000, 0.001953, 0.001953), l(0.000000, 0.000000, 0.001953, 0.001953)
mov o2.xyz, l(0,0,1.000000,0)
mov o2.w, v2.w
mov r2.w, r0.w
mov o3.xyzw, r2.xyzw
mov o5.zw, r2.wwww
add r0.yz, r2.xxyx, -cb0[1].xxyx
mul o4.zw, r2.xxxy, cb4[3].wwww
mul r0.yz, r0.yyzy, cb0[1].zzwz
mad o4.xy, r0.yzyy, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
ld r3.xyzw, l(0, 0, 0, 0), t20.xyzw
add r0.y, r2.w, -r3.y
mad r0.x, r3.x, r0.y, r0.x
mad o5.x, r0.x, l(0.500000), r1.x
ret 
// Approximately 27 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.1.36 on Fri Jul 31 21:34:52 2015
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64 [unused]
//
// }
//
// cbuffer water_globals
// {
//
//   float2 gWorldBaseVS;               // Offset:    0 Size:     8
//   float4 gFlowParams;                // Offset:   16 Size:    16 [unused]
//   float4 gFlowParams2;               // Offset:   32 Size:    16 [unused]
//   float4 gWaterAmbientColor;         // Offset:   48 Size:    16
//   float4 gWaterDirectionalColor;     // Offset:   64 Size:    16 [unused]
//   float4 gScaledTime;                // Offset:   80 Size:    16 [unused]
//   float4 gOceanParams0;              // Offset:   96 Size:    16 [unused]
//   float4 gOceanParams1;              // Offset:  112 Size:    16 [unused]
//   row_major float4x4 gReflectionWorldViewProj;// Offset:  128 Size:    64 [unused]
//   float4 gFogLight_Debugging;        // Offset:  192 Size:    16 [unused]
//   row_major float4x4 gRefractionWorldViewProj;// Offset:  208 Size:    64 [unused]
//   float4 gOceanParams2;              // Offset:  272 Size:    16 [unused]
//
// }
//
// cbuffer water_locals
// {
//
//   float4 OceanLocalParams0;          // Offset:    0 Size:    16 [unused]
//   float4 FogParams;                  // Offset:   16 Size:    16
//   float4 QuadAlpha;                  // Offset:   32 Size:    16 [unused]
//   float3 CameraPosition;             // Offset:   48 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// StereoParmsTexture                texture  float4          2d   20        1
// water_locals                      cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
// water_globals                     cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t20
dcl_input v0.xyz
dcl_input v2.w
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 4
mul r0.xyzw, v0.yyyy, cb1[9].xyzw
mad r0.xyzw, v0.xxxx, cb1[8].xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, cb1[10].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[11].xyzw
mov o0.xyzw, r0.xyzw
mul r1.xyz, r0.wyxw, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.y, r0.w, l(0.500000), -r1.y
mov o1.y, r0.y
mov o5.y, r0.y
add o1.x, r1.x, r1.z
add r2.xyz, v0.xyzx, cb1[3].xyzx
add r0.yz, r2.xxyx, -cb4[0].xxyx
mad o1.zw, r0.yyyz, l(0.000000, 0.000000, 0.001953, 0.001953), l(0.000000, 0.000000, 0.001953, 0.001953)
mov o2.xyz, l(0,0,1.000000,0)
mov o2.w, v2.w
mov r2.w, r0.w
mov o3.xyzw, r2.xyzw
mov o5.zw, r2.wwww
add r0.yz, r2.xxyx, -cb0[1].xxyx
mul o4.zw, r2.xxxy, cb4[3].wwww
mul r0.yz, r0.yyzy, cb0[1].zzwz
mad o4.xy, r0.yzyy, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
ld r3.xyzw, l(0, 0, 0, 0), t20.xyzw
add r0.y, r2.w, -r3.y
mad r0.x, r3.x, r0.y, r0.x
mad o5.x, r0.x, l(0.500000), r1.x
ret 
// Approximately 27 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
