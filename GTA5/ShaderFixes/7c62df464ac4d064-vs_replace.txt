
cbuffer rage_matrices : register(b1)
{
  row_major float4x4 gWorld : packoffset(c0);
  row_major float4x4 gWorldView : packoffset(c4);
  row_major float4x4 gWorldViewProj : packoffset(c8);
  row_major float4x4 gViewInverse : packoffset(c12);
}

cbuffer rage_clipplanes : register(b0)
{
  float4 ClipPlanes : packoffset(c0);
}
Texture2D<float4> StereoParmsTexture : register(t20);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  float4 v1 : TEXCOORD0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : SV_Position0,
  out float4 o4 : SV_ClipDistance0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.xyz = gWorld._m30_m31_m32 + v0.xyz;
  o0.w = 0;
  r0.xyzw = StereoParmsTexture.Load(float4(0,0,0,0)).xyzw;
  r1.xyzw = gWorldViewProj._m10_m11_m12_m13 * v0.yyyy;
  r1.xyzw = v0.xxxx * gWorldViewProj._m00_m01_m02_m03 + r1.xyzw;
  r1.xyzw = v0.zzzz * gWorldViewProj._m20_m21_m22_m23 + r1.xyzw;
  r1.xyzw = v0.wwww * gWorldViewProj._m30_m31_m32_m33 + r1.xyzw;
  r0.y = r1.w + -r0.y;
  r0.x = r0.x * r0.y + r1.x;
  r0.yz = float2(0.5,0.5) * r1.wy;
  r2.x = r0.x * 0.5 + r0.y;
  r2.y = r1.w * 0.5 + -r0.z;
  r2.zw = r1.ww;
  o1.xyzw = r2.xyww;
  o2.xyzw = r2.xyzw;
  o3.xyzw = r1.xyzw;
  o4.x = dot(r1.xyzw, ClipPlanes.xyzw);
  o4.yzw = float3(0,0,0);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64 [unused]
//
// }
//
// cbuffer rage_clipplanes
// {
//
//   float4 ClipPlanes;                 // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// StereoParmsTexture                texture  float4          2d   20        1
// rage_clipplanes                   cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_Position              0   xyzw        3      POS   float   xyzw
// SV_ClipDistance          0   xyzw        4  CLIPDST   float   xyzw
//
vs_4_0
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t20
dcl_input v0.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output_siv o3.xyzw, position
dcl_output_siv o4.xyzw, clip_distance
dcl_temps 3
add o0.xyz, v0.xyzx, cb1[3].xyzx
mov o0.w, l(0)
ld r0.xyzw, l(0, 0, 0, 0), t20.xyzw
mul r1.xyzw, v0.yyyy, cb1[9].xyzw
mad r1.xyzw, v0.xxxx, cb1[8].xyzw, r1.xyzw
mad r1.xyzw, v0.zzzz, cb1[10].xyzw, r1.xyzw
mad r1.xyzw, v0.wwww, cb1[11].xyzw, r1.xyzw
add r0.y, -r0.y, r1.w
mad r0.x, r0.x, r0.y, r1.x
mul r0.yz, r1.wwyw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.x, r0.x, l(0.500000), r0.y
mad r2.y, r1.w, l(0.500000), -r0.z
mov r2.zw, r1.wwww
mov o1.xyzw, r2.xyww
mov o2.xyzw, r2.xyzw
mov o3.xyzw, r1.xyzw
dp4 o4.x, r1.xyzw, cb0[0].xyzw
mov o4.yzw, l(0,0,0,0)
ret 
// Approximately 19 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.1.36 on Fri Jul 31 21:34:53 2015
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64 [unused]
//
// }
//
// cbuffer rage_clipplanes
// {
//
//   float4 ClipPlanes;                 // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// StereoParmsTexture                texture  float4          2d   20        1
// rage_clipplanes                   cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_Position              0   xyzw        3      POS   float   xyzw
// SV_ClipDistance          0   xyzw        4  CLIPDST   float   xyzw
//
vs_4_0
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t20
dcl_input v0.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output_siv o3.xyzw, position
dcl_output_siv o4.xyzw, clip_distance
dcl_temps 3
add o0.xyz, v0.xyzx, cb1[3].xyzx
mov o0.w, l(0)
ld r0.xyzw, l(0, 0, 0, 0), t20.xyzw
mul r1.xyzw, v0.yyyy, cb1[9].xyzw
mad r1.xyzw, v0.xxxx, cb1[8].xyzw, r1.xyzw
mad r1.xyzw, v0.zzzz, cb1[10].xyzw, r1.xyzw
mad r1.xyzw, v0.wwww, cb1[11].xyzw, r1.xyzw
add r0.y, -r0.y, r1.w
mad r0.x, r0.x, r0.y, r1.x
mul r0.yz, r1.wwyw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.x, r0.x, l(0.500000), r0.y
mad r2.y, r1.w, l(0.500000), -r0.z
mov r2.zw, r1.wwww
mov o1.xyzw, r2.xyww
mov o2.xyzw, r2.xyzw
mov o3.xyzw, r1.xyzw
dp4 o4.x, r1.xyzw, cb0[0].xyzw
mov o4.yzw, l(0,0,0,0)
ret 
// Approximately 19 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
