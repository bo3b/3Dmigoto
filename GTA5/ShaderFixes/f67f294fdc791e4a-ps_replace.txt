
cbuffer rage_matrices : register(b1)
{
  row_major float4x4 gWorld : packoffset(c0);
  row_major float4x4 gWorldView : packoffset(c4);
  row_major float4x4 gWorldViewProj : packoffset(c8);
  row_major float4x4 gViewInverse : packoffset(c12);
}

cbuffer waterTex_locals : register(b0)
{
  float4 WaterBumpParams[2] : packoffset(c0);
  float4 gProjParams : packoffset(c2);
  float4 gFogCompositeParams : packoffset(c3);
  float4 gFogCompositeAmbientColor : packoffset(c4);
  float4 gFogCompositeDirectionalColor : packoffset(c5);
  float4 gFogCompositeTexOffset : packoffset(c6);
  float4 UpdateParams0 : packoffset(c7);
  float4 UpdateParams1 : packoffset(c8);
  float4 UpdateParams2 : packoffset(c9);
  float4 UpdateOffset : packoffset(c10);
}
SamplerState LinearSampler_s : register(s2);
SamplerState LinearSampler2_s : register(s3);
SamplerState FullSampler_s : register(s7);
SamplerState DepthSampler_s : register(s8);
SamplerState PointSampler_s : register(s9);
SamplerState PointSampler2_s : register(s10);
SamplerState LinearWrapSampler_s : register(s11);
SamplerState LinearWrapSampler2_s : register(s12);
Texture2D<float4> LinearSampler : register(t2);
Texture2D<float4> LinearSampler2 : register(t3);
Texture2D<float4> FullSampler : register(t7);
Texture2D<float4> DepthSampler : register(t8);
Texture2D<float4> PointSampler : register(t9);
Texture2D<float4> PointSampler2 : register(t10);
Texture2D<float4> LinearWrapSampler : register(t11);
Texture2D<float4> LinearWrapSampler2 : register(t12);
Texture2D<float4> StereoParmsTexture : register(t20);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = gFogCompositeTexOffset.xy + v1.xy;
  r0.xyzw = LinearSampler.Sample(LinearSampler_s, r0.xy).xyzw;
  r1.xyzw = LinearSampler2.Sample(LinearSampler2_s, v1.xy).xyzw;
  r0.w = 0 < r1.y;
  r2.xyzw = DepthSampler.Sample(DepthSampler_s, v1.xy).xyzw;
  r3.xyzw = StereoParmsTexture.Load(float4(0,0,0,0)).xyzw;
  r1.x = -r3.y + r2.x;
  r1.x = r3.x * r1.x;
  r1.x = gProjParams.x * r1.x;
  r1.xy = -gViewInverse._m01_m00 * r1.xx + gViewInverse._m31_m30;
  r1.xy = r2.xx * v2.yx + r1.xy;
  r2.yz = r1.yx * float2(0.0199999996,0.0199999996) + gFogCompositeParams.zz;
  r3.xyzw = LinearWrapSampler.Sample(LinearWrapSampler_s, r2.yz).xyzw;
  r2.yz = float2(-0.5,-0.5) + r3.yw;
  r3.xy = float2(1,0.300000012) * r2.yz;
  r3.zw = -gFogCompositeParams.zz * float2(15,15) + r1.yx;
  r2.yz = r2.yz * float2(1,0.300000012) + r3.zw;
  r4.xyzw = LinearWrapSampler2.Sample(LinearWrapSampler2_s, r2.yz).xyzw;
  r1.xy = gFogCompositeParams.zz * float2(15,15) + r1.xy;
  r1.xy = r1.xy * float2(0.64546001,0.64546001) + r3.xy;
  r3.xyzw = LinearWrapSampler2.Sample(LinearWrapSampler2_s, r1.xy).xyzw;
  if (r0.w != 0) {
    r5.xyzw = PointSampler2.Sample(PointSampler2_s, v1.xy).xyzw;
    r6.xyzw = PointSampler.Sample(PointSampler_s, v1.xy).xyzw;
    r0.w = 0 != r0.y;
    r0.w = r0.w ? 0 : 1;
    r1.xyz = r4.xyz * r3.xyz;
    r1.xyz = r1.xyz * r6.yyy;
    r1.xyz = r1.xyz * float3(10,10,10) + float3(1,1,1);
    r2.yzw = r1.xyz * r0.xyz;
    r3.xyz = r5.xyz * r5.xyz;
    r4.xyzw = FullSampler.Sample(FullSampler_s, v1.xy).xyzw;
    r3.w = 1 + gProjParams.w;
    r3.w = r3.w + -r4.x;
    r3.w = gProjParams.z / r3.w;
    r4.x = 0 != r5.y;
    r2.x = -r3.w + r2.x;
    r7.y = max(0, r2.x);
    r7.x = r6.x * r6.x;
    r7.z = abs(v2.z) * r7.x;
    r4.yz = r7.yz * r7.xy;
    r4.yz = float2(-78.4330368,-235.299103) * r4.yz;
    r4.yz = exp2(r4.yz);
    r4.yz = r4.xx ? r4.yz : float2(1,1);
    o0.w = r4.x ? r6.y : r0.w;
    r2.xyz = r2.yzw * r5.xyz;
    r2.xyz = r2.xyz + r2.xyz;
    r0.xyz = r0.xyz * r1.xyz + -r2.xyz;
    r0.xyz = r4.zzz * r0.xyz + r2.xyz;
    r0.w = gFogCompositeParams.y * r1.w;
    r1.xyz = r0.www * gFogCompositeDirectionalColor.xyz + gFogCompositeAmbientColor.xyz;
    r0.w = gFogCompositeParams.x * r6.z;
    r0.w = r0.w * r1.w;
    r2.xyz = r0.www * r5.xyz;
    r2.xyz = gFogCompositeDirectionalColor.xyz * r2.xyz;
    r1.xyz = r3.xyz * r1.xyz + r2.xyz;
    r0.xyz = -r1.xyz + r0.xyz;
    o0.xyz = r4.yyy * r0.xyz + r1.xyz;
  } else {
    o0.xyzw = float4(0,0,0,0);
  }
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64 [unused]
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64 [unused]
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64
//
// }
//
// cbuffer waterTex_locals
// {
//
//   float4 WaterBumpParams[2];         // Offset:    0 Size:    32 [unused]
//   float4 gProjParams;                // Offset:   32 Size:    16
//   float4 gFogCompositeParams;        // Offset:   48 Size:    16
//   float4 gFogCompositeAmbientColor;  // Offset:   64 Size:    16
//   float4 gFogCompositeDirectionalColor;// Offset:   80 Size:    16
//   float4 gFogCompositeTexOffset;     // Offset:   96 Size:    16
//   float4 UpdateParams0;              // Offset:  112 Size:    16 [unused]
//   float4 UpdateParams1;              // Offset:  128 Size:    16 [unused]
//   float4 UpdateParams2;              // Offset:  144 Size:    16 [unused]
//   float4 UpdateOffset;               // Offset:  160 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LinearSampler                     sampler      NA          NA    2        1
// LinearSampler2                    sampler      NA          NA    3        1
// FullSampler                       sampler      NA          NA    7        1
// DepthSampler                      sampler      NA          NA    8        1
// PointSampler                      sampler      NA          NA    9        1
// PointSampler2                     sampler      NA          NA   10        1
// LinearWrapSampler                 sampler      NA          NA   11        1
// LinearWrapSampler2                sampler      NA          NA   12        1
// LinearSampler                     texture  float4          2d    2        1
// LinearSampler2                    texture  float4          2d    3        1
// FullSampler                       texture  float4          2d    7        1
// DepthSampler                      texture  float4          2d    8        1
// PointSampler                      texture  float4          2d    9        1
// PointSampler2                     texture  float4          2d   10        1
// LinearWrapSampler                 texture  float4          2d   11        1
// LinearWrapSampler2                texture  float4          2d   12        1
// StereoParmsTexture                texture  float4          2d   20        1
// waterTex_locals                   cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb1[16], immediateIndexed
dcl_constantbuffer cb0[7], immediateIndexed
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 8
add r0.xy, v1.xyxx, cb0[6].xyxx
sample r0.xyzw, r0.xyxx, t2.xyzw, s2
sample r1.xyzw, v1.xyxx, t3.xyzw, s3
lt r0.w, l(0.000000), r1.y
sample r2.xyzw, v1.xyxx, t8.xyzw, s8
ld r3.xyzw, l(0, 0, 0, 0), t20.xyzw
add r1.x, r2.x, -r3.y
mul r1.x, r1.x, r3.x
mul r1.x, r1.x, cb0[2].x
mad r1.xy, -cb1[12].yxyy, r1.xxxx, cb1[15].yxyy
mad r1.xy, r2.xxxx, v2.yxyy, r1.xyxx
mad r2.yz, r1.yyxy, l(0.000000, 0.020000, 0.020000, 0.000000), cb0[3].zzzz
sample r3.xyzw, r2.yzyy, t11.xyzw, s11
add r2.yz, r3.yywy, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r3.xy, r2.yzyy, l(1.000000, 0.300000, 0.000000, 0.000000)
mad r3.zw, -cb0[3].zzzz, l(0.000000, 0.000000, 15.000000, 15.000000), r1.yyyx
mad r2.yz, r2.yyzy, l(0.000000, 1.000000, 0.300000, 0.000000), r3.zzwz
sample r4.xyzw, r2.yzyy, t12.xyzw, s12
mad r1.xy, cb0[3].zzzz, l(15.000000, 15.000000, 0.000000, 0.000000), r1.xyxx
mad r1.xy, r1.xyxx, l(0.645460, 0.645460, 0.000000, 0.000000), r3.xyxx
sample r3.xyzw, r1.xyxx, t12.xyzw, s12
if_nz r0.w
  sample r5.xyzw, v1.xyxx, t10.xyzw, s10
  sample r6.xyzw, v1.xyxx, t9.xyzw, s9
  ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), r0.y
  movc r0.w, r0.w, l(0), l(1.000000)
  mul r1.xyz, r3.xyzx, r4.xyzx
  mul r1.xyz, r6.yyyy, r1.xyzx
  mad r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.yzw, r0.xxyz, r1.xxyz
  mul r3.xyz, r5.xyzx, r5.xyzx
  sample r4.xyzw, v1.xyxx, t7.xyzw, s7
  add r3.w, cb0[2].w, l(1.000000)
  add r3.w, -r4.x, r3.w
  div r3.w, cb0[2].z, r3.w
  ne r4.x, l(0.000000, 0.000000, 0.000000, 0.000000), r5.y
  add r2.x, r2.x, -r3.w
  max r7.y, r2.x, l(0.000000)
  mul r7.x, r6.x, r6.x
  mul r7.z, r7.x, |v2.z|
  mul r4.yz, r7.xxyx, r7.yyzy
  mul r4.yz, r4.yyzy, l(0.000000, -78.433037, -235.299103, 0.000000)
  exp r4.yz, r4.yyzy
  movc r4.yz, r4.xxxx, r4.yyzy, l(0,1.000000,1.000000,0)
  movc o0.w, r4.x, r6.y, r0.w
  mul r2.xyz, r5.xyzx, r2.yzwy
  add r2.xyz, r2.xyzx, r2.xyzx
  mad r0.xyz, r0.xyzx, r1.xyzx, -r2.xyzx
  mad r0.xyz, r4.zzzz, r0.xyzx, r2.xyzx
  mul r0.w, r1.w, cb0[3].y
  mad r1.xyz, r0.wwww, cb0[5].xyzx, cb0[4].xyzx
  mul r0.w, r6.z, cb0[3].x
  mul r0.w, r1.w, r0.w
  mul r2.xyz, r5.xyzx, r0.wwww
  mul r2.xyz, r2.xyzx, cb0[5].xyzx
  mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
  add r0.xyz, r0.xyzx, -r1.xyzx
  mad o0.xyz, r4.yyyy, r0.xyzx, r1.xyzx
else 
  mov o0.xyzw, l(0,0,0,0)
endif 
ret 
// Approximately 62 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.1.36 on Fri Jul 31 21:34:54 2015
//
//
// Buffer Definitions: 
//
// cbuffer rage_matrices
// {
//
//   row_major float4x4 gWorld;         // Offset:    0 Size:    64 [unused]
//   row_major float4x4 gWorldView;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 gWorldViewProj; // Offset:  128 Size:    64 [unused]
//   row_major float4x4 gViewInverse;   // Offset:  192 Size:    64
//
// }
//
// cbuffer waterTex_locals
// {
//
//   float4 WaterBumpParams[2];         // Offset:    0 Size:    32 [unused]
//   float4 gProjParams;                // Offset:   32 Size:    16
//   float4 gFogCompositeParams;        // Offset:   48 Size:    16
//   float4 gFogCompositeAmbientColor;  // Offset:   64 Size:    16
//   float4 gFogCompositeDirectionalColor;// Offset:   80 Size:    16
//   float4 gFogCompositeTexOffset;     // Offset:   96 Size:    16
//   float4 UpdateParams0;              // Offset:  112 Size:    16 [unused]
//   float4 UpdateParams1;              // Offset:  128 Size:    16 [unused]
//   float4 UpdateParams2;              // Offset:  144 Size:    16 [unused]
//   float4 UpdateOffset;               // Offset:  160 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LinearSampler_s                   sampler      NA          NA    2        1
// LinearSampler2_s                  sampler      NA          NA    3        1
// FullSampler_s                     sampler      NA          NA    7        1
// DepthSampler_s                    sampler      NA          NA    8        1
// PointSampler_s                    sampler      NA          NA    9        1
// PointSampler2_s                   sampler      NA          NA   10        1
// LinearWrapSampler_s               sampler      NA          NA   11        1
// LinearWrapSampler2_s              sampler      NA          NA   12        1
// LinearSampler                     texture  float4          2d    2        1
// LinearSampler2                    texture  float4          2d    3        1
// FullSampler                       texture  float4          2d    7        1
// DepthSampler                      texture  float4          2d    8        1
// PointSampler                      texture  float4          2d    9        1
// PointSampler2                     texture  float4          2d   10        1
// LinearWrapSampler                 texture  float4          2d   11        1
// LinearWrapSampler2                texture  float4          2d   12        1
// StereoParmsTexture                texture  float4          2d   20        1
// waterTex_locals                   cbuffer      NA          NA    0        1
// rage_matrices                     cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb1[16], immediateIndexed
dcl_constantbuffer cb0[7], immediateIndexed
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 8
add r0.xy, v1.xyxx, cb0[6].xyxx
sample r0.xyzw, r0.xyxx, t2.xyzw, s2
sample r1.xyzw, v1.xyxx, t3.xyzw, s3
lt r0.w, l(0.000000), r1.y
sample r2.xyzw, v1.xyxx, t8.xyzw, s8
ld r3.xyzw, l(0, 0, 0, 0), t20.xyzw
add r1.x, r2.x, -r3.y
mul r1.x, r1.x, r3.x
mul r1.x, r1.x, cb0[2].x
mad r3.xyzw, -cb1[12].xyyx, r1.xxxx, cb1[15].xyyx
mad r3.xyzw, r2.xxxx, v2.xyyx, r3.xyzw
mad r1.xy, r3.wzww, l(0.020000, 0.020000, 0.000000, 0.000000), cb0[3].zzzz
sample r4.xyzw, r1.xyxx, t11.xyzw, s11
add r1.xy, r4.ywyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.yz, r1.xxyx, l(0.000000, 1.000000, 0.300000, 0.000000)
mad r3.xyzw, cb0[3].zzzz, l(-15.000000, -15.000000, 15.000000, 15.000000), r3.xyzw
mad r1.xy, r1.xyxx, l(1.000000, 0.300000, 0.000000, 0.000000), r3.xyxx
sample r4.xyzw, r1.xyxx, t12.xyzw, s12
mad r1.xy, r3.zwzz, l(0.645460, 0.645460, 0.000000, 0.000000), r2.yzyy
sample r3.xyzw, r1.xyxx, t12.xyzw, s12
if_nz r0.w
  sample r5.xyzw, v1.xyxx, t10.xyzw, s10
  sample r6.xyzw, v1.xyxx, t9.xyzw, s9
  ne r0.w, r0.y, l(0.000000)
  movc r0.w, r0.w, l(0), l(1.000000)
  mul r1.xyz, r3.xyzx, r4.xyzx
  mul r1.xyz, r6.yyyy, r1.xyzx
  mad r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.yzw, r0.xxyz, r1.xxyz
  mul r3.xyz, r5.xyzx, r5.xyzx
  sample r4.xyzw, v1.xyxx, t7.xyzw, s7
  add r3.w, l(1.000000), cb0[2].w
  add r3.w, -r4.x, r3.w
  div r3.w, cb0[2].z, r3.w
  ne r4.x, r5.y, l(0.000000)
  add r2.x, r2.x, -r3.w
  max r7.y, r2.x, l(0.000000)
  mul r7.x, r6.x, r6.x
  mul r7.z, r7.x, |v2.z|
  mul r4.yz, r7.xxyx, r7.yyzy
  mul r4.yz, r4.yyzy, l(0.000000, -78.433037, -235.299103, 0.000000)
  exp r4.yz, r4.yyzy
  movc r4.yz, r4.xxxx, r4.yyzy, l(0,1.000000,1.000000,0)
  movc o0.w, r4.x, r6.y, r0.w
  mul r2.xyz, r5.xyzx, r2.yzwy
  add r2.xyz, r2.xyzx, r2.xyzx
  mad r0.xyz, r1.xyzx, r0.xyzx, -r2.xyzx
  mad r0.xyz, r4.zzzz, r0.xyzx, r2.xyzx
  mul r0.w, r1.w, cb0[3].y
  mad r1.xyz, r0.wwww, cb0[5].xyzx, cb0[4].xyzx
  mul r0.w, r6.z, cb0[3].x
  mul r0.w, r1.w, r0.w
  mul r2.xyz, r5.xyzx, r0.wwww
  mul r2.xyz, r2.xyzx, cb0[5].xyzx
  mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
  add r0.xyz, r0.xyzx, -r1.xyzx
  mad o0.xyz, r4.yyyy, r0.xyzx, r1.xyzx
else 
  mov o0.xyzw, l(0,0,0,0)
endif 
ret 
// Approximately 61 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
