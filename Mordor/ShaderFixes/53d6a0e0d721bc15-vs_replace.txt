// Half moon shaped sword of Urfael power bar.  Background highlight.

// Also the little knot icon in first launch screen, and bar on left.

cbuffer Constants : register(b0)
{
  float4x4 vfmuniforms[24] : packoffset(c0);
  float4 vfuniforms[48] : packoffset(c96);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : COLOR0,
  float4 v1 : SV_Position0,
  out float4 o0 : COLOR0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : SV_Position0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 params = IniParams.Load(0);
float4 stereo = StereoParams.Load(0);
bool aimMode = (params.w == 1);
bool playMode = (params.z == 1);

  o0.xyzw = v0.xyzw;
  r0.xyz = v0.zzz * float3(2.550100e+002,5.100200e+002,5.100200e+002) + float3(1.000000e-001,1.000000e-001,1.100000e+000);
  r0.xyz = (uint3)r0.xyz;
  o1.x = dot(v1.xyzw, vfuniforms[r0.y].xyzw);
  o1.y = dot(v1.xyzw, vfuniforms[r0.z].xyzw);

// We can't use the prime directive, because the output is simply x,y fragment.
// So that's the wrong coordinate space.
// o2, the position, is not used by the pixel shader at all.
// Let's try to just offset it left and right by an arbitrary amount
// that just looks right. The stereo.z tells us which eye is active,
// and thus either shifts left or right depending upon sync.

  r0.x = (uint)r0.x << 2;
  o2.x = dot(v1.xyzw, vfmuniforms[r0.x/4]._m00_m10_m20_m30);
  o2.y = dot(v1.xyzw, vfmuniforms[r0.x/4]._m01_m11_m21_m31);
  o2.z = dot(v1.xyzw, vfmuniforms[r0.x/4]._m02_m12_m22_m32);
  o2.w = dot(v1.xyzw, vfmuniforms[r0.x/4]._m03_m13_m23_m33);
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//   using 3Dmigoto v1.1.20 on Sun Jun 21 00:35:23 2015
//
//
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4x4 vfmuniforms[24];          // Offset:    0 Size:  1536
//   float4 vfuniforms[48];             // Offset: 1536 Size:   768
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output_siv o2.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
mad r0.xyz, v0.zzzz, l(255.009995, 510.019989, 510.019989, 0.000000), l(0.100000, 0.100000, 1.100000, 0.000000)
ftou r0.xyz, r0.xyzx
dp4 o1.x, v1.xyzw, cb0[r0.y + 96].xyzw
dp4 o1.y, v1.xyzw, cb0[r0.z + 96].xyzw
ishl r0.x, r0.x, l(2)
dp4 o2.x, v1.xyzw, cb0[r0.x + 0].xyzw
dp4 o2.y, v1.xyzw, cb0[r0.x + 1].xyzw
dp4 o2.z, v1.xyzw, cb0[r0.x + 2].xyzw
dp4 o2.w, v1.xyzw, cb0[r0.x + 3].xyzw
ret 
// Approximately 11 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  