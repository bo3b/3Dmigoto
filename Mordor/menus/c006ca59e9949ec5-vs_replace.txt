// Checkmark icons in the setup menus.

cbuffer Constants : register(b0)
{
  float4x4 vfmuniforms[24] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : COLOR0,
  float4 v1 : COLOR1,
  float4 v2 : SV_Position0,
  out float4 o0 : COLOR0,
  out float4 o1 : COLOR1,
  out float4 o2 : SV_Position0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.xyzw = v0.xyzw;
  o1.xyzw = v1.xyzw;
  r0.x = v1.z * 2.550099945e+002 + 1.000000015e-001;
  r0.x = (uint)r0.x;
  r0.x = (uint)r0.x << 2;
  o2.x = dot(v2.xyzw, vfmuniforms[r0.x/4]._m00_m10_m20_m30);
  o2.y = dot(v2.xyzw, vfmuniforms[r0.x/4]._m01_m11_m21_m31);
  o2.z = dot(v2.xyzw, vfmuniforms[r0.x/4]._m02_m12_m22_m32);
  o2.w = dot(v2.xyzw, vfmuniforms[r0.x/4]._m03_m13_m23_m33);
  
float4 params = IniParams.Load(0);
float4 stereo = StereoParams.Load(0);
bool aimMode = (params.w == 0);
bool playMode = (params.z == 0);

//if (!playMode)
{
  o2.x += stereo.x;// * params.x;
}

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4x4 vfmuniforms[24];          // Offset:    0 Size:  1536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[96], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output_siv o2.xyzw, position
dcl_temps 1
mov o0.xyzw, v0.xyzw
mov o1.xyzw, v1.xyzw
mad r0.x, v1.z, l(255.009995), l(0.100000)
ftou r0.x, r0.x
ishl r0.x, r0.x, l(2)
dp4 o2.x, v2.xyzw, cb0[r0.x + 0].xyzw
dp4 o2.y, v2.xyzw, cb0[r0.x + 1].xyzw
dp4 o2.z, v2.xyzw, cb0[r0.x + 2].xyzw
dp4 o2.w, v2.xyzw, cb0[r0.x + 3].xyzw
ret 
// Approximately 10 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
