//Bloom
//<VertexShader hash="dfdfbbf5289afb86">
//<CalledPixelShaders>0ce4dbbf7be54a4c 27db8a67697893f6 6342bb538f53eecd </CalledPixelShaders>
cbuffer PER_BATCH : register(b0)
{
  float4 HDRParams1 : packoffset(c0);
  float4 HDRParams0 : packoffset(c1);
  float4 HDRParams2 : packoffset(c2);
}
SamplerState baseMap_s : register(s0);
SamplerState lumMap1_s : register(s1);
Texture2D<float4> baseMap : register(t0);
Texture2D<float4> lumMap1 : register(t1);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = lumMap1.Sample(lumMap1_s, v1.xy).x;
  r0.x = -HDRParams1.x + r0.x;
  r0.x = HDRParams0.x * r0.x + HDRParams1.x;
  r0.x = 9.99999997e-007 + r0.x;
  r0.x = HDRParams0.w / r0.x;
  r1.xyzw = baseMap.Sample(baseMap_s, v1.xy).xyzw;
  r1.xyzw = HDRParams2.yyyy * r1.xyzw;
  r0.yzw = float3(10000,10000,10000) < r1.xyz;
  r0.yzw = r0.yzw ? float3(1,1,1) : r1.xyz;
  r0.xyz = r0.yzw * r0.xxx + -HDRParams0.zzz;
  r0.xyz = max(float3(0,0,0), r0.xyz);
  r2.xyz = HDRParams0.yyy + r0.xyz;
  r1.xyz = r0.xyz / r2.xyz;
  o0.xyzw = float4(8,8,8,8) * r1.xyzw;
  
  //o0 = 0;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   using 3Dmigoto v1.1.34 on Tue Aug 04 16:30:39 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 HDRParams1;                 // Offset:    0 Size:    16
//   float4 HDRParams0;                 // Offset:   16 Size:    16
//   float4 HDRParams2;                 // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// baseMap                           sampler      NA          NA    0        1
// lumMap1                           sampler      NA          NA    1        1
// baseMap                           texture  float4          2d    0        1
// lumMap1                           texture  float4          2d    1        1
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t1.xyzw, s1
add r0.x, r0.x, -cb0[0].x
mad r0.x, cb0[1].x, r0.x, cb0[0].x
add r0.x, r0.x, l(0.000001)
div r0.x, cb0[1].w, r0.x
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, cb0[2].yyyy
lt r0.yzw, l(0.000000, 10000.000000, 10000.000000, 10000.000000), r1.xxyz
movc r0.yzw, r0.yyzw, l(0,1.000000,1.000000,1.000000), r1.xxyz
mad r0.xyz, r0.yzwy, r0.xxxx, -cb0[1].zzzz
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.xyz, r0.xyzx, cb0[1].yyyy
div r1.xyz, r0.xyzx, r2.xyzx
mul o0.xyzw, r1.xyzw, l(8.000000, 8.000000, 8.000000, 8.000000)
ret 
// Approximately 15 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 