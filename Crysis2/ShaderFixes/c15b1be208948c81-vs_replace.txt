//HUD Minimap and Gun info
cbuffer PER_BATCH : register(b0)
{
  row_major float4x4 mViewProj : packoffset(c0);
  float4 HudTexCoordParams : packoffset(c4);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  float4 v2 : COLOR0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v0.xyz;
  r0.w = 1;
  r1.x = dot(mViewProj._m00_m01_m02_m03, r0.xyzw);
  r1.y = dot(mViewProj._m10_m11_m12_m13, r0.xyzw);
  r1.z = dot(mViewProj._m20_m21_m22_m23, r0.xyzw);
  r1.w = dot(mViewProj._m30_m31_m32_m33, r0.xyzw);
  o0.xyzw = r1.xyzw;
  r0.xy = r1.xy * float2(1,-1) + r1.ww;
  o2.zw = r1.zw;
  o2.xy = float2(0.5,0.5) * r0.xy;
  r0.xy = HudTexCoordParams.xy * v1.xy;
  o1.zw = HudTexCoordParams.zw * r0.xy;
  o1.xy = r0.xy;
  
    float4 stereo = StereoParams.Load(0);
  float4 iniParams = IniParams.Load(0);
  if (iniParams.z == 0)
  {
  o0 = 0;
  }
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   using 3Dmigoto v1.1.34 on Tue Aug 04 14:58:06 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   row_major float4x4 mViewProj;      // Offset:    0 Size:    64
//   float4 HudTexCoordParams;          // Offset:   64 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 2
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, cb0[0].xyzw, r0.xyzw
dp4 r1.y, cb0[1].xyzw, r0.xyzw
dp4 r1.z, cb0[2].xyzw, r0.xyzw
dp4 r1.w, cb0[3].xyzw, r0.xyzw
mov o0.xyzw, r1.xyzw
mad r0.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r1.wwww
mov o2.zw, r1.zzzw
mul o2.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.xy, v1.xyxx, cb0[4].xyxx
mul o1.zw, r0.xxxy, cb0[4].zzzw
mov o1.xy, r0.xyxx
ret 
// Approximately 14 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
