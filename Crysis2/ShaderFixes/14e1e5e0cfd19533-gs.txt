// Smoke Halo
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   using 3Dmigoto v1.1.34 on Mon Aug 03 17:38:58 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 vfViewPos;                  // Offset:    0 Size:    16
//   float4 vfParams;                   // Offset:   16 Size:    16 [unused]
//   float3 slPhaseFunctionConstants;   // Offset:   32 Size:    12 [unused]
//   float3 vfFogColor;                 // Offset:   48 Size:    12 [unused]
//   float3 slHazeColPartialRayleighInScatter;// Offset:   64 Size:    12 [unused]
//   float3 vfColGradBase;              // Offset:   80 Size:    12 [unused]
//   float3 slSunDirection;             // Offset:   96 Size:    12 [unused]
//   float4 PS_NearFarClipDist;         // Offset:  112 Size:    16 [unused]
//   float4 vfRampParams;               // Offset:  128 Size:    16 [unused]
//   float3 vfColGradDelta;             // Offset:  144 Size:    12 [unused]
//   float4 miscCamFront;               // Offset:  160 Size:    16 [unused]
//   float4 CameraUpVector;             // Offset:  176 Size:    16
//   float3 slHazeColPartialMieInScatter;// Offset:  192 Size:    12 [unused]
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   float4 TexTileSize;                // Offset:    0 Size:    16
//
// }
//
// cbuffer PER_FRAME
// {
//
//   row_major float4x4 g_VS_ViewProjMatr;// Offset:    0 Size:    64
//   float4 g_VS_WorldViewPos;          // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// PER_FRAME                         cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyz 
// TEXCOORD                 0   xyzw        1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyz         3     NONE   float       
// COLOR                    1   xyzw        4     NONE   float   xyz 
// PSIZE                    0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0.294000, 0, 0, 0},
                              { 0.706000, 0, 0, 0},
                              { 0, 0.294000, 0, 0},
                              { 1.000000, 0.294000, 0, 0},
                              { 0, 0.706000, 0, 0},
                              { 1.000000, 0.706000, 0, 0},
                              { 0.294000, 1.000000, 0, 0},
                              { 0.706000, 1.000000, 0, 0} }
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_input_siv v[1][0].xyz, position
dcl_input v[1][2].xyzw
dcl_input v[1][4].z
dcl_input v[1][5].xyzw
//dcl_temps 8
dcl_temps 9

dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_maxout 8

dcl_resource_texture2d (float,float,float,float) t125
ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, |v[0][5].y|, |v[0][5].x|
lt r0.x, l(0.000000), r0.x
itof r0.x, -r0.x
add r0.yzw, cb0[0].zzxy, -v[0][0].zzxy
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mul r1.xyz, r0.wyzw, cb0[11].zxyz
mad r1.xyz, cb0[11].yzxy, r0.yzwy, -r1.xyzx
mul r2.xyz, r0.yzwy, r1.yzxy
mad r0.yzw, r0.wwyz, r1.zzxy, -r2.xxyz
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
mov r2.w, l(1.000000)
mov r1.w, v[0][4].z
mov r3.x, l(0)
loop 
  ige r3.y, r3.x, l(8)
  breakc_nz r3.y
  mad r4.xyzw, icb[r3.x + 0].xxyy, l(2.000000, 2.000000, -2.000000, -2.000000), l(-1.000000, -1.000000, 1.000000, 1.000000)
  mul r4.xyzw, r4.xyzw, v[0][5].xyzw
  mul r3.yzw, r0.yyzw, r4.yyyy
  mad r3.yzw, r1.xxyz, r4.xxxx, r3.yyzw
  mul r5.xyz, r0.yzwy, r4.wwww
  mad r5.xyz, r1.xyzx, r4.zzzz, r5.xyzx
  add r3.yzw, r3.yyzw, r5.xxyz
  add r3.yzw, r3.yyzw, v[0][0].xxyz
  movc r2.xyz, r0.xxxx, r3.yzwy, v[0][0].xyzx
  dp4 r5.x, cb3[0].xyzw, r2.xyzw
  dp4 r5.y, cb3[1].xyzw, r2.xyzw
  dp4 r3.y, cb3[2].xyzw, r2.xyzw
  dp4 r3.z, cb3[3].xyzw, r2.xyzw
  mul r3.w, r4.z, r4.y
  mad r3.w, r4.x, r4.w, -r3.w
  sqrt r3.w, |r3.w|
  div r3.w, l(3.000000), r3.w
  mad r4.xy, r5.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r3.zzzz
  
  // Halo fix
  add r8.w, r3.z, -r8.y
  mad r4.x, r8.w, r8.x, r4.x
  
  mul r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mov r4.zw, icb[r3.x + 0].xxxy
  mul r4.w, r4.w, cb1[0].y
  mad r5.z, r1.w, cb1[0].z, cb1[0].w
  round_ni r5.w, r5.z
  mul r6.x, r5.w, cb1[0].x
  frc r6.y, r6.x
  mad r4.z, r4.z, cb1[0].x, r6.y
  round_ni r6.x, r6.x
  mad r4.w, r6.x, cb1[0].y, r4.w
  mad r5.w, r5.w, cb1[0].x, cb1[0].x
  frc r6.z, r5.w
  add r6.y, -r6.y, r6.z
  add r6.y, r4.z, r6.y
  round_ni r5.w, r5.w
  add r5.w, -r6.x, r5.w
  mad r5.w, r5.w, cb1[0].y, r4.w
  frc r6.x, r5.z
  add r7.xyz, -r2.xyzx, cb0[0].xyzx
  add r2.xyz, r2.xyzx, -v[0][0].xyzx
  dp3 r6.z, r7.xyzx, r2.xyzx
  dp3 r6.w, r7.xyzx, r7.xyzx
  div r6.z, r6.z, r6.w
  mad r2.xyz, -r7.xyzx, r6.zzzz, r2.xyzx
  movc r2.xyz, r0.xxxx, r2.xyzx, r7.xyzx
  dp3 r6.z, r2.xyzx, r2.xyzx
  rsq r6.z, r6.z
  mul r2.xyz, r2.xyzx, r6.zzzz
  mov o0.xy, r5.xyxx
  mov o0.z, r3.y
  mov o0.w, r3.z
  mov o1.x, r4.z
  mov o1.y, r4.w
  mov o1.z, r5.z
  mov o1.w, l(0)
  mov o2.x, r6.y
  mov o2.y, r5.w
  mov o2.z, r6.x
  mov o2.w, r3.w
  mov o3.xy, r4.xyxx
  mov o3.z, r3.y
  mov o3.w, r3.z
  mov o4.xyz, r2.xyzx
  mov o4.w, l(0)
  mov o5.xyzw, v[0][2].zyxw
  emit_stream m0
  iadd r3.x, r3.x, l(1)
endloop 
cut_stream m0
ret 
// Approximately 86 instruction slots used
