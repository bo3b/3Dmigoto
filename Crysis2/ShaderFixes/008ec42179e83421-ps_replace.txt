//Lights PS 1
// VertexShader 4540b1bedde98d4b
//  <CalledPixelShaders>008ec42179e83421 20d30a07bda63c22 4f09536bad5b0665 55f2ccf78f5d99fc cbe2092d9fe68150 ee1f1cf83845e967 </CalledPixelShaders>
cbuffer PER_BATCH : register(b0)
{
  float4 g_LightPos : packoffset(c0);
  float4 g_LightDiffuse : packoffset(c1);
  row_major float4x4 g_mLightProj : packoffset(c2);
  float4 g_GeneralParams : packoffset(c6);
  float4 vWBasisX : packoffset(c7);
  float4 vWBasisY : packoffset(c8);
  float4 vWBasisZ : packoffset(c9);
  row_major float4x4 g_mLightShadowProj : packoffset(c10);
  float4 irreg_kernel_2d[8] : packoffset(c14);
  float4 SSDOParams : packoffset(c22);
}
SamplerState _tex0_s : register(s0);
SamplerState _tex1_s : register(s1);
SamplerState _tex2_s : register(s2);
SamplerState _tex7_s : register(s7);
SamplerState _tex8_s : register(s8);
SamplerComparisonState SAMPLER_STATE_depthMapSampler_s : register(s3);
Texture2D<float4> _tex0 : register(t0);
Texture2D<float4> _tex1 : register(t1);
Texture2D<float4> _tex2 : register(t2);
Texture2D<float4> _tex3_d3d10 : register(t3);
Texture2D<float4> _tex7 : register(t7);
Texture2D<float4> _tex8 : register(t8);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  
    row_major matrix vp : TEXCOORD2,
  row_major matrix ivp : TEXCOORD6)
  
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = float2(1000,0.001953125) * g_GeneralParams.xx;
  r0.z = _tex0.Sample(_tex0_s, v1.xy).x;
  
  float4 stereo = StereoParams.Load(0);
  float4 tmp = mul(vp, v2 * r0.z);
  tmp.x -= stereo.x * (tmp.w - stereo.y);
  v2 = mul(ivp, tmp) / r0.z;
  
  r1.xyz = v2.xyz * r0.zzz;
  r2.xyz = -r0.zzz * v2.xyz + g_LightPos.xyz;
  r1.w = 1;
  r3.x = dot(g_mLightShadowProj._m00_m01_m02_m03, r1.xyzw);
  r3.y = dot(g_mLightShadowProj._m10_m11_m12_m13, r1.xyzw);
  r0.z = dot(g_mLightShadowProj._m30_m31_m32_m33, r1.xyzw);
  r3.xyzw = r3.xyxy / r0.zzzz;
  r0.xz = r3.zw * r0.xx;
  r0.xz = _tex7.Sample(_tex7_s, r0.xz).xy;
  r0.xyz = r0.zxx * r0.yyy;
  r0.w = -r0.x;
  r4.xyzw = irreg_kernel_2d[0].yyzz * r0.xzzw;
  r4.xyzw = r0.zwxz * irreg_kernel_2d[0].xxww + r4.xyzw;
  r4.xyzw = r4.xyzw + r3.zwzw;
  r2.w = dot(g_mLightShadowProj._m20_m21_m22_m23, r1.xyzw);
  r2.w = -0.00300000003 + r2.w;
  r5.x = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r4.xy, r2.w).x;
  r5.y = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r4.zw, r2.w).x;
  r4.xyzw = irreg_kernel_2d[1].yyzz * r0.xzzw;
  r4.xyzw = r0.zwxz * irreg_kernel_2d[1].xxww + r4.xyzw;
  r4.xyzw = r4.xyzw + r3.zwzw;
  r5.z = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r4.xy, r2.w).x;
  r5.w = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r4.zw, r2.w).x;
  r4.x = dot(r5.xyzw, float4(0.125,0.125,0.125,0.125));
  r5.xyzw = irreg_kernel_2d[2].yyzz * r0.xzzw;
  r5.xyzw = r0.zwxz * irreg_kernel_2d[2].xxww + r5.xyzw;
  r5.xyzw = r5.xyzw + r3.zwzw;
  r6.x = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r5.xy, r2.w).x;
  r6.y = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r5.zw, r2.w).x;
  r5.xyzw = irreg_kernel_2d[3].yyzz * r0.xyzw;
  r0.xyzw = r0.zwxz * irreg_kernel_2d[3].xxww + r5.xyzw;
  r0.xyzw = r3.xyzw + r0.xyzw;
  r6.z = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r0.xy, r2.w).x;
  r6.w = _tex3_d3d10.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r0.zw, r2.w).x;
  r0.x = dot(r6.xyzw, float4(0.125,0.125,0.125,0.125));
  r0.x = r4.x + r0.x;
  r0.y = dot(r2.xyz, r2.xyz);
  r0.y = rsqrt(r0.y);
  r0.yzw = r2.xyz * r0.yyy;
  r2.xyz = g_LightPos.www * r2.xyz;
  r2.x = dot(r2.xyz, r2.xyz);
  r2.x = 1 + -r2.x;
  r2.x = max(0, r2.x);
  r3.xyzw = _tex1.Sample(_tex1_s, v1.xy).xyzw;
  r2.yzw = r3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r3.xy = r3.ww * float2(40.5845261,255) + float2(0.318309993,9.99999997e-007);
  r3.z = dot(r2.yzw, r2.yzw);
  r3.z = rsqrt(r3.z);
  r2.yzw = r3.zzz * r2.yzw;
  r3.z = saturate(dot(r0.yzw, r2.yzw));
  r0.x = r3.z * r0.x;
  r4.x = dot(g_mLightProj._m00_m01_m02_m03, r1.xyzw);
  r4.y = dot(g_mLightProj._m10_m11_m12_m13, r1.xyzw);
  r1.w = dot(g_mLightProj._m30_m31_m32_m33, r1.xyzw);
  r4.xy = r4.xy / r1.ww;
  r4.xyz = _tex2.SampleLevel(_tex2_s, r4.xy, 0).xyz;
  r4.xyz = r4.xyz * r0.xxx;
  r4.xyz = g_LightDiffuse.xyz * r4.xyz;
  r4.xyz = r4.xyz * r2.xxx;
  r5.xyzw = _tex8.Sample(_tex8_s, v1.xy).xyzw;
  r5.xyz = r5.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r0.x = saturate(dot(r0.yzw, r5.xyz));
  r0.x = r3.z + -r0.x;
  r0.x = max(0, r0.x);
  r0.x = sqrt(r0.x);
  r0.x = r0.x * r5.w;
  r0.x = saturate(SSDOParams.x * r0.x);
  r0.x = 1 + -r0.x;
  r4.xyz = r4.xyz * r0.xxx;
  o0.xyz = r4.xyz;
  r4.xyz = g_LightDiffuse.www * r4.xyz;
  o0.w = 0;
  r0.x = dot(-r1.xyz, -r1.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = -r1.xyz * r0.xxx + r0.yzw;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.x = saturate(dot(r2.yzw, r0.xyz));
  r0.x = log2(r0.x);
  r0.x = r3.y * r0.x;
  r0.x = exp2(r0.x);
  r0.x = r3.x * r0.x;
  o1.xyz = r4.xyz * r0.xxx;
  o1.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   using 3Dmigoto v1.1.34 on Mon Aug 03 17:50:15 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 g_LightPos;                 // Offset:    0 Size:    16
//   float4 g_LightDiffuse;             // Offset:   16 Size:    16
//   row_major float4x4 g_mLightProj;   // Offset:   32 Size:    64
//   float4 g_GeneralParams;            // Offset:   96 Size:    16
//   float4 vWBasisX;                   // Offset:  112 Size:    16 [unused]
//   float4 vWBasisY;                   // Offset:  128 Size:    16 [unused]
//   float4 vWBasisZ;                   // Offset:  144 Size:    16 [unused]
//   row_major float4x4 g_mLightShadowProj;// Offset:  160 Size:    64
//   float4 irreg_kernel_2d[8];         // Offset:  224 Size:   128
//   float4 SSDOParams;                 // Offset:  352 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// _tex0                             sampler      NA          NA    0        1
// _tex1                             sampler      NA          NA    1        1
// _tex2                             sampler      NA          NA    2        1
// SAMPLER_STATE_depthMapSampler   sampler_c      NA          NA    3        1
// _tex7                             sampler      NA          NA    7        1
// _tex8                             sampler      NA          NA    8        1
// _tex0                             texture  float4          2d    0        1
// _tex1                             texture  float4          2d    1        1
// _tex2                             texture  float4          2d    2        1
// _tex3_d3d10                       texture  float4          2d    3        1
// _tex7                             texture  float4          2d    7        1
// _tex8                             texture  float4          2d    8        1
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 7
mul r0.xy, cb0[6].xxxx, l(1000.000000, 0.001953, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0
mul r1.xyz, r0.zzzz, v2.xyzx
mad r2.xyz, -r0.zzzz, v2.xyzx, cb0[0].xyzx
mov r1.w, l(1.000000)
dp4 r3.x, cb0[10].xyzw, r1.xyzw
dp4 r3.y, cb0[11].xyzw, r1.xyzw
dp4 r0.z, cb0[13].xyzw, r1.xyzw
div r3.xyzw, r3.xyxy, r0.zzzz
mul r0.xz, r0.xxxx, r3.zzwz
sample_indexable(texture2d)(float,float,float,float) r0.xz, r0.xzxx, t7.xzyw, s7
mul r0.xyz, r0.yyyy, r0.zxxz
mov r0.w, -r0.x
mul r4.xyzw, r0.xzzw, cb0[14].yyzz
mad r4.xyzw, r0.zwxz, cb0[14].xxww, r4.xyzw
add r4.xyzw, r3.zwzw, r4.xyzw
dp4 r2.w, cb0[12].xyzw, r1.xyzw
add r2.w, r2.w, l(-0.003000)
sample_c_indexable(texture2d)(float,float,float,float) r5.x, r4.xyxx, t3.xxxx, s3, r2.w
sample_c_indexable(texture2d)(float,float,float,float) r5.y, r4.zwzz, t3.xxxx, s3, r2.w
mul r4.xyzw, r0.xzzw, cb0[15].yyzz
mad r4.xyzw, r0.zwxz, cb0[15].xxww, r4.xyzw
add r4.xyzw, r3.zwzw, r4.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r5.z, r4.xyxx, t3.xxxx, s3, r2.w
sample_c_indexable(texture2d)(float,float,float,float) r5.w, r4.zwzz, t3.xxxx, s3, r2.w
dp4 r4.x, r5.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
mul r5.xyzw, r0.xzzw, cb0[16].yyzz
mad r5.xyzw, r0.zwxz, cb0[16].xxww, r5.xyzw
add r5.xyzw, r3.zwzw, r5.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r6.x, r5.xyxx, t3.xxxx, s3, r2.w
sample_c_indexable(texture2d)(float,float,float,float) r6.y, r5.zwzz, t3.xxxx, s3, r2.w
mul r5.xyzw, r0.xyzw, cb0[17].yyzz
mad r0.xyzw, r0.zwxz, cb0[17].xxww, r5.xyzw
add r0.xyzw, r0.xyzw, r3.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r6.z, r0.xyxx, t3.xxxx, s3, r2.w
sample_c_indexable(texture2d)(float,float,float,float) r6.w, r0.zwzz, t3.xxxx, s3, r2.w
dp4 r0.x, r6.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
add r0.x, r0.x, r4.x
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r2.xxyz
mul r2.xyz, r2.xyzx, cb0[0].wwww
dp3 r2.x, r2.xyzx, r2.xyzx
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t1.xyzw, s1
mad r2.yzw, r3.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
mad r3.xy, r3.wwww, l(40.584526, 255.000000, 0.000000, 0.000000), l(0.318310, 0.000001, 0.000000, 0.000000)
dp3 r3.z, r2.yzwy, r2.yzwy
rsq r3.z, r3.z
mul r2.yzw, r2.yyzw, r3.zzzz
dp3_sat r3.z, r0.yzwy, r2.yzwy
mul r0.x, r0.x, r3.z
dp4 r4.x, cb0[2].xyzw, r1.xyzw
dp4 r4.y, cb0[3].xyzw, r1.xyzw
dp4 r1.w, cb0[5].xyzw, r1.xyzw
div r4.xy, r4.xyxx, r1.wwww
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t2.xyzw, s2, l(0.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mul r4.xyz, r4.xyzx, cb0[1].xyzx
mul r4.xyz, r2.xxxx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t8.xyzw, s8
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3_sat r0.x, r0.yzwy, r5.xyzx
add r0.x, -r0.x, r3.z
max r0.x, r0.x, l(0.000000)
sqrt r0.x, r0.x
mul r0.x, r5.w, r0.x
mul_sat r0.x, r0.x, cb0[22].x
add r0.x, -r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mov o0.xyz, r4.xyzx
mul r4.xyz, r4.xyzx, cb0[1].wwww
mov o0.w, l(0)
dp3 r0.x, -r1.xyzx, -r1.xyzx
rsq r0.x, r0.x
mad r0.xyz, -r1.xyzx, r0.xxxx, r0.yzwy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.x, r2.yzwy, r0.xyzx
log r0.x, r0.x
mul r0.x, r0.x, r3.y
exp r0.x, r0.x
mul r0.x, r0.x, r3.x
mul o1.xyz, r0.xxxx, r4.xyzx
mov o1.w, l(0)
ret 
// Approximately 88 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
