//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   using 3Dmigoto v1.1.34 on Mon Aug 10 18:00:26 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_FRAME
// {
//
//   row_major float4x4 g_VS_ViewProjMatr;// Offset:    0 Size:    64
//   float4 g_VS_WorldViewPos;          // Offset:   96 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// WaterNormalsSampler               sampler      NA          NA    0        1
// WaterDynRipplesSampler            sampler      NA          NA    1        1
// WaterDisplMapSampler              sampler      NA          NA    2        1
// WaterDisplMapSampler              texture  float4          2d    0        1
// WaterNormalsSampler               texture  float4          2d    1        1
// WaterDynRipplesSampler            texture  float4          2d    2        1
// PER_FRAME                         cbuffer      NA          NA    3        1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float       
// SV_TessFactor            1   x           1  TRIEDGE   float       
// SV_TessFactor            2   x           2  TRIEDGE   float       
// SV_InsideTessFactor      0   x           3   TRIINT   float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float       
// TEXCOORD                 8   xyzw        8     NONE   float       
// TEXCOORD                 9   xyzw        9     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// TEXCOORD                 9   xyzw       10     NONE   float   xyzw
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyzw
dcl_input vicp[3][2].xyzw
dcl_input vicp[3][3].xyzw
dcl_input vicp[3][4].xyzw
dcl_input vicp[3][5].xyzw
dcl_input vicp[3][6].w
dcl_input vicp[3][9].xw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_temps 9
dcl_resource_texture2d (float,float,float,float) t125
mul r0.xy, l(0.200000, 0.200000, 0.000000, 0.000000), cb3[6].xyxx
frc r0.xy, r0.xyxx
mad r0.xy, -r0.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), cb3[6].xyxx
mul r1.xyzw, vDomain.yyyy, vicp[1][3].xyzw
mad r1.xyzw, vDomain.xxxx, vicp[0][3].xyzw, r1.xyzw
mad r1.xyzw, vDomain.zzzz, vicp[2][3].xyzw, r1.xyzw
dp3 r0.z, -r1.xyzx, -r1.xyzx
sqrt r0.z, r0.z
mul r0.z, r0.z, l(0.500000)
min r0.z, r0.z, l(1.000000)
mul r0.z, r0.z, r0.z
add r2.xyz, -r1.xyzx, cb3[6].xyzx
mul r3.xy, r2.xyxx, vicp[0][9].wwww
mul r3.zw, r3.xxxy, l(0.000000, 0.000000, 0.012500, 0.012500)
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t0.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t1.xyzw, s0, l(0.000000)
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r3.zw, r3.xxxy, l(0.000000, 0.000000, 0.025000, 0.025000)
sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r3.zwzz, t0.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r3.zwzz, t1.xyzw, s0, l(0.000000)
mad r5.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, r6.xyzx, l(1.500000, 1.500000, 1.000000, 0.000000), r4.xyzx
mul r4.xyz, r0.zzzz, r4.xyzx
mul r6.xyz, r4.xyzx, vicp[0][9].xxxx
mad r2.xyz, r6.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000), r2.xyzx
add r0.xy, r0.xyxx, -r2.xyxx
mad r0.xy, r0.xyxx, l(0.025000, 0.025000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r0.xyxx, t2.xywz, s1, l(0.000000)
mov o8.xy, r0.xyxx
add r2.z, -r0.w, r2.z
mov r2.w, l(1.000000)
dp4 r0.x, cb3[2].xyzw, r2.xyzw
lt r0.y, l(0.200000), |r1.z|
and r0.y, r0.y, l(0x3f800000)
mul r0.y, r0.y, r0.x
dp4 r0.w, r1.xyzw, r1.xyzw
mov o4.xyzw, r1.xyzw
sqrt r0.w, r0.w
lt r0.w, r0.w, l(2.000000)
movc o0.z, r0.w, r0.y, r0.x
dp4 r0.x, cb3[0].xyzw, r2.xyzw
dp4 r0.y, cb3[1].xyzw, r2.xyzw
dp4 r0.w, cb3[3].xyzw, r2.xyzw
mov o7.xyz, r2.xyzx
mov o0.xyw, r0.xyxw
ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw
add r8.w, r0.w, -r8.y
mad r0.x, r8.w, r8.x, r0.x
mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r0.wwww
mul o2.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.xyzw, vDomain.yyyy, vicp[1][0].xyzw
mad r1.xyzw, vDomain.xxxx, vicp[0][0].xyzw, r1.xyzw
mad o1.xyzw, vDomain.zzzz, vicp[2][0].xyzw, r1.xyzw
mov_sat r0.x, r0.w
mov o2.w, r0.w
sqrt r0.x, r0.x
mad o2.z, -r0.x, l(0.150000), l(1.000000)
mul r1.xyzw, vDomain.yyyy, vicp[1][2].xyzw
mad r1.xyzw, vDomain.xxxx, vicp[0][2].xyzw, r1.xyzw
mad o3.xyzw, vDomain.zzzz, vicp[2][2].xyzw, r1.xyzw
mul r1.xyzw, vDomain.yyyy, vicp[1][4].xyzw
mad r1.xyzw, vDomain.xxxx, vicp[0][4].xyzw, r1.xyzw
mad o5.xyzw, vDomain.zzzz, vicp[2][4].xyzw, r1.xyzw
mul r1.xyzw, vDomain.yyyy, vicp[1][5].xyzw
mad r1.xyzw, vDomain.xxxx, vicp[0][5].xyzw, r1.xyzw
mad o6.xyzw, vDomain.zzzz, vicp[2][5].xyzw, r1.xyzw
mad r0.xy, r3.xyxx, l(0.012500, 0.012500, 0.000000, 0.000000), l(0.015625, 0.000000, 0.000000, 0.000000)
mad r1.xy, r3.xyxx, l(0.025000, 0.025000, 0.000000, 0.000000), l(0.015625, 0.000000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t0.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t0.xyzw, s2, l(0.000000)
mad r0.xy, r1.xyxx, l(1.500000, 1.500000, 0.000000, 0.000000), r0.xyxx
mad r0.xy, r0.xyxx, r0.zzzz, -r4.xyxx
add r0.x, r0.y, r0.x
mul r0.y, vDomain.y, vicp[1][6].w
mad r0.y, vDomain.x, vicp[0][6].w, r0.y
mad r0.y, vDomain.z, vicp[2][6].w, r0.y
mul_sat r0.xz, r0.xxyx, l(-0.035000, 0.000000, 1.500000, 0.000000)
add_sat r0.y, r0.y, r0.y
mad o7.w, r0.z, -r0.x, r0.x
mov o8.zw, l(0,0,1.000000,1.000000)
add r0.xzw, -r5.xxyz, l(0.000000, 0.000000, 0.000000, 1.000000)
mad o9.xyz, r0.yyyy, r0.xzwx, r5.xyzx
mov o9.w, l(0)
mov o10.xyzw, l(0,0,0,0)
ret 
// Approximately 83 instruction slots used
