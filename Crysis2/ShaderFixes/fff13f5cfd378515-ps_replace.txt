//Sun glow related to DOF VS
cbuffer PER_BATCH : register(b0)
{
  float4 PS_ScreenSize : packoffset(c0);
}
SamplerState _tex0_s : register(s0);
SamplerState _tex1_s : register(s1);
Texture2D<float4> _tex0 : register(t0);
Texture2D<float4> _tex1 : register(t1);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = PS_ScreenSize.zw * float2(0,1) + v1.xy;
  r0.x = _tex0.Sample(_tex0_s, r0.xy).x;
  r0.yz = PS_ScreenSize.zw * float2(1,0.649999976) + v1.xy;
  r0.y = _tex0.Sample(_tex0_s, r0.yz).x;
  r0.x = r0.x + r0.y;
  r0.yz = PS_ScreenSize.zw * float2(-1,0.649999976) + v1.xy;
  r0.y = _tex0.Sample(_tex0_s, r0.yz).x;
  r0.x = r0.x + r0.y;
  r0.y = 0.333000004 * r0.x;
  o0.w = -r0.x * 0.333000004 + 1;
  r0.xzw = _tex1.Sample(_tex1_s, v1.xy).xyz;
  r0.x = dot(r0.xzw, float3(0.330000013,0.330000013,0.330000013));
  r0.x = r0.x * r0.y;
  o0.xyz = float3(4,4,4) * r0.xxx;
  
  float4 stereo = StereoParams.Load(0);
  
  //o0 = 0;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   using 3Dmigoto v1.1.34 on Mon Aug 10 18:17:57 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 PS_ScreenSize;              // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// _tex0                             sampler      NA          NA    0        1
// _tex1                             sampler      NA          NA    1        1
// _tex0                             texture  float4          2d    0        1
// _tex1                             texture  float4          2d    1        1
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 1
mad r0.xy, cb0[0].zwzz, l(0.000000, 1.000000, 0.000000, 0.000000), v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
mad r0.yz, cb0[0].zzwz, l(0.000000, 1.000000, 0.650000, 0.000000), v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t0.yxzw, s0
add r0.x, r0.y, r0.x
mad r0.yz, cb0[0].zzwz, l(0.000000, -1.000000, 0.650000, 0.000000), v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t0.yxzw, s0
add r0.x, r0.y, r0.x
mul r0.y, r0.x, l(0.333000)
mad o0.w, -r0.x, l(0.333000), l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xzw, v1.xyxx, t1.xwyz, s1
dp3 r0.x, r0.xzwx, l(0.330000, 0.330000, 0.330000, 0.000000)
mul r0.x, r0.y, r0.x
mul o0.xyz, r0.xxxx, l(4.000000, 4.000000, 4.000000, 0.000000)
ret 
// Approximately 15 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
