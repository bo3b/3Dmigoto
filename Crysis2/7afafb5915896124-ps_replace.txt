
cbuffer PER_MATERIAL : register(b4)
{
  float4 MatSpecColor : packoffset(c1);
  float3 __0FresnelScale__1FresnelPower__2FresnelBias__3 : packoffset(c4);
  float4 __0SpecMapChannelR__1SpecMapChannelG__2SpecMapChannelB__3GlossMapChannelB : packoffset(c7);
}
SamplerState bumpMapSampler_s : register(s1);
SamplerState normalsSampler2D_s : register(s2);
Texture2D<float4> normalsSampler2D : register(t0);
Texture2D<float4> bumpMapSampler : register(t1);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  linear centroid float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float3 v4 : TEXCOORD3,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.xyzw = v1.xxxx;
  r0.xyz = v4.yzx * v3.zxy;
  r0.xyz = v3.yzx * v4.zxy + -r0.xyz;
  r0.xyz = v3.www * r0.xyz;
  r1.xy = bumpMapSampler.Sample(bumpMapSampler_s, v2.xy).xy;
  r1.xy = r1.yx * float2(2,2) + float2(-1,-1);
  r2.xyz = v4.xyz * r1.yyy;
  r2.xyz = r1.xxx * v3.xyz + r2.xyz;
  r0.w = dot(r1.xy, -r1.xy);
  r0.w = saturate(1 + r0.w);
  r0.w = sqrt(r0.w);
  r0.xyz = r0.www * r0.xyz + r2.xyz;
  r0.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r0.xyz = r0.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.w = max(abs(r0.x), abs(r0.y));
  r0.w = max(abs(r0.z), r0.w);
  r1.xy = abs(r0.zy) < r0.ww;
  r2.xyz = r0.xyz / r0.www;
  r0.zw = r1.yy ? abs(r0.zy) : abs(r0.zx);
  r0.xy = r1.xx ? r0.zw : abs(r0.yx);
  r0.z = r0.y < r0.x;
  r0.xy = r0.zz ? r0.xy : r0.yx;
  r0.z = r0.y / r0.x;
  r0.x = normalsSampler2D.SampleLevel(normalsSampler2D_s, r0.xz, 0).w;
  r0.xyz = r2.xyz * r0.xxx;
  o1.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o1.w = MatSpecColor.w * 0.00392156886;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   using 3Dmigoto v1.1.34 on Wed Aug 12 23:24:12 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_MATERIAL
// {
//
//   float4 MatSpecColor;               // Offset:   16 Size:    16
//   float3 __0FresnelScale__1FresnelPower__2FresnelBias__3;// Offset:   64 Size:    12 [unused]
//   float4 __0SpecMapChannelR__1SpecMapChannelG__2SpecMapChannelB__3GlossMapChannelB;// Offset:  112 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// bumpMapSampler                    sampler      NA          NA    1        1
// normalsSampler2D                  sampler      NA          NA    2        1
// normalsSampler2D                  texture  float4          2d    0        1
// bumpMapSampler                    texture  float4          2d    1        1
// PER_MATERIAL                      cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   x   
// TEXCOORD                 1   xyzw        2     NONE   float   xy  
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear centroid v1.x
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 3
mov o0.xyzw, v1.xxxx
mul r0.xyz, v3.zxyz, v4.yzxy
mad r0.xyz, v3.yzxy, v4.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v3.wwww
sample_indexable(texture2d)(float,float,float,float) r1.xy, v2.xyxx, t1.xyzw, s1
mad r1.xy, r1.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyz, r1.yyyy, v4.xyzx
mad r2.xyz, r1.xxxx, v3.xyzx, r2.xyzx
dp2 r0.w, r1.xyxx, -r1.xyxx
add_sat r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
max r0.w, |r0.y|, |r0.x|
max r0.w, r0.w, |r0.z|
lt r1.xy, |r0.zyzz|, r0.wwww
div r2.xyz, r0.xyzx, r0.wwww
movc r0.zw, r1.yyyy, |r0.zzzy|, |r0.zzzx|
movc r0.xy, r1.xxxx, r0.zwzz, |r0.yxyy|
lt r0.z, r0.y, r0.x
movc r0.xy, r0.zzzz, r0.xyxx, r0.yxyy
div r0.z, r0.y, r0.x
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xzxx, t0.wxyz, s2, l(0.000000)
mul r0.xyz, r0.xxxx, r2.xyzx
mad o1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o1.w, l(0.003922), cb4[1].w
ret 
// Approximately 31 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
