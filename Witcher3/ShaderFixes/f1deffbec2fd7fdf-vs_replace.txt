// Skybox - sun + blue sky

cbuffer cb2 : register(b2)
{
  float4 cb2[6];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float3 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  float3 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  out float2 o0 : TEXCOORD0,
  out float3 o1 : TEXCOORD1,
  out float4 o2 : SV_Position0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.xy = v1.xy;
  r0.xyz = v0.xyz * cb2[4].xyz + cb2[5].xyz;
  r0.w = 1.000000000e+000;
  o1.x = dot(r0.xyzw, cb2[0].xyzw);
  o1.y = dot(r0.xyzw, cb2[1].xyzw);
  o1.z = dot(r0.xyzw, cb2[2].xyzw);
  r1.xyzw = cb2[1].xyzw * cb1[0].yyyy;
  r1.xyzw = cb2[0].xyzw * cb1[0].xxxx + r1.xyzw;
  r1.xyzw = cb2[2].xyzw * cb1[0].zzzz + r1.xyzw;
  r1.xyzw = cb1[0].wwww * float4(0.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000) + r1.xyzw;
  o2.x = dot(r0.xyzw, r1.xyzw);
  r1.xyzw = cb2[1].xyzw * cb1[1].yyyy;
  r1.xyzw = cb2[0].xyzw * cb1[1].xxxx + r1.xyzw;
  r1.xyzw = cb2[2].xyzw * cb1[1].zzzz + r1.xyzw;
  r1.xyzw = cb1[1].wwww * float4(0.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000) + r1.xyzw;
  o2.y = dot(r0.xyzw, r1.xyzw);
  r1.xyzw = cb2[1].xyzw * cb1[2].yyyy;
  r1.xyzw = cb2[0].xyzw * cb1[2].xxxx + r1.xyzw;
  r1.xyzw = cb2[2].xyzw * cb1[2].zzzz + r1.xyzw;
  r1.xyzw = cb1[2].wwww * float4(0.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000) + r1.xyzw;
  o2.z = dot(r0.xyzw, r1.xyzw);
  r1.xyzw = cb2[1].xyzw * cb1[3].yyyy;
  r1.xyzw = cb2[0].xyzw * cb1[3].xxxx + r1.xyzw;
  r1.xyzw = cb2[2].xyzw * cb1[3].zzzz + r1.xyzw;
  r1.xyzw = cb1[3].wwww * float4(0.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000) + r1.xyzw;
  o2.w = dot(r0.xyzw, r1.xyzw);

float4 stereo = StereoParams.Load(0);
o2.x += stereo.x * stereo.y;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TANGENT                  0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_output o0.xy
dcl_output o1.xyz
dcl_output_siv o2.xyzw, position
dcl_temps 2
mov o0.xy, v1.xyxx
mad r0.xyz, v0.xyzx, cb2[4].xyzx, cb2[5].xyzx
mov r0.w, l(1.000000)
dp4 o1.x, r0.xyzw, cb2[0].xyzw
dp4 o1.y, r0.xyzw, cb2[1].xyzw
dp4 o1.z, r0.xyzw, cb2[2].xyzw
mul r1.xyzw, cb1[0].yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, cb1[0].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[0].zzzz, r1.xyzw
mad r1.xyzw, cb1[0].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.x, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[1].yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, cb1[1].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[1].zzzz, r1.xyzw
mad r1.xyzw, cb1[1].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.y, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[2].yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, cb1[2].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[2].zzzz, r1.xyzw
mad r1.xyzw, cb1[2].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.z, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[3].yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, cb1[3].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[3].zzzz, r1.xyzw
mad r1.xyzw, cb1[3].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.w, r0.xyzw, r1.xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//   using 3Dmigoto v1.1.12 on Sat May 30 15:50:44 2015
//
//
// Buffer Definitions: 
//
// cbuffer cb2
// {
//
//   float4 cb2[6];                     // Offset:    0 Size:    96
//
// }
//
// cbuffer cb1
// {
//
//   float4 cb1[4];                     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cb1                               cbuffer      NA          NA    1        1
// cb2                               cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TANGENT                  0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_output o0.xy
dcl_output o1.xyz
dcl_output_siv o2.xyzw, position
dcl_temps 2
mov o0.xy, v1.xyxx
mad r0.xyz, v0.xyzx, cb2[4].xyzx, cb2[5].xyzx
mov r0.w, l(1.000000)
dp4 o1.x, r0.xyzw, cb2[0].xyzw
dp4 o1.y, r0.xyzw, cb2[1].xyzw
dp4 o1.z, r0.xyzw, cb2[2].xyzw
mul r1.xyzw, cb2[1].xyzw, cb1[0].yyyy
mad r1.xyzw, cb2[0].xyzw, cb1[0].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[0].zzzz, r1.xyzw
mad r1.xyzw, cb1[0].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.x, r0.xyzw, r1.xyzw
mul r1.xyzw, cb2[1].xyzw, cb1[1].yyyy
mad r1.xyzw, cb2[0].xyzw, cb1[1].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[1].zzzz, r1.xyzw
mad r1.xyzw, cb1[1].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.y, r0.xyzw, r1.xyzw
mul r1.xyzw, cb2[1].xyzw, cb1[2].yyyy
mad r1.xyzw, cb2[0].xyzw, cb1[2].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[2].zzzz, r1.xyzw
mad r1.xyzw, cb1[2].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.z, r0.xyzw, r1.xyzw
mul r1.xyzw, cb2[1].xyzw, cb1[3].yyyy
mad r1.xyzw, cb2[0].xyzw, cb1[3].xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, cb1[3].zzzz, r1.xyzw
mad r1.xyzw, cb1[3].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o2.w, r0.xyzw, r1.xyzw
ret 
// Approximately 27 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
