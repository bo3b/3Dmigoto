//HUD MINIMAP5 - STUPID MAP CLIP
cbuffer Constants : register(b0)
{
  float4 vfuniforms[48] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);
#include <hud.hlsl>

void main(
  float4 v0 : SV_Position0,
  uint v1 : COLOR1,
  out float4 o0 : SV_Position0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (uint)v1.x << 1;
  r0.x = r0.x;
  r0.xy = float2(1.000000e-001,1.100000e+000) + r0.xx;
  r0.xy = (uint2)r0.xy;
  o0.x = dot(v0.xyzw, vfuniforms[r0.x].xyzw);
  o0.y = dot(v0.xyzw, vfuniforms[r0.y].xyzw);
  o0.zw = float2(0.000000e+000,1.000000e+000);
  
float4 stereo = StereoParams.Load(0);
float4 params = IniParams.Load(0);
float depth = world_z_from_depth_buffer(0,0);
float4 resolution = StereoParams.Load(int3(2, 0, 0));
float aspectRatio = resolution.x / resolution.y;
float cutLeft = -0.45;
float cutRight = 0.3;
float cutUp = 0.0;
float cutDown = -0.0;

if (params.z >= 1.0)
{
	o0.x -= stereo.x* ( o0.z - stereo.y);
}
else
{
	o0.x += stereo.x* params.x;
}
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[48];             // Offset:    0 Size:   768
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// COLOR                    1   x           1     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[48], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.x
dcl_output_siv o0.xyzw, position
dcl_temps 1
ishl r0.x, v1.x, l(1)
utof r0.x, r0.x
add r0.xy, r0.xxxx, l(0.100000, 1.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
dp4 o0.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o0.y, v0.xyzw, cb0[r0.y + 0].xyzw
mov o0.zw, l(0,0,0,1.000000)
ret 
// Approximately 8 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 
    