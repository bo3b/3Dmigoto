//Raindrops on screen: DISABLE
cbuffer cb1 : register(b1)
{
  float4 cb1[15];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float3 v2 : TEXCOORD0,
  float2 v3 : TEXCOORD1,
  float2 v4 : TEXCOORD2,
  out float3 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float3 o2 : TEXCOORD2,
  out float3 o3 : TEXCOORD3,
  out float4 o4 : SV_Position0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.x = v2.z;
  o0.yz = v4.xy;
  o1.xyzw = v1.xyzw;
  o2.xyz = float3(0.000000e+000,0.000000e+000,1.000000e+000);
  o3.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r0.x = v3.y * v2.y;
  r0.x = v2.x * v3.x + -r0.x;
  r0.y = dot(v2.yx, v3.xy);
  r0.yz = r0.yy * float2(1.000000e+000,0.000000e+000) + v0.xy;
  o4.xy = r0.xx * float2(0.000000e+000,1.000000e+000) + r0.yz;
  o4.z = 1.000000000e+000 + -cb1[14].x;
  o4.w = 1.000000000e+000;

// Disable if x1 is set
float4 params = IniParams.Load(int2(1,0));
if (params.x == 1)
	o0=0;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_input v0.xy
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_output o0.xyz
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.x, v2.z
mov o0.yz, v4.xxyx
mov o1.xyzw, v1.xyzw
mov o2.xyz, l(0,0,1.000000,0)
mov o3.xyz, l(0,0,0,0)
mul r0.x, v2.y, v3.y
mad r0.x, v2.x, v3.x, -r0.x
dp2 r0.y, v2.yxyy, v3.xyxx
mad r0.yz, r0.yyyy, l(0.000000, 1.000000, 0.000000, 0.000000), v0.xxyx
mad o4.xy, r0.xxxx, l(0.000000, 1.000000, 0.000000, 0.000000), r0.yzyy
add o4.z, -cb1[14].x, l(1.000000)
mov o4.w, l(1.000000)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//   using 3Dmigoto v1.1.12 on Sun May 31 00:45:42 2015
//
//
// Buffer Definitions: 
//
// cbuffer cb1
// {
//
//   float4 cb1[15];                    // Offset:    0 Size:   240
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cb1                               cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_input v0.xy
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_output o0.xyz
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.x, v2.z
mov o0.yz, v4.xxyx
mov o1.xyzw, v1.xyzw
mov o2.xyz, l(0,0,1.000000,0)
mov o3.xyz, l(0,0,0,0)
mul r0.x, v2.y, v3.y
mad r0.x, v3.x, v2.x, -r0.x
dp2 r0.y, v2.yxyy, v3.xyxx
mad r0.yz, r0.yyyy, l(0.000000, 1.000000, 0.000000, 0.000000), v0.xxyx
mad o4.xy, r0.xxxx, l(0.000000, 1.000000, 0.000000, 0.000000), r0.yzyy
add o4.z, -cb1[14].x, l(1.000000)
mov o4.w, l(1.000000)
ret 
// Approximately 13 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
