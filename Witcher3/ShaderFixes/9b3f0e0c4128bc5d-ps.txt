//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.50 on Wed Dec 14 20:35:46 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[13], immediateIndexed
dcl_constantbuffer cb12[210], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t23
dcl_resource_texture2d (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
// TODO: Reduce this for more efficient GPU usage (4096 is max possible)
// But for now it's easier to use a high register count so that the register
// numbers are easy to match up between the copied code and the original
dcl_temps 2012
ftou r0.xy, v0.xyxx
utof r1.xy, r0.xyxx
add r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
itof r2.xy, r0.xyxx
mul r2.xy, r2.xyxx, cb3[8].zwzz
ftou r2.xy, r2.xyxx
mov r2.zw, l(0,0,0,0)

// normal map:
ld_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyzw, t0.zwxy
lt r2.y, l(0.000000), r2.y
ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw
ld_indexable(texture1d)(float,float,float,float) r18.xyzw, l(0, 0, 0, 0), t120.xyzw
if_nz r2.y
  mul r2.yz, r1.zzwz, cb3[5].zzwz
  lt r2.x, l(0.500000), r2.x
  mov r0.z, l(0)

// downsampled depth buffer (water surface not present):
  ld_indexable(texture2d)(float,float,float,float) r0.z, r0.xyzz, t2.yzxw
  mul r1.xy, r1.xyxx, cb3[8].zwzz
  ftou r3.xy, r1.xyxx
  mov r3.zw, l(0,0,0,0)

// depth buffer (water surface already present on buffer):
  ld_indexable(texture2d)(float,float,float,float) r1.x, r3.xyzw, t4.xyzw
  eq r1.y, cb12[22].y, l(1.000000)
  max r2.w, r0.z, r1.x
  min r0.z, r0.z, r1.x
  movc r0.z, r1.y, r2.w, r0.z
  div r1.xy, r1.zwzz, cb3[0].xyxx
  mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
// Duplicating below code for two separate adjustments, copy inputs with adjusted r1:
  mov r100.xyzw, r0.xyzw
  mov r200.xyzw, r0.xyzw
  mov r101.xyzw, r1.xyzw
  mov r201.xyzw, r1.xyzw
  mov r102.xyzw, r2.xyzw
  mov r202.xyzw, r2.xyzw
  mov r103.xyzw, r3.xyzw
  mov r203.xyzw, r3.xyzw
// Infinity correction for sun/moon reflection:
// Also using this for environment map reflections from t23, though it is not
// quite right as it does not go deep enough.
  add r101.x, r1.x, -r17.x
// Adjustment for direct reflections (from back buffer, not t23 or t5!) - use
// part of the worldToView matrix that should only affected by vertical camera
// rotation as a fudge factor to counter the changing depth with rotation
// For simplicities sake I'm doing this adjustment on the original rxx regs,
// and using r20xx registers for unadjusted coord (needed to avoid smearing
// reflection). This is not going to be quite right, but this shader was tricky
// and this seems to be a reasonable compromise.
  mul r19.x, cb12[3].z, l(-0.500000)
  mad r1.x, -r17.x, r19.x, r1.x
  mul r3.xyzw, -r1.yyyy, cb12[207].xyzw
  mad r3.xyzw, cb12[206].xyzw, r1.xxxx, r3.xyzw
  mad r3.xyzw, cb12[208].xyzw, r0.zzzz, r3.xyzw
  add r3.xyzw, r3.xyzw, cb12[209].xyzw
  div r3.xyz, r3.xyzx, r3.wwww
  ge r0.z, cb12[0].z, r3.z
  movc r0.z, r0.z, l(1), l(-1)
  mov r4.xy, l(0,0,0,0)
  itof r4.z, r0.z
  mul r5.xyz, r3.yyyy, cb12[2].xyzx
  mad r5.xyz, cb12[1].xyzx, r3.xxxx, r5.xyzx
  mad r5.xyz, cb12[3].xyzx, r3.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb12[4].xyzx
  add r6.xyz, r3.xyzx, -cb12[0].xyzx
  dp3 r0.z, r6.xyzx, r6.xyzx
  rsq r0.z, r0.z
  mul r6.xyz, r0.zzzz, r6.xyzx
  dp2 r0.z, r6.zzzz, r4.zzzz
  mad r4.xyz, r4.xyzx, -r0.zzzz, r6.xyzx
  mul r6.xyz, r4.yyyy, cb12[2].xyzx
  mad r6.xyz, cb12[1].xyzx, r4.xxxx, r6.xyzx
  mad r6.xyz, cb12[3].xyzx, r4.zzzz, r6.xyzx
  mad r6.xyw, r6.xyxz, l(100.000000, 100.000000, 0.000000, 100.000000), r5.xyxz
  mul r7.xyz, r5.yyyy, cb12[14].xywx
  mad r5.xyw, cb12[13].xyxw, r5.xxxx, r7.xyxz
  mad r5.xyw, cb12[15].xyxw, r5.zzzz, r5.xyxw
  add r5.xyw, r5.xyxw, cb12[16].xyxw
  div r1.xy, r5.xyxx, r5.wwww
  mul r7.xyzw, cb3[0].xyxy, l(0.500000, -0.500000, 0.500000, 0.500000)
  div r7.xyzw, r7.xyzw, cb3[0].zwzw
  mad r8.xy, r1.xyxx, r7.xyxx, r7.zwzz
  mul r5.xyw, r6.yyyy, cb12[14].xyxw
  mad r5.xyw, cb12[13].xyxw, r6.xxxx, r5.xyxw
  mad r5.xyw, cb12[15].xyxw, r6.wwww, r5.xyxw
  add r5.xyw, r5.xyxw, cb12[16].xyxw
  div r5.xy, r5.xyxx, r5.wwww
  mad r9.yz, r5.xxyx, r7.xxyx, r7.zzwz
  mul r0.z, r5.z, cb12[21].x
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  div r1.y, cb12[21].y, cb12[21].x
  add r8.z, r0.z, -r1.y
  mul r0.z, r6.w, cb12[21].x
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r9.w, -r1.y, r0.z
  add r5.yzw, -r8.xxyz, r9.yyzw
  add r0.z, -|r1.x|, l(1.000000)
  div r6.xyw, l(2.000000, 0.500000, 0.000000, 0.500000), cb3[0].xzxw
  add r0.z, r0.z, -r6.x
  mul r1.x, r0.z, l(4.000000)
  mov_sat r1.x, r1.x
  mul r5.x, r1.x, r5.y
  ge r1.x, |r5.x|, |r5.z|
  mul r9.xy, |r5.xzxx|, cb3[0].zwzz
  movc r1.x, r1.x, r9.x, r9.y
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  mul r9.xyz, r1.xxxx, r5.xzwx
  lt r1.y, l(0.000000), r6.z
  max r2.w, cb3[0].y, cb3[0].x
  round_z r2.w, r2.w
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  div r6.xz, cb3[0].xxyx, cb3[0].zzwz
  add r11.xy, -r8.xyxx, r6.xzxx
  movc r10.xy, r10.xyxx, r11.xyxx, r8.xyxx
  div r10.xy, r10.xyxx, |r9.xyxx|
  min r2.w, r2.w, r10.x
  round_z r2.w, r2.w
  min r2.w, r10.y, r2.w
  round_z r2.w, r2.w
  add r4.w, -r8.z, l(1.000000)
  and r4.w, r4.w, r10.z
  div r4.w, r4.w, |r9.z|
  add r4.w, r4.w, l(3.000000)
  min r2.w, r2.w, r4.w
  ftoi r2.w, r2.w
  and r1.y, r1.y, r2.w
  add r2.w, |r9.z|, |r9.z|
  add r10.xy, cb3[0].xyxx, l(-1.500000, -1.500000, 0.000000, 0.000000)
  div r10.zw, r10.xxxy, cb3[0].zzzw
  mov r11.xy, r8.xyxx
  mov r4.w, r8.z
  mov r5.y, l(0)
  mov r6.x, l(1)

// Duplicated #1 for sun & reflection probe infinity adjustment:
  mul r103.xyzw, -r101.yyyy, cb12[207].xyzw
  mad r103.xyzw, cb12[206].xyzw, r101.xxxx, r103.xyzw
  mad r103.xyzw, cb12[208].xyzw, r100.zzzz, r103.xyzw
  add r103.xyzw, r103.xyzw, cb12[209].xyzw
  div r103.xyz, r103.xyzx, r103.wwww
  ge r100.z, cb12[0].z, r103.z
  movc r100.z, r100.z, l(1), l(-1)
  mov r104.xy, l(0,0,0,0)
  itof r104.z, r100.z
  mul r105.xyz, r103.yyyy, cb12[2].xyzx
  mad r105.xyz, cb12[1].xyzx, r103.xxxx, r105.xyzx
  mad r105.xyz, cb12[3].xyzx, r103.zzzz, r105.xyzx
  add r105.xyz, r105.xyzx, cb12[4].xyzx
  add r106.xyz, r103.xyzx, -cb12[0].xyzx
  dp3 r100.z, r106.xyzx, r106.xyzx
  rsq r100.z, r100.z
  mul r106.xyz, r100.zzzz, r106.xyzx
  dp2 r100.z, r106.zzzz, r104.zzzz
  mad r104.xyz, r104.xyzx, -r100.zzzz, r106.xyzx

// Duplicated #2 for back buffer reflection adjustment:
  mul r203.xyzw, -r201.yyyy, cb12[207].xyzw
  mad r203.xyzw, cb12[206].xyzw, r201.xxxx, r203.xyzw
  mad r203.xyzw, cb12[208].xyzw, r200.zzzz, r203.xyzw
  add r203.xyzw, r203.xyzw, cb12[209].xyzw
  div r203.xyz, r203.xyzx, r203.wwww
  ge r200.z, cb12[0].z, r203.z
  movc r200.z, r200.z, l(1), l(-1)
  mov r204.xy, l(0,0,0,0)
  itof r204.z, r200.z
  mul r205.xyz, r203.yyyy, cb12[2].xyzx
  mad r205.xyz, cb12[1].xyzx, r203.xxxx, r205.xyzx
  mad r205.xyz, cb12[3].xyzx, r203.zzzz, r205.xyzx
  add r205.xyz, r205.xyzx, cb12[4].xyzx
  add r206.xyz, r203.xyzx, -cb12[0].xyzx
  dp3 r200.z, r206.xyzx, r206.xyzx
  rsq r200.z, r200.z
  mul r206.xyz, r200.zzzz, r206.xyzx
  dp2 r200.z, r206.zzzz, r204.zzzz
  mad r204.xyz, r204.xyzx, -r200.zzzz, r206.xyzx
  mul r206.xyz, r204.yyyy, cb12[2].xyzx
  mad r206.xyz, cb12[1].xyzx, r204.xxxx, r206.xyzx
  mad r206.xyz, cb12[3].xyzx, r204.zzzz, r206.xyzx
  mad r206.xyw, r206.xyxz, l(100.000000, 100.000000, 0.000000, 100.000000), r205.xyxz
  mul r207.xyz, r205.yyyy, cb12[14].xywx
  mad r205.xyw, cb12[13].xyxw, r205.xxxx, r207.xyxz
  mad r205.xyw, cb12[15].xyxw, r205.zzzz, r205.xyxw
  add r205.xyw, r205.xyxw, cb12[16].xyxw
  div r201.xy, r205.xyxx, r205.wwww
  mul r207.xyzw, cb3[0].xyxy, l(0.500000, -0.500000, 0.500000, 0.500000)
  div r207.xyzw, r207.xyzw, cb3[0].zwzw
  mad r208.xy, r201.xyxx, r207.xyxx, r207.zwzz
  mul r205.xyw, r206.yyyy, cb12[14].xyxw
  mad r205.xyw, cb12[13].xyxw, r206.xxxx, r205.xyxw
  mad r205.xyw, cb12[15].xyxw, r206.wwww, r205.xyxw
  add r205.xyw, r205.xyxw, cb12[16].xyxw
  div r205.xy, r205.xyxx, r205.wwww
  mad r209.yz, r205.xxyx, r207.xxyx, r207.zzwz
  mul r200.z, r205.z, cb12[21].x
  div r200.z, l(1.000000, 1.000000, 1.000000, 1.000000), r200.z
  div r201.y, cb12[21].y, cb12[21].x
  add r208.z, r200.z, -r201.y
  mul r200.z, r206.w, cb12[21].x
  div r200.z, l(1.000000, 1.000000, 1.000000, 1.000000), r200.z
  add r209.w, -r201.y, r200.z
  add r205.yzw, -r208.xxyz, r209.yyzw
  add r200.z, -|r201.x|, l(1.000000)
  div r206.xyw, l(2.000000, 0.500000, 0.000000, 0.500000), cb3[0].xzxw
  add r200.z, r200.z, -r206.x
  mul r201.x, r200.z, l(4.000000)
  mov_sat r201.x, r201.x
  mul r205.x, r201.x, r205.y
  ge r201.x, |r205.x|, |r205.z|
  mul r209.xy, |r205.xzxx|, cb3[0].zwzz
  movc r201.x, r201.x, r209.x, r209.y
  div r201.x, l(1.000000, 1.000000, 1.000000, 1.000000), r201.x
  mul r209.xyz, r201.xxxx, r205.xzwx
  lt r201.y, l(0.000000), r206.z
  max r202.w, cb3[0].y, cb3[0].x
  round_z r202.w, r202.w
  lt r2010.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r209.xyzx
  div r206.xz, cb3[0].xxyx, cb3[0].zzwz
  add r2011.xy, -r208.xyxx, r206.xzxx
  movc r2010.xy, r2010.xyxx, r2011.xyxx, r208.xyxx
  div r2010.xy, r2010.xyxx, |r209.xyxx|
  min r202.w, r202.w, r2010.x
  round_z r202.w, r202.w
  min r202.w, r2010.y, r202.w
  round_z r202.w, r202.w
  add r204.w, -r208.z, l(1.000000)
  and r204.w, r204.w, r2010.z
  div r204.w, r204.w, |r209.z|
  add r204.w, r204.w, l(3.000000)
  min r202.w, r202.w, r204.w
  ftoi r202.w, r202.w
  and r201.y, r201.y, r202.w
  add r202.w, |r209.z|, |r209.z|
  add r2010.xy, cb3[0].xyxx, l(-1.500000, -1.500000, 0.000000, 0.000000)
  div r2010.zw, r2010.xxxy, cb3[0].zzzw
  mov r2011.xy, r208.xyxx
  mov r204.w, r208.z
  mov r205.y, l(0)
  mov r206.x, l(1)
  loop 
    ige r8.w, r6.x, r1.y
    breakc_nz r8.w
    itof r8.w, r6.x
    mad r12.xyz, r8.wwww, r9.xyzx, r8.xyzx
    mad r13.xyz, r5.xzwx, r1.xxxx, r12.xyzx
    mad r14.xyz, r5.xzwx, r1.xxxx, r13.xyzx
    mad r15.xyw, r5.xzxw, r1.xxxx, r14.xyxz
    min r11.zw, r10.zzzw, r12.xxxy

// Downsampled depth buffer (water surface not present):
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r11.zwzz, t2.yzwx, s0, l(0.000000)
    mad r16.x, r8.w, cb12[22].x, cb12[22].y
    min r11.zw, r10.zzzw, r13.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r11.zwzz, t2.yzwx, s0, l(0.000000)
    mad r16.y, r8.w, cb12[22].x, cb12[22].y
    min r11.zw, r10.zzzw, r14.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r11.zwzz, t2.yzwx, s0, l(0.000000)
    mad r16.z, r8.w, cb12[22].x, cb12[22].y
    min r11.zw, r10.zzzw, r15.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r11.zwzz, t2.yzwx, s0, l(0.000000)
    mad r16.w, r8.w, cb12[22].x, cb12[22].y
    mov r15.x, r12.z
    mov r15.y, r13.z
    mov r15.z, r14.z
    add r12.xyzw, -r16.xyzw, r15.xyzw
    mad r12.xyzw, -|r9.zzzz|, l(2.000000, 2.000000, 2.000000, 2.000000), r12.xyzw
    lt r12.xyzw, |r12.xyzw|, r2.wwww
    or r11.zw, r12.zzzw, r12.xxxy
    or r8.w, r11.w, r11.z
    if_nz r8.w
      movc r8.w, r12.z, l(2), l(3)
      movc r8.w, r12.y, l(1), r8.w
      movc r8.w, r12.x, l(0), r8.w
      iadd r8.w, r6.x, r8.w
      itof r8.w, r8.w
      mad r12.xyz, r8.wwww, r9.xyzx, r8.xyzx
      mov r5.y, l(-1)
      mov r11.xy, r12.xyxx
      mov r4.w, r12.z
      break 
    endif 
    iadd r6.x, r6.x, l(4)
    mov r5.y, l(0)
  endloop 
  if_nz r5.y
    div r1.x, r11.y, r6.z
    add r1.x, r1.x, l(-0.500000)
    mad r1.x, -|r1.x|, l(2.000000), l(1.000000)
    max r1.x, r1.x, l(0.000000)
    add r1.x, r1.x, r1.x
    min r1.x, r1.x, l(1.000000)
    add r1.x, -r1.x, l(1.000000)
    mad r1.x, -r1.x, r1.x, l(1.000000)
    div r5.xy, r11.xyxx, cb3[3].yyyy
    div r5.zw, l(0.000000, 0.000000, 0.500000, 0.500000), cb3[0].xxxy
    mul r6.xz, cb3[0].zzwz, cb3[3].yyyy
    div r6.xz, r10.xxyx, r6.xxzx
    max r5.xy, r5.zwzz, r5.xyxx
    min r5.xy, r6.xzxx, r5.xyxx

// Downsampled back buffer:
//mad r5.y, r17.x, l(0.5), r5.y
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t1.xyzw, s0, l(0.000000)
    mov r1.y, l(1.000000)
  else 
    mov r11.xy, l(0,0,0,0)
    mov r4.w, l(0)
    mov r5.xyz, l(0,0,0,0)
    mov r1.xy, l(0,0,0,0)
  endif 
  if_nz r2.x

// Use infinity adjusted coordinate to fix sun/moon reflection:
//    mul r2.xw, r4.xxxy, l(-0.500000, 0.000000, 0.000000, 0.500000)
    mul r2.xw, r104.xxxy, l(-0.500000, 0.000000, 0.000000, 0.500000)
    add r5.w, |r4.z|, l(1.000000)
    div r2.xw, r2.xxxw, r5.wwww
    add r2.xw, r2.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
    mul r2.xw, r2.xxxw, cb3[4].xxxy
    add r6.xz, cb3[4].xxyx, l(-0.500000, 0.000000, -0.500000, 0.000000)
    max r2.xw, r2.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
    min r2.xw, r6.xxxz, r2.xxxw
    div r2.xw, r2.xxxw, cb3[4].zzzw

// t5 = sun/moon reflection
    sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r2.xwxx, t5.xyzw, s1, l(0.000000)
  else 
    mul r9.xyz, r3.yyyy, cb12[114].xyzx
    mad r9.xyz, cb12[113].xyzx, r3.xxxx, r9.xyzx
    mad r9.xyz, cb12[115].xyzx, r3.zzzz, r9.xyzx
    add r9.xyz, r9.xyzx, cb12[116].xyzx
    add r9.xyz, -|r9.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    and r2.x, r12.y, r12.x
    and r2.x, r12.z, r2.x
    if_nz r2.x
      mul_sat r9.xyz, r9.xyzx, cb12[112].xyzx
      mul r2.x, cb12[111].x, l(0.999990)
      mul r2.w, r9.y, r9.x
      mul r2.w, r9.z, r2.w
      mul r5.w, r2.w, r2.x
      mad r2.x, r2.x, r2.w, l(0.000010)
      mul r2.w, r5.w, cb12[117].x

// Unverified infinity adjustment, but fits pattern:

      mul r9.xyz, r104.yyyy, cb12[119].xyzx
      mad r9.xyz, cb12[118].xyzx, r104.xxxx, r9.xyzx
      mad r9.xyz, cb12[120].xyzx, r104.zzzz, r9.xyzx
      mul r12.xyz, r3.yyyy, cb12[119].xyzx
      mad r12.xyz, cb12[118].xyzx, r3.xxxx, r12.xyzx
      mad r12.xyz, cb12[120].xyzx, r3.zzzz, r12.xyzx
      add r12.xyz, r12.xyzx, cb12[121].xyzx
      div r9.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r9.xyzx
      mad r13.xyz, -r12.xyzx, r9.xyzx, r9.xyzx
      mad r9.xyz, -r12.xyzx, r9.xyzx, -r9.xyzx
      max r9.xyz, r9.xyzx, r13.xyzx
      min r5.w, r9.z, r9.y
      min r5.w, r5.w, r9.x
      mad r9.xyz, r104.xyzx, r5.wwww, r3.xyzx
      add r9.xyz, r9.xyzx, -cb12[111].yzwy
      dp3 r5.w, r9.xyzx, r9.xyzx
      rsq r5.w, r5.w
      mul r9.xyw, r5.wwww, r9.xyxz
      lt r6.x, r9.w, l(0.000000)
      and r6.z, r6.x, l(1)
      mul r12.xyzw, r9.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
      mad r8.w, -r9.z, r5.w, l(1.000000)
      max r8.w, r8.w, l(0.001000)
      div r9.xy, r12.xyxx, r8.wwww
      mad r5.w, r9.z, r5.w, l(1.000000)
      max r5.w, r5.w, l(0.001000)
      div r9.zw, r12.zzzw, r5.wwww
      add r9.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
      movc r9.xy, r6.xxxx, r9.xyxx, r9.zwzz
      mad r9.xy, r9.xyxx, l(0.666666627, 0.666666627, 0.000000, 0.000000), l(0.166666672, 0.166666672, 0.000000, 0.000000)
      itof r12.y, cb12[122].x
      itof r12.z, r6.z
      mov r12.xw, l(0,0,0,0)
      add r6.xz, r9.xxyx, r12.zzwz
      add r6.xz, r6.xxzx, r12.xxyx
      mul r6.xz, r6.xxzx, l(0.500000, 0.000000, 0.142857149, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r6.xzxx, t23.xyzw, s11, l(0.000000)
      if_nz r18.w
        mov r9.xyz, l(0,0,0,0)
      endif 
      mul r9.xyz, r2.wwww, r9.xyzx
    else 
      mov r9.xyz, l(0,0,0,0)
      mov r2.x, l(0.000010)
    endif 
    lt r2.w, r2.x, l(0.999000)
    if_nz r2.w
      mul r12.xyz, r3.yyyy, cb12[126].xyzx
      mad r12.xyz, cb12[125].xyzx, r3.xxxx, r12.xyzx
      mad r12.xyz, cb12[127].xyzx, r3.zzzz, r12.xyzx
      add r12.xyz, r12.xyzx, cb12[128].xyzx
      add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
      and r5.w, r13.y, r13.x
      and r5.w, r13.z, r5.w
      if_nz r5.w
        mul_sat r12.xyz, r12.xyzx, cb12[124].xyzx
        add r5.w, -r2.x, l(1.000000)
        mul r5.w, r5.w, cb12[123].x
        mul r6.x, r12.y, r12.x
        mul r6.x, r12.z, r6.x
        mul r6.z, r5.w, r6.x
        mad r2.x, r5.w, r6.x, r2.x
        mul r5.w, r6.z, cb12[129].x

// Use corrected coordinate around here for reflections in caves

        mul r12.xyz, r104.yyyy, cb12[131].xyzx
        mad r12.xyz, cb12[130].xyzx, r104.xxxx, r12.xyzx
        mad r12.xyz, cb12[132].xyzx, r104.zzzz, r12.xyzx
        mul r13.xyz, r3.yyyy, cb12[131].xyzx
        mad r13.xyz, cb12[130].xyzx, r3.xxxx, r13.xyzx
        mad r13.xyz, cb12[132].xyzx, r3.zzzz, r13.xyzx
        add r13.xyz, r13.xyzx, cb12[133].xyzx
        div r12.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r12.xyzx
        mad r14.xyz, -r13.xyzx, r12.xyzx, r12.xyzx
        mad r12.xyz, -r13.xyzx, r12.xyzx, -r12.xyzx
        max r12.xyz, r12.xyzx, r14.xyzx
        min r6.x, r12.z, r12.y
        min r6.x, r6.x, r12.x
        mad r12.xyz, r104.xyzx, r6.xxxx, r3.xyzx
        add r12.xyz, r12.xyzx, -cb12[123].yzwy
        dp3 r6.x, r12.xyzx, r12.xyzx
        rsq r6.x, r6.x
        mul r12.xyw, r6.xxxx, r12.xyxz
        lt r6.z, r12.w, l(0.000000)
        and r8.w, r6.z, l(1)
        mul r13.xyzw, r12.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r9.w, -r12.z, r6.x, l(1.000000)
        max r9.w, r9.w, l(0.001000)
        div r10.xy, r13.xyxx, r9.wwww
        add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r6.x, r12.z, r6.x, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r11.zw, r13.zzzw, r6.xxxx
        add r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r6.xz, r6.zzzz, r10.xxyx, r11.zzwz
        mad r6.xz, r6.xxzx, l(0.666666627, 0.000000, 0.666666627, 0.000000), l(0.166666672, 0.000000, 0.166666672, 0.000000)
        itof r12.y, cb12[134].x
        itof r12.z, r8.w
        mov r12.xw, l(0,0,0,0)
        add r6.xz, r6.xxzx, r12.zzwz
        add r6.xz, r6.xxzx, r12.xxyx
        mul r6.xz, r6.xxzx, l(0.500000, 0.000000, 0.142857149, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r6.xzxx, t23.xyzw, s11, l(0.000000)
        if_nz r18.w
          mov r12.xyz, l(0,0,0,0)
        endif 
        mad r9.xyz, r5.wwww, r12.xyzx, r9.xyzx
      endif 
    endif 
    lt r5.w, r2.x, l(0.999000)
    and r2.w, r2.w, r5.w
    if_nz r2.w
      mul r12.xyz, r3.yyyy, cb12[138].xyzx
      mad r12.xyz, cb12[137].xyzx, r3.xxxx, r12.xyzx
      mad r12.xyz, cb12[139].xyzx, r3.zzzz, r12.xyzx
      add r12.xyz, r12.xyzx, cb12[140].xyzx
      add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
      and r5.w, r13.y, r13.x
      and r5.w, r13.z, r5.w
      if_nz r5.w
        mul_sat r12.xyz, r12.xyzx, cb12[136].xyzx
        add r5.w, -r2.x, l(1.000000)
        mul r5.w, r5.w, cb12[135].x
        mul r6.x, r12.y, r12.x
        mul r6.x, r12.z, r6.x
        mul r6.z, r5.w, r6.x
        mad r2.x, r5.w, r6.x, r2.x
        mul r5.w, r6.z, cb12[141].x

// Use corrected coordinates around here for reflections of torches

        mul r12.xyz, r104.yyyy, cb12[143].xyzx
        mad r12.xyz, cb12[142].xyzx, r104.xxxx, r12.xyzx
        mad r12.xyz, cb12[144].xyzx, r104.zzzz, r12.xyzx
        mul r13.xyz, r3.yyyy, cb12[143].xyzx
        mad r13.xyz, cb12[142].xyzx, r3.xxxx, r13.xyzx
        mad r13.xyz, cb12[144].xyzx, r3.zzzz, r13.xyzx
        add r13.xyz, r13.xyzx, cb12[145].xyzx
        div r12.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r12.xyzx
        mad r14.xyz, -r13.xyzx, r12.xyzx, r12.xyzx
        mad r12.xyz, -r13.xyzx, r12.xyzx, -r12.xyzx
        max r12.xyz, r12.xyzx, r14.xyzx
        min r6.x, r12.z, r12.y
        min r6.x, r6.x, r12.x
        mad r12.xyz, r104.xyzx, r6.xxxx, r3.xyzx
        add r12.xyz, r12.xyzx, -cb12[135].yzwy
        dp3 r6.x, r12.xyzx, r12.xyzx
        rsq r6.x, r6.x
        mul r12.xyw, r6.xxxx, r12.xyxz
        lt r6.z, r12.w, l(0.000000)
        and r8.w, r6.z, l(1)
        mul r13.xyzw, r12.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r9.w, -r12.z, r6.x, l(1.000000)
        max r9.w, r9.w, l(0.001000)
        div r10.xy, r13.xyxx, r9.wwww
        add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r6.x, r12.z, r6.x, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r11.zw, r13.zzzw, r6.xxxx
        add r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r6.xz, r6.zzzz, r10.xxyx, r11.zzwz
        mad r6.xz, r6.xxzx, l(0.666666627, 0.000000, 0.666666627, 0.000000), l(0.166666672, 0.000000, 0.166666672, 0.000000)
        itof r12.y, cb12[146].x
        itof r12.z, r8.w
        mov r12.xw, l(0,0,0,0)
        add r6.xz, r6.xxzx, r12.zzwz
        add r6.xz, r6.xxzx, r12.xxyx
        mul r6.xz, r6.xxzx, l(0.500000, 0.000000, 0.142857149, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r6.xzxx, t23.xyzw, s11, l(0.000000)
        if_nz r18.w
          mov r12.xyz, l(0,0,0,0)
        endif 
        mad r9.xyz, r5.wwww, r12.xyzx, r9.xyzx
      endif 
    endif 
    lt r5.w, r2.x, l(0.999000)
    and r2.w, r2.w, r5.w
    if_nz r2.w
      mul r12.xyz, r3.yyyy, cb12[150].xyzx
      mad r12.xyz, cb12[149].xyzx, r3.xxxx, r12.xyzx
      mad r12.xyz, cb12[151].xyzx, r3.zzzz, r12.xyzx
      add r12.xyz, r12.xyzx, cb12[152].xyzx
      add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
      and r5.w, r13.y, r13.x
      and r5.w, r13.z, r5.w
      if_nz r5.w
        mul_sat r12.xyz, r12.xyzx, cb12[148].xyzx
        add r5.w, -r2.x, l(1.000000)
        mul r5.w, r5.w, cb12[147].x
        mul r6.x, r12.y, r12.x
        mul r6.x, r12.z, r6.x
        mul r6.z, r5.w, r6.x
        mad r2.x, r5.w, r6.x, r2.x
        mul r5.w, r6.z, cb12[153].x

// Unverified infinity adjustment, but fits pattern:

        mul r12.xyz, r104.yyyy, cb12[155].xyzx
        mad r12.xyz, cb12[154].xyzx, r104.xxxx, r12.xyzx
        mad r12.xyz, cb12[156].xyzx, r104.zzzz, r12.xyzx
        mul r13.xyz, r3.yyyy, cb12[155].xyzx
        mad r13.xyz, cb12[154].xyzx, r3.xxxx, r13.xyzx
        mad r13.xyz, cb12[156].xyzx, r3.zzzz, r13.xyzx
        add r13.xyz, r13.xyzx, cb12[157].xyzx
        div r12.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r12.xyzx
        mad r14.xyz, -r13.xyzx, r12.xyzx, r12.xyzx
        mad r12.xyz, -r13.xyzx, r12.xyzx, -r12.xyzx
        max r12.xyz, r12.xyzx, r14.xyzx
        min r6.x, r12.z, r12.y
        min r6.x, r6.x, r12.x
        mad r12.xyz, r104.xyzx, r6.xxxx, r3.xyzx
        add r12.xyz, r12.xyzx, -cb12[147].yzwy
        dp3 r6.x, r12.xyzx, r12.xyzx
        rsq r6.x, r6.x
        mul r12.xyw, r6.xxxx, r12.xyxz
        lt r6.z, r12.w, l(0.000000)
        and r8.w, r6.z, l(1)
        mul r13.xyzw, r12.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r9.w, -r12.z, r6.x, l(1.000000)
        max r9.w, r9.w, l(0.001000)
        div r10.xy, r13.xyxx, r9.wwww
        add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r6.x, r12.z, r6.x, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r11.zw, r13.zzzw, r6.xxxx
        add r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r6.xz, r6.zzzz, r10.xxyx, r11.zzwz
        mad r6.xz, r6.xxzx, l(0.666666627, 0.000000, 0.666666627, 0.000000), l(0.166666672, 0.000000, 0.166666672, 0.000000)
        itof r12.y, cb12[158].x
        itof r12.z, r8.w
        mov r12.xw, l(0,0,0,0)
        add r6.xz, r6.xxzx, r12.zzwz
        add r6.xz, r6.xxzx, r12.xxyx
        mul r6.xz, r6.xxzx, l(0.500000, 0.000000, 0.142857149, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r6.xzxx, t23.xyzw, s11, l(0.000000)
        if_nz r18.w
          mov r12.xyz, l(0,0,0,0)
        endif 
        mad r9.xyz, r5.wwww, r12.xyzx, r9.xyzx
      endif 
    endif 
    lt r5.w, r2.x, l(0.999000)
    and r2.w, r2.w, r5.w
    if_nz r2.w
      mul r12.xyz, r3.yyyy, cb12[162].xyzx
      mad r12.xyz, cb12[161].xyzx, r3.xxxx, r12.xyzx
      mad r12.xyz, cb12[163].xyzx, r3.zzzz, r12.xyzx
      add r12.xyz, r12.xyzx, cb12[164].xyzx
      add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
      and r5.w, r13.y, r13.x
      and r5.w, r13.z, r5.w
      if_nz r5.w
        mul_sat r12.xyz, r12.xyzx, cb12[160].xyzx
        add r5.w, -r2.x, l(1.000000)
        mul r5.w, r5.w, cb12[159].x
        mul r6.x, r12.y, r12.x
        mul r6.x, r12.z, r6.x
        mul r6.z, r5.w, r6.x
        mad r2.x, r5.w, r6.x, r2.x
        mul r5.w, r6.z, cb12[165].x
        mul r12.xyz, r104.yyyy, cb12[167].xyzx
        mad r12.xyz, cb12[166].xyzx, r104.xxxx, r12.xyzx
        mad r12.xyz, cb12[168].xyzx, r104.zzzz, r12.xyzx
        mul r13.xyz, r3.yyyy, cb12[167].xyzx
        mad r13.xyz, cb12[166].xyzx, r3.xxxx, r13.xyzx
        mad r13.xyz, cb12[168].xyzx, r3.zzzz, r13.xyzx
        add r13.xyz, r13.xyzx, cb12[169].xyzx
        div r12.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r12.xyzx
        mad r14.xyz, -r13.xyzx, r12.xyzx, r12.xyzx
        mad r12.xyz, -r13.xyzx, r12.xyzx, -r12.xyzx
        max r12.xyz, r12.xyzx, r14.xyzx
        min r6.x, r12.z, r12.y
        min r6.x, r6.x, r12.x
        mad r12.xyz, r104.xyzx, r6.xxxx, r3.xyzx
        add r12.xyz, r12.xyzx, -cb12[159].yzwy
        dp3 r6.x, r12.xyzx, r12.xyzx
        rsq r6.x, r6.x
        mul r12.xyw, r6.xxxx, r12.xyxz
        lt r6.z, r12.w, l(0.000000)
        and r8.w, r6.z, l(1)
        mul r13.xyzw, r12.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r9.w, -r12.z, r6.x, l(1.000000)
        max r9.w, r9.w, l(0.001000)
        div r10.xy, r13.xyxx, r9.wwww
        add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r6.x, r12.z, r6.x, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r11.zw, r13.zzzw, r6.xxxx
        add r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r6.xz, r6.zzzz, r10.xxyx, r11.zzwz
        mad r6.xz, r6.xxzx, l(0.666666627, 0.000000, 0.666666627, 0.000000), l(0.166666672, 0.000000, 0.166666672, 0.000000)
        itof r12.y, cb12[170].x
        itof r12.z, r8.w
        mov r12.xw, l(0,0,0,0)
        add r6.xz, r6.xxzx, r12.zzwz
        add r6.xz, r6.xxzx, r12.xxyx
        mul r6.xz, r6.xxzx, l(0.500000, 0.000000, 0.142857149, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r6.xzxx, t23.xyzw, s11, l(0.000000)
        if_nz r18.w
          mov r12.xyz, l(0,0,0,0)
        endif 
        mad r9.xyz, r5.wwww, r12.xyzx, r9.xyzx
      endif 
    endif 
    lt r5.w, r2.x, l(0.999000)
    and r2.w, r2.w, r5.w
    if_nz r2.w
      mul r12.xyz, r3.yyyy, cb12[174].xyzx
      mad r12.xyz, cb12[173].xyzx, r3.xxxx, r12.xyzx
      mad r12.xyz, cb12[175].xyzx, r3.zzzz, r12.xyzx
      add r12.xyz, r12.xyzx, cb12[176].xyzx
      add r12.xyz, -|r12.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
      and r2.w, r13.y, r13.x
      and r2.w, r13.z, r2.w
      if_nz r2.w
        mul_sat r12.xyz, r12.xyzx, cb12[172].xyzx
        add r2.w, -r2.x, l(1.000000)
        mul r2.w, r2.w, cb12[171].x
        mul r5.w, r12.y, r12.x
        mul r5.w, r12.z, r5.w
        mul r6.x, r2.w, r5.w
        mad r2.x, r2.w, r5.w, r2.x
        mul r2.w, r6.x, cb12[177].x
// Unverified infinity adjustment, but fits pattern:
        mul r12.xyz, r104.yyyy, cb12[179].xyzx
        mad r12.xyz, cb12[178].xyzx, r104.xxxx, r12.xyzx
        mad r12.xyz, cb12[180].xyzx, r104.zzzz, r12.xyzx
        mul r13.xyz, r3.yyyy, cb12[179].xyzx
        mad r13.xyz, cb12[178].xyzx, r3.xxxx, r13.xyzx
        mad r13.xyz, cb12[180].xyzx, r3.zzzz, r13.xyzx
        add r13.xyz, r13.xyzx, cb12[181].xyzx
        div r12.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r12.xyzx
        mad r14.xyz, -r13.xyzx, r12.xyzx, r12.xyzx
        mad r12.xyz, -r13.xyzx, r12.xyzx, -r12.xyzx
        max r12.xyz, r12.xyzx, r14.xyzx
        min r5.w, r12.z, r12.y
        min r5.w, r5.w, r12.x
        mad r12.xyz, r104.xyzx, r5.wwww, r3.xyzx
        add r12.xyz, r12.xyzx, -cb12[171].yzwy
        dp3 r5.w, r12.xyzx, r12.xyzx
        rsq r5.w, r5.w
        mul r12.xyw, r5.wwww, r12.xyxz
        lt r6.x, r12.w, l(0.000000)
        and r6.z, r6.x, l(1)
        mul r13.xyzw, r12.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r8.w, -r12.z, r5.w, l(1.000000)
        max r8.w, r8.w, l(0.001000)
        div r10.xy, r13.xyxx, r8.wwww
        add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r5.w, r12.z, r5.w, l(1.000000)
        max r5.w, r5.w, l(0.001000)
        div r11.zw, r13.zzzw, r5.wwww
        add r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r10.xy, r6.xxxx, r10.xyxx, r11.zwzz
        mad r10.xy, r10.xyxx, l(0.666666627, 0.666666627, 0.000000, 0.000000), l(0.166666672, 0.166666672, 0.000000, 0.000000)
        itof r12.y, cb12[182].x
        itof r12.z, r6.z
        mov r12.xw, l(0,0,0,0)
        add r6.xz, r10.xxyx, r12.zzwz
        add r6.xz, r6.xxzx, r12.xxyx
        mul r6.xz, r6.xxzx, l(0.500000, 0.000000, 0.142857149, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r6.xzxx, t23.xyzw, s11, l(0.000000)
        if_nz r18.w
          mov r12.xyz, l(0,0,0,0)
        endif 
        mad r9.xyz, r2.wwww, r12.xyzx, r9.xyzx
      endif 
    endif 
    lt r2.w, r2.x, l(0.999000)
    if_nz r2.w
      add r2.w, -r2.x, l(1.000000)
      mul r5.w, r2.w, cb12[99].x
      mad r2.x, r2.w, cb12[99].x, r2.x
      mul r2.w, r5.w, cb12[105].x
      lt r5.w, r4.z, l(0.000000)
      and r6.x, r5.w, l(1)
      mul r12.xyzw, r4.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
      add r4.x, -r4.z, l(1.000000)
      max r4.x, r4.x, l(0.001000)
      div r4.xy, r12.xyxx, r4.xxxx
      add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      add r4.z, r4.z, l(1.000000)
      max r4.z, r4.z, l(0.001000)
      div r10.xy, r12.zwzz, r4.zzzz
      add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      movc r4.xy, r5.wwww, r4.xyxx, r10.xyxx
      mad r4.xy, r4.xyxx, l(0.666666627, 0.666666627, 0.000000, 0.000000), l(0.166666672, 0.166666672, 0.000000, 0.000000)
      itof r12.y, cb12[110].x
      itof r12.z, r6.x
      mov r12.xw, l(0,0,0,0)
      add r4.xy, r4.xyxx, r12.zwzz
      add r4.xy, r4.xyxx, r12.xyxx
      mul r4.xy, r4.xyxx, l(0.500000, 0.142857149, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
      if_nz r18.w
        mov r4.xyz, l(0,0,0,0)
      endif 
      mad r9.xyz, r2.wwww, r4.xyzx, r9.xyzx
    endif 
    div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
    mul r8.xyz, r2.xxxx, r9.xyzx
  endif 
  add r4.xyz, r5.xyzx, -r8.xyzx
  mad r5.xyz, r1.xxxx, r4.xyzx, r8.xyzx
  mad r0.z, r0.z, l(4.000000), l(-1.000000)
  mul_sat r0.z, r0.z, l(2.500000)
  mov r3.w, l(1.000000)
  dp4 r1.x, cb3[10].xyzw, r3.xyzw
  dp4 r2.x, cb3[11].xyzw, r3.xyzw
  dp4 r2.w, cb3[12].xyzw, r3.xyzw
  mul r4.xyz, r2.xxxx, cb12[14].xywx
  mad r4.xyz, cb12[13].xywx, r1.xxxx, r4.xyzx
  mad r4.xyz, cb12[15].xywx, r2.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb12[16].xywx
  div r2.xw, r4.xxxy, r4.zzzz
  mad r2.xw, r2.xxxw, r7.xxxy, r7.zzzw
  eq r1.x, r1.y, l(1.000000)
  lt r1.y, l(0.000000), r0.z
  and r1.x, r1.y, r1.x
  if_nz r1.x
    mad r1.x, r4.w, cb12[22].x, cb12[22].y
    add r4.xy, -r7.zwzz, r11.xyxx
    div r4.xy, r4.xyxx, r7.xyxx
    mul r8.xyzw, r4.yyyy, cb12[207].xyzw
    mad r4.xyzw, cb12[206].xyzw, r4.xxxx, r8.xyzw
    mad r4.xyzw, cb12[208].xyzw, r1.xxxx, r4.xyzw
    add r4.xyzw, r4.xyzw, cb12[209].xyzw
    div r4.xyz, r4.xyzx, r4.wwww
    add r1.x, -r3.z, cb3[2].z
    add r1.y, r4.z, r1.x
    add r1.y, -r3.z, r1.y
    div r1.x, r1.x, r1.y
    add r4.xy, r4.xyxx, -cb3[2].xyxx
    mad r3.xy, r1.xxxx, r4.xyxx, cb3[2].xyxx
    dp4 r1.x, cb3[10].xyzw, r3.xyzw
    dp4 r1.y, cb3[11].xyzw, r3.xyzw
    dp4 r3.x, cb3[12].xyzw, r3.xyzw
    mul r3.yzw, r1.yyyy, cb12[14].xxyw
    mad r3.yzw, cb12[13].xxyw, r1.xxxx, r3.yyzw
    mad r3.xyz, cb12[15].xywx, r3.xxxx, r3.yzwy
    add r3.xyz, r3.xyzx, cb12[16].xywx
    div r1.xy, r3.xyxx, r3.zzzz
    mad r1.xy, r1.xyxx, r7.xyxx, r7.zwzz
    add r1.xy, -r2.xwxx, r1.xyxx
    mad r2.xw, r0.zzzz, r1.xxxy, r2.xxxw
  endif 
  max r1.xy, r6.ywyy, r2.xwxx
  min r1.xy, r10.zwzz, r1.xyxx
  eq r2.xw, r2.xxxw, r1.xxxy
  and r0.z, r2.w, r2.x
  not r2.x, r0.z
  div r1.xy, r1.xyxx, cb3[3].xxxx
  movc r1.xy, r0.zzzz, r1.xyxx, r2.yzyy
  mov r5.w, l(1.000000)
else 
  mov r0.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyww, t2.xyzw
  div r0.yz, r1.zzwz, cb3[0].xxyx
  mad r0.yz, r0.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mul r3.xyzw, -r0.zzzz, cb12[207].xyzw
  mad r3.xyzw, cb12[206].xyzw, r0.yyyy, r3.xyzw
  mad r0.xyzw, cb12[208].xyzw, r0.xxxx, r3.xyzw
  add r0.xyzw, r0.xyzw, cb12[209].xyzw
  div r0.xyz, r0.xyzx, r0.wwww
  mov r0.w, l(1.000000)
  dp4 r1.z, cb3[10].xyzw, r0.xyzw
  dp4 r1.w, cb3[11].xyzw, r0.xyzw
  dp4 r0.x, cb3[12].xyzw, r0.xyzw
  mul r0.yzw, r1.wwww, cb12[14].xxyw
  mad r0.yzw, cb12[13].xxyw, r1.zzzz, r0.yyzw
  mad r0.xyz, cb12[15].xywx, r0.xxxx, r0.yzwy
  add r0.xyz, r0.xyzx, cb12[16].xywx
  div r0.xy, r0.xyxx, r0.zzzz
  mul r3.xyzw, cb3[0].xyxy, l(0.500000, -0.500000, 0.500000, 0.500000)
  div r3.xyzw, r3.xyzw, cb3[0].zwzw
  mad r0.xy, r0.xyxx, r3.xyxx, r3.zwzz
  div r0.zw, l(0.000000, 0.000000, 0.500000, 0.500000), cb3[0].zzzw
  add r1.zw, cb3[0].xxxy, l(0.000000, 0.000000, -1.500000, -1.500000)
  div r1.zw, r1.zzzw, cb3[0].zzzw
  max r0.xy, r0.zwzz, r0.xyxx
  min r1.xy, r1.zwzz, r0.xyxx
  mov r5.xyzw, l(0,0,0,0)
  mov r2.x, l(0)
endif 
dp4 r0.x, l(0.333000, 0.333000, 0.333000, 0.333000), r5.xyzw
ne r0.x, r0.x, r0.x
max r3.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc o0.xyzw, r0.xxxx, l(0,0,0,0), r3.xyzw

// Disabled because it glitches like HELL in SLI, Surround, SIngle monitor etc! Didn't see it work properly at all :(
// from frame analysis, t3 = low quality reflections? Maybe from previous frame?
// We use original r1 here otherwise the reflection becomes smeared
//sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, r205.xyxx, t3.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, r1.xyxx, t3.xyzw, s1, l(0.000000)

dp4 r1.x, l(0.333000, 0.333000, 0.333000, 0.333000), r0.xyzw
ne r1.x, r1.x, r1.x
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.xyzw, r1.xxxx, l(0,0,0,0), r0.xyzw
movc o1.xyzw, r2.xxxx, r5.xyzw, r0.xyzw
ret 
// Approximately 0 instruction slots used
