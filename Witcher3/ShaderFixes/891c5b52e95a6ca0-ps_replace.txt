// Raindrop splashes (unverified fix)

Texture2D<float4> t24 : register(t24);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2DArray<float4> t4 : register(t4);

Texture2D<float4> t0 : register(t0);

SamplerState s4_s : register(s4);

SamplerState s0_s : register(s0);

cbuffer cb13 : register(b13)
{
  float4 cb13[35];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[214];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[3];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[12];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8;
  uint4 bitmask, uiDest;
  float4 fDest;
  r0.xy = (uint2)v0.xy;
  r1.x = saturate(cb3[2].x);
  r1.y = t6.SampleLevel(s0_s, v1.xy, 0.000000000e+000).x;
  r1.y = 1.000000000e+000 + -r1.y;
  r1.x = r1.x * r1.y;
  r1.yzw = t0.Sample(s0_s, v1.xy).xyz;
  r0.zw = float2(0.000000e+000,0.000000e+000);
  r0.z = t7.Load(r0.xyz).x;
  r2.xyzw = cb12[211].xyzw * v0.yyyy;
  r2.xyzw = cb12[210].xyzw * v0.xxxx + r2.xyzw;
  r2.xyzw = cb12[212].xyzw * r0.zzzz + r2.xyzw;
  r2.xyzw = cb12[213].xyzw + r2.xyzw;
  r2.xyz = r2.zxy / r2.www;

// Losti reported bad raindrops in caves:
// https://forums.geforce.com/default/topic/546943/3d-vision/the-witcher-3-wild-hunt/post/4569114/#4569114
// Seems to be due to r2 being in order YZX instead of XYZ - I've switched them
// below, which seems to have resolved the issue in the cave, but haven't
// verified this is correct out in the open world

float4 r20, r21;
r20.xyz = r2.yzx;  // Order is weird, guessed from above assignment
r20.w = 1.0;

r21.xyzw = cb12[1].xyzw * r20.xxxx;
r21.xyzw = cb12[2].xyzw * r20.yyyy + r21.xyzw;
r21.xyzw = cb12[3].xyzw * r20.zzzz + r21.xyzw;
r21.xyzw = cb12[4].xyzw + r21.xyzw;

r21.xyzw /= r21.wwww;

float4 stereo = StereoParams.Load(0);
r21.x -= stereo.x*(r21.z - stereo.y)/cb12[13].x; 

r20.xyzw = cb12[9].xyzw * r21.xxxx;
r20.xyzw = cb12[10].xyzw * r21.yyyy + r20.xyzw;
r20.xyzw = cb12[11].xyzw * r21.zzzz + r20.xyzw;
r20.xyzw = cb12[12].xyzw * r21.wwww + r20.xyzw;
r2.xyz = r20.zxy / r20.www;  // Restore weird order

  r3.xyz = -cb1[8].xyz + r2.yzx;
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = sqrt(r0.w);
  r3.x = r1.x < 9.999999776e-003;
  r0.w = 4.000000000e+001 < r0.w;
  r0.w = (int)r0.w | (int)r3.x;
  r3.xy = (int2)r0.xy ^ int2(2,2);
  r3.zw = max((int2)-r0.xy, (int2)r0.xy);
  r3.zw = (uint2)r3.zw >> int2(1,1);
  r4.xy = -(int2)r3.zw;
  r3.xy = r3.xy ? -0.000000 : 0;
  r3.xy = r3.xy ? r4.xy : r3.zw;
  r3.zw = float2(0.000000e+000,0.000000e+000);
  r3.xy = t24.Load(r3.xyz).xy;
  r4.xyz = -cb12[0].xyz + r2.yzx;
  r3.z = dot(r4.xyz, r4.xyz);
  r3.z = sqrt(r3.z);
  r5.x = cb12[1].z;
  r5.y = cb12[2].z;
  r5.z = cb12[3].z;
  r3.w = dot(r5.xyz, r4.xyz);
  r4.x = 1.000000e+000 / cb12[21].y;
  r4.x = r4.x * r3.z;
  r3.w = r4.x / r3.w;
  r3.w = r3.z + -r3.w;
  r3.w = saturate(cb13[33].w * r3.w);
  r3.w = cb13[33].z * r3.w;
  r3.w = max(1.000000047e-003, r3.w);
  r3.z = r3.z / cb13[34].z;
  r4.x = r3.x < r3.y;
  if (r4.x != 0) {
    r4.xy = r3.zy < r3.xz;
    r4.z = cb13[34].z * r3.x + -cb13[34].x;
    r4.z = saturate(-r4.z * cb13[34].y + 1.000000000e+000);
    r4.w = r3.z + -r3.x;
    r4.w = cb13[34].z * r4.w;
    r4.w = saturate(r4.w / r3.w);
    r5.y = r4.z * r4.w;
    r4.x = (int)r4.x | (int)r4.y;
    r5.x = 1.000000000e+000;
    r4.xy = r4.xx ? float2(0.000000e+000,1.000000e+000) : r5.xy;
  } else {
    r4.zw = r3.yz < r3.xy;
    r5.x = r3.x < r3.z;
    r3.x = cb13[34].z * r3.x + -cb13[34].x;
    r6.y = saturate(-r3.x * cb13[34].y + 1.000000000e+000);
    r3.x = r3.z + -r3.y;
    r3.x = cb13[34].z * r3.x;
    r3.x = saturate(r3.x / r3.w);
    r6.w = 1.000000000e+000 + -r3.x;
    r6.xz = float2(1.000000e+000,1.000000e+000);
    r3.xy = r5.xx ? r6.xy : r6.zw;
    r3.xy = r4.ww ? float2(1.000000e+000,1.000000e+000) : r3.xy;
    r4.xy = r4.zz ? r3.xy : float2(0.000000e+000,1.000000e+000);
  }
  r3.x = -r4.y * r4.x + 1.000000000e+000;
  r4.xyzw = r0.xyxy;
  r5.xyzw = float4(4.500000e+000,0.000000e+000,-4.500000e+000,0.000000e+000) + r4.zwzw;
  r6.xyzw = (uint4)r5.zwxy;
  r7.xy = r6.zw;
  r7.zw = float2(0.000000e+000,0.000000e+000);
  r0.x = t7.Load(r7.xyz).x;
  r7.xyzw = cb12[211].xyzw * r5.yyyy;
  r7.xyzw = cb12[210].xyzw * r5.xxxx + r7.xyzw;
  r7.xyzw = cb12[212].xyzw * r0.xxxx + r7.xyzw;
  r7.xyzw = cb12[213].xyzw + r7.xyzw;
  r7.xyz = r7.zxy / r7.www;
  r6.zw = float2(0.000000e+000,0.000000e+000);
  r0.x = t7.Load(r6.xyz).x;
  r6.xyzw = cb12[211].xyzw * r5.wwww;
  r5.xyzw = cb12[210].xyzw * r5.zzzz + r6.xyzw;
  r5.xyzw = cb12[212].xyzw * r0.xxxx + r5.xyzw;
  r5.xyzw = cb12[213].xyzw + r5.xyzw;
  r5.xyz = r5.zxy / r5.www;
  r4.xyzw = float4(0.000000e+000,4.500000e+000,0.000000e+000,-4.500000e+000) + r4.xyzw;
  r6.xyzw = (uint4)r4.zwxy;
  r8.xy = r6.zw;
  r8.zw = float2(0.000000e+000,0.000000e+000);
  r0.x = t7.Load(r8.xyz).x;
  r8.xyzw = cb12[211].xyzw * r4.yyyy;
  r8.xyzw = cb12[210].xyzw * r4.xxxx + r8.xyzw;
  r8.xyzw = cb12[212].xyzw * r0.xxxx + r8.xyzw;
  r8.xyzw = cb12[213].xyzw + r8.xyzw;
  r8.xyz = r8.yzx / r8.www;
  r6.zw = float2(0.000000e+000,0.000000e+000);
  r0.x = t7.Load(r6.xyz).x;
  r6.xyzw = cb12[211].xyzw * r4.wwww;
  r4.xyzw = cb12[210].xyzw * r4.zzzz + r6.xyzw;
  r4.xyzw = cb12[212].xyzw * r0.xxxx + r4.xyzw;
  r4.xyzw = cb12[213].xyzw + r4.xyzw;
  r4.xyz = r4.yzx / r4.www;
  r5.xyz = r7.xyz + -r5.xyz;
  r4.xyz = r4.xyz + -r8.xyz;
  r6.xyz = r5.xyz * r4.xyz;
  r4.xyz = r5.zxy * r4.yzx + -r6.xyz;
  r0.x = dot(r4.xyz, r4.xyz);
  r0.x = rsqrt(r0.x);
  r4.xyz = r4.xyz * r0.xxx;
  r0.xy = float2(7.000000e-001,-6.000000e-001) < r4.zz;
  r4.zw = float2(5.000000e+000,5.000000e+000) * abs(r4.yx);
  r4.zw = trunc(r4.zw);
  r4.zw = float2(2.000000e-001,2.000000e-001) * r4.zw;
  r4.zw = rsqrt(r4.zw);
  r4.zw = float2(1.000000e+000,1.000000e+000) / r4.zw;
  r3.w = r4.w * r2.z;
  r4.x = r4.x * r4.y;
  r4.x = 0.000000000e+000 < r4.x;
  r3.w = r4.x ? -r3.w : r3.w;
  r3.y = r2.y * r4.z + r3.w;
  r3.z = r2.x;
  r4.xyz = r0.yyy ? r3.xyz : 0;
  r2.x = r3.x;
  r2.w = 0.000000000e+000;
  r4.w = 1.000000000e+000;
  r3.xyzw = r0.xxxx ? r2.xyzw : r4.xyzw;
  r4.xy = r3.yz + r3.yz;
  r5.xz = float2(0.000000e+000,0.000000e+000);
  r5.y = cb0[0].x;
  r4.xy = float2(1.200000e+000,7.800000e-002) * r5.xy + r4.xy;
  r6.xy = r2.yz + r2.yz;
  r6.z = 1.000000000e+000;
  r6.xyzw = t4.Sample(s4_s, r6.xyz).xyzw;
  r2.yzw = float3(5.000000e-002,5.000000e-002,1.000000e-001) * r4.xyx;
  r7.xyw = cb0[0].xxx * float3(3.250000e-003,3.250000e-002,5.200000e-002) + r2.wyz;
  r7.z = 0.000000000e+000;
  r0.y = t4.Sample(s4_s, r7.ywz).z;
  r2.y = 1.299999934e-002 * cb0[0].x;
  r7.y = r4.y * 1.999999955e-002 + r2.y;
  r2.y = t4.Sample(s4_s, r7.xyz).z;
  r2.zw = float2(2.000000e-002,2.000000e-002) * r3.yz;
  r3.yz = r2.zw >= -r2.zw;
  r2.zw = frac(abs(r2.zw));
  r2.zw = r3.yz ? r2.zw : -r2.zw;
  r2.zw = float2(1.000000e+002,1.000000e+002) * r2.zw;
  r2.zw = floor(r2.zw);
  r2.zw = float2(1.000000e-002,1.000000e-002) * r2.zw;
  r2.z = dot(r2.zw, float2(1.298980e+001,7.823300e+001));
  r2.z = sin(r2.z);
  r2.z = 4.375854688e+004 * r2.z;
  r2.z = frac(r2.z);
  r2.z = cb0[0].x * 5.000000000e-001 + r2.z;
  r2.z = frac(r2.z);
  r2.z = r6.w + -r2.z;
  r2.w = r2.z * r2.z;
  r2.w = r2.w * -4.000000000e+002 + 1.000000000e+000;
  r2.z = 9.900000095e-001 + r2.z;
  r2.z = r2.z * r2.z;
  r2.z = r2.z * -4.000000000e+002 + 1.000000000e+000;
  r2.zw = max(float2(0.000000e+000,0.000000e+000), r2.zw);
  r2.z = r2.w + r2.z;
  r2.z = r2.z * r6.z;
  r2.z = r2.z * r0.z;
  r2.w = 5.199999809e-001 + r0.y;
  r2.w = 3.000000000e+000 * r2.w;
  r2.w = floor(r2.w);
  r2.zw = saturate(float2(3.000000e+001,3.333333e-001) * r2.zw);
  r2.z = r2.z * r2.w;
  r3.yz = float2(-5.000000e-001,-5.000000e-001) + r6.xy;
  r3.yz = r3.yz * r2.zz;
  r6.xy = r3.yz + r3.yz;
  r2.y = r2.y * 9.500002861e-002 + 9.850000143e-001;
  r5.w = 6.499999762e-002 * cb0[0].x;
  r4.xy = r4.xy * r2.yy + r5.zw;
  r4.z = 0.000000000e+000;
  r4.xyz = t4.Sample(s4_s, r4.xyz).xyw;
  r6.z = 1.000000000e+000;
  r2.y = dot(r6.xyz, r6.xyz);
  r2.y = rsqrt(r2.y);
  r2.yw = r6.xy * r2.yy;
  r5.xyz = float3(-5.000000e-001,-5.000000e-001,-5.000000e-001) + r4.xyz;
  r5.xyw = float3(2.000000e+000,2.000000e+000,2.000000e+000) * r5.xyz;
  r5.z = -1.000000000e+000;
  r3.y = dot(r5.xyzw, r5.xyzw);
  r3.y = rsqrt(r3.y);
  r3.yz = r5.xy * r3.yy;
  r0.z = r0.z * cb12[22].x + cb12[22].y;
  r0.z = 1.000000000e+000 + -r0.z;
  r2.yw = r2.yw * r0.zz;
  r4.xy = r4.xy * r0.yy;
  r3.yz = r4.xy * r3.yz;
  r3.yz = r3.yz * r0.zz;
  r2.yw = r2.yw * float2(2.000000e-001,2.000000e-001) + v1.xy;
  r4.xyw = t0.Sample(s0_s, r2.yw).xyz;
  r2.yw = r3.yz * float2(3.800000e-001,3.800000e-001) + v1.xy;
  r5.xyz = t0.Sample(s0_s, r2.yw).xyz;
  if (r0.w != 0) {
    o0.xyz = r1.yzw;
    o0.w = 1.000000000e+000;
    return;
  }
  r0.z = r2.x < 9.999999776e-003;
  if (r0.z != 0) {
    o0.xyz = r1.yzw;
    o0.w = 1.000000000e+000;
    return;
  }
  r0.x = r0.x ? 1.000000 : 0;
  r2.xyw = r4.xyw * float3(1.600000e+000,1.600000e+000,1.600000e+000) + float3(2.000000e-002,2.000000e-002,2.000000e-002);
  r2.xyw = r2.xyw + -r4.xyw;
  r2.xyz = r2.zzz * r2.xyw + r4.xyw;
  r4.xyw = r5.xyz * float3(6.200000e+000,6.200000e+000,6.200000e+000) + float3(2.000000e-002,2.000000e-002,2.000000e-002);
  r0.y = r4.z * r0.y;
  r4.xyz = r4.xyw + -r5.xyz;
  r0.yzw = r0.yyy * r4.xyz + r5.xyz;
  r2.w = r3.w * r1.x;
  r0.yzw = r0.yzw + -r1.yzw;
  r0.yzw = r2.www * r0.yzw + r1.yzw;
  r0.x = r1.x * r0.x;
  r2.xyz = r2.xyz + -r0.yzw;
  r0.xyz = r0.xxx * r2.xyz + r0.yzw;
  r0.w = saturate(1.000000000e+000 + cb0[11].w);
  r0.w = r3.x * r0.w;
  r0.xyz = r0.xyz + -r1.yzw;
  o0.xyz = r0.www * r0.xyz + r1.yzw;
  o0.w = 1.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb12[214], immediateIndexed
dcl_constantbuffer cb13[35], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t24
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
ftou r0.xy, v0.xyxx
mov_sat r1.x, cb3[2].x
sample_l_indexable(texture2d)(float,float,float,float) r1.y, v1.xyxx, t6.yxzw, s0, l(0.000000)
add r1.y, -r1.y, l(1.000000)
mul r1.x, r1.y, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v1.xyxx, t0.wxyz, s0
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r0.xyzw, t7.yzxw
mul r2.xyzw, v0.yyyy, cb12[211].xyzw
mad r2.xyzw, cb12[210].xyzw, v0.xxxx, r2.xyzw
mad r2.xyzw, cb12[212].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb12[213].xyzw
div r2.xyz, r2.zxyz, r2.wwww
add r3.xyz, r2.yzxy, -cb1[8].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
lt r3.x, r1.x, l(0.010000)
lt r0.w, l(40.000000), r0.w
or r0.w, r0.w, r3.x
xor r3.xy, r0.xyxx, l(2, 2, 0, 0)
imax r3.zw, r0.xxxy, -r0.xxxy
ushr r3.zw, r3.zzzw, l(0, 0, 1, 1)
ineg r4.xy, r3.zwzz
and r3.xy, r3.xyxx, l(0x80000000, 0x80000000, 0, 0)
movc r3.xy, r3.xyxx, r4.xyxx, r3.zwzz
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyzw, t24.xyzw
add r4.xyz, r2.yzxy, -cb12[0].xyzx
dp3 r3.z, r4.xyzx, r4.xyzx
sqrt r3.z, r3.z
mov r5.x, cb12[1].z
mov r5.y, cb12[2].z
mov r5.z, cb12[3].z
dp3 r3.w, r5.xyzx, r4.xyzx
div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb12[21].y
mul r4.x, r3.z, r4.x
div r3.w, r4.x, r3.w
add r3.w, -r3.w, r3.z
mul_sat r3.w, r3.w, cb13[33].w
mul r3.w, r3.w, cb13[33].z
max r3.w, r3.w, l(0.001000)
div r3.z, r3.z, cb13[34].z
lt r4.x, r3.x, r3.y
if_nz r4.x
  lt r4.xy, r3.zyzz, r3.xzxx
  mad r4.z, cb13[34].z, r3.x, -cb13[34].x
  mad_sat r4.z, -r4.z, cb13[34].y, l(1.000000)
  add r4.w, -r3.x, r3.z
  mul r4.w, r4.w, cb13[34].z
  div_sat r4.w, r4.w, r3.w
  mul r5.y, r4.w, r4.z
  or r4.x, r4.x, r4.y
  mov r5.x, l(1.000000)
  movc r4.xy, r4.xxxx, l(0,1.000000,0,0), r5.xyxx
else 
  lt r4.zw, r3.yyyz, r3.xxxy
  lt r5.x, r3.x, r3.z
  mad r3.x, cb13[34].z, r3.x, -cb13[34].x
  mad_sat r6.y, -r3.x, cb13[34].y, l(1.000000)
  add r3.x, -r3.y, r3.z
  mul r3.x, r3.x, cb13[34].z
  div_sat r3.x, r3.x, r3.w
  add r6.w, -r3.x, l(1.000000)
  mov r6.xz, l(1.000000,0,1.000000,0)
  movc r3.xy, r5.xxxx, r6.xyxx, r6.zwzz
  movc r3.xy, r4.wwww, l(1.000000,1.000000,0,0), r3.xyxx
  movc r4.xy, r4.zzzz, r3.xyxx, l(0,1.000000,0,0)
endif 
mad r3.x, -r4.y, r4.x, l(1.000000)
utof r4.xyzw, r0.xyxy
add r5.xyzw, r4.zwzw, l(4.500000, 0.000000, -4.500000, 0.000000)
ftou r6.xyzw, r5.zwxy
mov r7.xy, r6.zwzz
mov r7.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r7.xyzw, t7.xyzw
mul r7.xyzw, r5.yyyy, cb12[211].xyzw
mad r7.xyzw, cb12[210].xyzw, r5.xxxx, r7.xyzw
mad r7.xyzw, cb12[212].xyzw, r0.xxxx, r7.xyzw
add r7.xyzw, r7.xyzw, cb12[213].xyzw
div r7.xyz, r7.zxyz, r7.wwww
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r6.xyzw, t7.xyzw
mul r6.xyzw, r5.wwww, cb12[211].xyzw
mad r5.xyzw, cb12[210].xyzw, r5.zzzz, r6.xyzw
mad r5.xyzw, cb12[212].xyzw, r0.xxxx, r5.xyzw
add r5.xyzw, r5.xyzw, cb12[213].xyzw
div r5.xyz, r5.zxyz, r5.wwww
add r4.xyzw, r4.xyzw, l(0.000000, 4.500000, 0.000000, -4.500000)
ftou r6.xyzw, r4.zwxy
mov r8.xy, r6.zwzz
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r8.xyzw, t7.xyzw
mul r8.xyzw, r4.yyyy, cb12[211].xyzw
mad r8.xyzw, cb12[210].xyzw, r4.xxxx, r8.xyzw
mad r8.xyzw, cb12[212].xyzw, r0.xxxx, r8.xyzw
add r8.xyzw, r8.xyzw, cb12[213].xyzw
div r8.xyz, r8.yzxy, r8.wwww
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r6.xyzw, t7.xyzw
mul r6.xyzw, r4.wwww, cb12[211].xyzw
mad r4.xyzw, cb12[210].xyzw, r4.zzzz, r6.xyzw
mad r4.xyzw, cb12[212].xyzw, r0.xxxx, r4.xyzw
add r4.xyzw, r4.xyzw, cb12[213].xyzw
div r4.xyz, r4.yzxy, r4.wwww
add r5.xyz, -r5.xyzx, r7.xyzx
add r4.xyz, -r8.xyzx, r4.xyzx
mul r6.xyz, r4.xyzx, r5.xyzx
mad r4.xyz, r5.zxyz, r4.yzxy, -r6.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
lt r0.xy, l(0.700000, -0.600000, 0.000000, 0.000000), r4.zzzz
mul r4.zw, |r4.yyyx|, l(0.000000, 0.000000, 5.000000, 5.000000)
round_z r4.zw, r4.zzzw
mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.200000, 0.200000)
rsq r4.zw, r4.zzzw
div r4.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.zzzw
mul r3.w, r2.z, r4.w
mul r4.x, r4.y, r4.x
lt r4.x, l(0.000000), r4.x
movc r3.w, r4.x, -r3.w, r3.w
mad r3.y, r2.y, r4.z, r3.w
mov r3.z, r2.x
and r4.xyz, r0.yyyy, r3.xyzx
mov r2.x, r3.x
mov r2.w, l(0)
mov r4.w, l(1.000000)
movc r3.xyzw, r0.xxxx, r2.xyzw, r4.xyzw
add r4.xy, r3.yzyy, r3.yzyy
mov r5.xz, l(0,0,0,0)
mov r5.y, cb0[0].x
mad r4.xy, l(1.200000, 0.078000, 0.000000, 0.000000), r5.xyxx, r4.xyxx
add r6.xy, r2.yzyy, r2.yzyy
mov r6.z, l(1.000000)
sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t4.xyzw, s4
mul r2.yzw, r4.xxyx, l(0.000000, 0.050000, 0.050000, 0.100000)
mad r7.xyw, cb0[0].xxxx, l(0.003250, 0.032500, 0.000000, 0.052000), r2.wywz
mov r7.z, l(0)
sample_indexable(texture2darray)(float,float,float,float) r0.y, r7.ywzy, t4.xzyw, s4
mul r2.y, cb0[0].x, l(0.013000)
mad r7.y, r4.y, l(0.020000), r2.y
sample_indexable(texture2darray)(float,float,float,float) r2.y, r7.xyzx, t4.xzyw, s4
mul r2.zw, r3.yyyz, l(0.000000, 0.000000, 0.020000, 0.020000)
ge r3.yz, r2.zzwz, -r2.zzwz
frc r2.zw, |r2.zzzw|
movc r2.zw, r3.yyyz, r2.zzzw, -r2.zzzw
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 100.000000, 100.000000)
round_ni r2.zw, r2.zzzw
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.010000, 0.010000)
dp2 r2.z, r2.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r2.z, null, r2.z
mul r2.z, r2.z, l(43758.546875)
frc r2.z, r2.z
mad r2.z, cb0[0].x, l(0.500000), r2.z
frc r2.z, r2.z
add r2.z, -r2.z, r6.w
mul r2.w, r2.z, r2.z
mad r2.w, r2.w, l(-400.000000), l(1.000000)
add r2.z, r2.z, l(0.990000)
mul r2.z, r2.z, r2.z
mad r2.z, r2.z, l(-400.000000), l(1.000000)
max r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.z, r2.z, r2.w
mul r2.z, r6.z, r2.z
mul r2.z, r0.z, r2.z
add r2.w, r0.y, l(0.520000)
mul r2.w, r2.w, l(3.000000)
round_ni r2.w, r2.w
mul_sat r2.zw, r2.zzzw, l(0.000000, 0.000000, 30.000000, 0.333333)
mul r2.z, r2.w, r2.z
add r3.yz, r6.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r3.yz, r2.zzzz, r3.yyzy
add r6.xy, r3.yzyy, r3.yzyy
mad r2.y, r2.y, l(0.095000), l(0.985000)
mul r5.w, cb0[0].x, l(0.065000)
mad r4.xy, r4.xyxx, r2.yyyy, r5.zwzz
mov r4.z, l(0)
sample_indexable(texture2darray)(float,float,float,float) r4.xyz, r4.xyzx, t4.xywz, s4
mov r6.z, l(1.000000)
dp3 r2.y, r6.xyzx, r6.xyzx
rsq r2.y, r2.y
mul r2.yw, r2.yyyy, r6.xxxy
add r5.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r5.xyw, r5.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000)
mov r5.z, l(-1.000000)
dp4 r3.y, r5.xyzw, r5.xyzw
rsq r3.y, r3.y
mul r3.yz, r3.yyyy, r5.xxyx
mad r0.z, r0.z, cb12[22].x, cb12[22].y
add r0.z, -r0.z, l(1.000000)
mul r2.yw, r0.zzzz, r2.yyyw
mul r4.xy, r0.yyyy, r4.xyxx
mul r3.yz, r3.yyzy, r4.xxyx
mul r3.yz, r0.zzzz, r3.yyzy
mad r2.yw, r2.yyyw, l(0.000000, 0.200000, 0.000000, 0.200000), v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyw, r2.ywyy, t0.xywz, s0
mad r2.yw, r3.yyyz, l(0.000000, 0.380000, 0.000000, 0.380000), v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r2.ywyy, t0.xyzw, s0
if_nz r0.w
  mov o0.xyz, r1.yzwy
  mov o0.w, l(1.000000)
  ret 
endif 
lt r0.z, r2.x, l(0.010000)
if_nz r0.z
  mov o0.xyz, r1.yzwy
  mov o0.w, l(1.000000)
  ret 
endif 
and r0.x, r0.x, l(0x3f800000)
mad r2.xyw, r4.xyxw, l(1.600000, 1.600000, 0.000000, 1.600000), l(0.020000, 0.020000, 0.000000, 0.020000)
add r2.xyw, -r4.xyxw, r2.xyxw
mad r2.xyz, r2.zzzz, r2.xywx, r4.xywx
mad r4.xyw, r5.xyxz, l(6.200000, 6.200000, 0.000000, 6.200000), l(0.020000, 0.020000, 0.000000, 0.020000)
mul r0.y, r0.y, r4.z
add r4.xyz, -r5.xyzx, r4.xywx
mad r0.yzw, r0.yyyy, r4.xxyz, r5.xxyz
mul r2.w, r1.x, r3.w
add r0.yzw, -r1.yyzw, r0.yyzw
mad r0.yzw, r2.wwww, r0.yyzw, r1.yyzw
mul r0.x, r0.x, r1.x
add r2.xyz, -r0.yzwy, r2.xyzx
mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
add_sat r0.w, cb0[11].w, l(1.000000)
mul r0.w, r0.w, r3.x
add r0.xyz, -r1.yzwy, r0.xyzx
mad o0.xyz, r0.wwww, r0.xyzx, r1.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb13
// {
//
//   float4 cb13[35];                   // Offset:    0 Size:   560
//
// }
//
// cbuffer cb12
// {
//
//   float4 cb12[214];                  // Offset:    0 Size:  3424
//
// }
//
// cbuffer cb3
// {
//
//   float4 cb3[3];                     // Offset:    0 Size:    48
//
// }
//
// cbuffer cb1
// {
//
//   float4 cb1[9];                     // Offset:    0 Size:   144
//
// }
//
// cbuffer cb0
// {
//
//   float4 cb0[12];                    // Offset:    0 Size:   192
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// s0_s                              sampler      NA          NA    0        1
// s4_s                              sampler      NA          NA    4        1
// t0                                texture  float4          2d    0        1
// t4                                texture  float4     2darray    4        1
// t6                                texture  float4          2d    6        1
// t7                                texture  float4          2d    7        1
// t24                               texture  float4          2d   24        1
// cb0                               cbuffer      NA          NA    0        1
// cb1                               cbuffer      NA          NA    1        1
// cb3                               cbuffer      NA          NA    3        1
// cb12                              cbuffer      NA          NA   12        1
// cb13                              cbuffer      NA          NA   13        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb13[35], immediateIndexed
dcl_constantbuffer cb12[214], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb0[12], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t24
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 11
ftou r0.xy, v0.xyxx
utof r1.xyz, r0.xyyx
mov_sat r0.z, cb3[2].x
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t6.yzwx, s0, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.z, r0.w, r0.z
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t0.xyzw, s0
ftoi r3.xy, r1.xzxx
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r3.xyzw, t7.yzwx
mul r3.xyzw, v0.yyyy, cb12[211].xyzw
mad r3.xyzw, cb12[210].xyzw, v0.xxxx, r3.xyzw
mad r3.xyzw, cb12[212].xyzw, r0.wwww, r3.xyzw
add r3.xyzw, r3.xyzw, cb12[213].xyzw
div r3.xyz, r3.zxyz, r3.wwww
add r4.xyz, r3.yzxy, -cb1[8].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
sqrt r1.w, r1.w
lt r2.w, r0.z, l(0.010000)
lt r1.w, l(40.000000), r1.w
or r1.w, r2.w, r1.w
ushr r0.xy, r0.xyxx, l(1, 1, 0, 0)
utof r0.xy, r0.xyxx
ftoi r4.xy, r0.xyxx
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.yz, r4.xyzw, t24.zyxw
add r5.xyz, r3.yzxy, -cb12[0].xyzx
dp3 r0.x, r5.xyzx, r5.xyzx
sqrt r0.x, r0.x
mov r6.x, cb12[1].z
mov r6.y, cb12[2].z
mov r6.z, cb12[3].z
dp3 r0.y, r6.xyzx, r5.xyzx
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb12[21].y
mul r2.w, r0.x, r2.w
div r0.y, r2.w, r0.y
add r0.y, -r0.y, r0.x
mul_sat r0.y, r0.y, cb13[33].w
mul r0.y, r0.y, cb13[33].z
max r0.y, r0.y, l(0.001000)
div r4.x, r0.x, cb13[34].z
lt r0.x, r4.z, r4.y
lt r5.xy, r4.xyxx, r4.zxzz
mad r2.w, cb13[34].z, r4.z, -cb13[34].x
mad_sat r6.w, -r2.w, cb13[34].y, l(1.000000)
add r5.zw, -r4.zzzy, r4.xxxx
mul r5.zw, r5.zzzw, cb13[34].zzzz
div_sat r5.zw, r5.zzzw, r0.yyyy
mul r6.y, r5.z, r6.w
or r0.y, r5.y, r5.x
mov r6.xz, l(1.000000,0,1.000000,0)
movc r5.xy, r0.yyyy, l(0,1.000000,0,0), r6.xyxx
lt r4.yw, r4.yyyx, r4.zzzy
lt r0.y, r4.z, r4.x
add r7.y, -r5.w, l(1.000000)
mov r7.xz, l(1.000000,0,0,0)
movc r4.xz, r0.yyyy, r6.zzwz, r7.xxyx
movc r4.xz, r4.wwww, l(1.000000,0,1.000000,0), r4.xxzx
movc r4.xy, r4.yyyy, r4.xzxx, l(0,1.000000,0,0)
movc r0.xy, r0.xxxx, r5.xyxx, r4.xyxx
mad r4.x, -r0.y, r0.x, l(1.000000)
add r5.xyz, r1.xzxx, l(-4.500000, 0.000000, 4.500000, 0.000000)
ftou r6.xyz, r5.xyzx
utof r6.xyz, r6.xyzx
ftoi r8.xy, r6.zyzz
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r8.xyzw, t7.xyzw
mul r8.xyzw, r5.yyyy, cb12[211].xyzw
mad r9.xyzw, cb12[210].xyzw, r5.zzzz, r8.xyzw
mad r9.xyzw, cb12[212].xyzw, r0.xxxx, r9.xyzw
add r9.xyzw, r9.xyzw, cb12[213].xyzw
div r5.yzw, r9.yyzx, r9.wwww
ftoi r6.xy, r6.xyxx
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r6.xyzw, t7.xyzw
mad r6.xyzw, cb12[210].xyzw, r5.xxxx, r8.xyzw
mad r6.xyzw, cb12[212].xyzw, r0.xxxx, r6.xyzw
add r6.xyzw, r6.xyzw, cb12[213].xyzw
div r6.xyz, r6.yzxy, r6.wwww
add r1.xyz, r1.xyzx, l(0.000000, -4.500000, 4.500000, 0.000000)
ftou r8.xyz, r1.xyzx
utof r8.xyz, r8.xyzx
ftoi r9.xy, r8.xzxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r9.xyzw, t7.xyzw
mul r9.xyzw, r1.xxxx, cb12[210].xyzw
mad r10.xyzw, cb12[211].xyzw, r1.zzzz, r9.xyzw
mad r10.xyzw, cb12[212].xyzw, r0.xxxx, r10.xyzw
add r10.xyzw, r10.xyzw, cb12[213].xyzw
div r10.xyz, r10.zxyz, r10.wwww
ftoi r8.xy, r8.xyxx
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r8.xyzw, t7.xyzw
mad r8.xyzw, cb12[211].xyzw, r1.yyyy, r9.xyzw
mad r8.xyzw, cb12[212].xyzw, r0.xxxx, r8.xyzw
add r8.xyzw, r8.xyzw, cb12[213].xyzw
div r1.xyz, r8.zxyz, r8.wwww
add r5.xyz, r5.yzwy, -r6.xyzx
add r1.xyz, -r10.xyzx, r1.xyzx
mul r6.xyz, r1.zxyz, r5.yzxy
mad r1.xyz, r5.xyzx, r1.xyzx, -r6.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
lt r0.xy, l(0.700000, -0.600000, 0.000000, 0.000000), r1.zzzz
mul r5.xy, |r1.xyxx|, l(5.000000, 5.000000, 0.000000, 0.000000)
round_z r5.xy, r5.xyxx
mul r5.xy, r5.xyxx, l(0.200000, 0.200000, 0.000000, 0.000000)
rsq r5.xy, r5.xyxx
div r5.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r5.xyxx
mul r1.z, r3.z, r5.x
mul r1.x, r1.y, r1.x
lt r1.x, l(0.000000), r1.x
movc r1.x, r1.x, -r1.z, r1.z
mad r4.y, r5.y, r3.y, r1.x
mov r4.z, r3.x
and r5.xyz, r0.yyyy, r4.xyzx
mov r3.x, r4.x
mov r3.w, l(0)
mov r5.w, l(1.000000)
movc r4.xyzw, r0.xxxx, r3.xyzw, r5.xyzw
add r1.xy, r4.yzyy, r4.yzyy
mov r7.w, cb0[0].x
mad r1.xy, l(1.200000, 0.078000, 0.000000, 0.000000), r7.zwzz, r1.xyxx
add r5.xy, r3.yzyy, r3.yzyy
mov r5.z, l(1.000000)
sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t4.xyzw, s4
mul r6.xyzw, r1.xxyy, l(0.100000, 0.050000, 0.050000, 0.020000)
mad r6.xyzw, cb0[0].xxxx, l(0.003250, 0.013000, 0.032500, 0.052000), r6.xwyz
mov r7.xy, r6.zwzz
mov r7.z, l(0)
sample_indexable(texture2darray)(float,float,float,float) r0.y, r7.xyzx, t4.xzyw, s4
mov r6.z, l(0)
sample_indexable(texture2darray)(float,float,float,float) r1.z, r6.xyzx, t4.xyzw, s4
mul r3.yz, r4.yyzy, l(0.000000, 0.020000, 0.020000, 0.000000)
ge r4.yz, r3.yyzy, -r3.yyzy
frc r3.yz, |r3.yyzy|
movc r3.yz, r4.yyzy, r3.yyzy, -r3.yyzy
mul r3.yz, r3.yyzy, l(0.000000, 100.000000, 100.000000, 0.000000)
round_ni r3.yz, r3.yyzy
mul r3.yz, r3.yyzy, l(0.000000, 0.010000, 0.010000, 0.000000)
dp2 r2.w, r3.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r2.w, null, r2.w
mul r2.w, r2.w, l(43758.546875)
frc r2.w, r2.w
mul r3.z, cb0[0].x, l(0.065000)
mad r2.w, cb0[0].x, l(0.500000), r2.w
frc r2.w, r2.w
add r2.w, -r2.w, r5.w
mul r3.w, r2.w, r2.w
mad r6.y, r3.w, l(-400.000000), l(1.000000)
add r2.w, r2.w, l(0.990000)
mul r2.w, r2.w, r2.w
mad r6.x, r2.w, l(-400.000000), l(1.000000)
max r4.yz, r6.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.w, r4.y, r4.z
mul r2.w, r5.z, r2.w
mul r6.x, r0.w, r2.w
add r2.w, r0.y, l(0.520000)
mul r2.w, r2.w, l(3.000000)
round_ni r6.y, r2.w
mul_sat r4.yz, r6.xxyx, l(0.000000, 30.000000, 0.333333, 0.000000)
mul r2.w, r4.z, r4.y
add r4.yz, r5.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r4.yz, r2.wwww, r4.yyzy
add r5.xy, r4.yzyy, r4.yzyy
mad r1.z, r1.z, l(0.095000), l(0.985000)
mov r3.y, l(0)
mad r1.xy, r1.xyxx, r1.zzzz, r3.yzyy
mov r1.z, l(0)
sample_indexable(texture2darray)(float,float,float,float) r1.xyz, r1.xyzx, t4.xywz, s4
mov r5.z, l(1.000000)
dp3 r3.y, r5.xyzx, r5.xyzx
rsq r3.y, r3.y
mul r3.yz, r3.yyyy, r5.xxyx
add r5.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r5.xyw, r5.xyxz, r5.xyxz
mov r5.z, l(-1.000000)
dp4 r3.w, r5.xyzw, r5.xyzw
rsq r3.w, r3.w
mul r4.yz, r3.wwww, r5.xxyx
mad r0.w, r0.w, cb12[22].x, cb12[22].y
add r0.w, -r0.w, l(1.000000)
mul r3.yz, r0.wwww, r3.yyzy
mul r1.xy, r0.yyyy, r1.xyxx
mul r1.xy, r4.yzyy, r1.xyxx
mul r1.xy, r0.wwww, r1.xyxx
mad r3.yz, r3.yyzy, l(0.000000, 0.200000, 0.200000, 0.000000), v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t0.wxyz, s0
mad r1.xy, r1.xyxx, l(0.380000, 0.380000, 0.000000, 0.000000), v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.xyxx, t0.xyzw, s0
if_nz r1.w
  mov o0.xyz, r2.xyzx
  mov o0.w, l(1.000000)
  ret 
endif 
lt r0.w, r3.x, l(0.010000)
if_nz r0.w
  mov o0.xyz, r2.xyzx
  mov o0.w, l(1.000000)
  ret 
endif 
and r0.x, r0.x, l(0x3f800000)
mad r1.xyw, r3.yzyw, l(1.600000, 1.600000, 0.000000, 1.600000), l(0.020000, 0.020000, 0.000000, 0.020000)
add r1.xyw, -r3.yzyw, r1.xyxw
mad r1.xyw, r2.wwww, r1.xyxw, r3.yzyw
mad r3.xyz, r5.xyzx, l(6.200000, 6.200000, 6.200000, 0.000000), l(0.020000, 0.020000, 0.020000, 0.000000)
mul r0.y, r0.y, r1.z
add r3.xyz, -r5.xyzx, r3.xyzx
mad r3.xyz, r0.yyyy, r3.xyzx, r5.xyzx
mul r0.y, r0.z, r4.w
add r3.xyz, -r2.xyzx, r3.xyzx
mad r3.xyz, r0.yyyy, r3.xyzx, r2.xyzx
mul r0.x, r0.x, r0.z
add r0.yzw, r1.xxyw, -r3.xxyz
mad r0.xyz, r0.xxxx, r0.yzwy, r3.xyzx
add_sat r0.w, cb0[11].w, l(1.000000)
mul r0.w, r0.w, r4.x
add r0.xyz, -r2.xyzx, r0.xyzx
mad o0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 222 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 
