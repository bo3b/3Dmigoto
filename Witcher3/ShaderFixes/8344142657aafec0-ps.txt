// Witcher sense red glow stuff
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.1.22 on Sat Jun 20 20:59:20 2015
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb12[214], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t125
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
// dcl_temps 4
dcl_temps 23
mad r0.x, cb6[6].w, l(0.500000), l(-0.500000)
ftou r1.xy, v0.xyxx
utof r0.yz, r1.xxyx
mul r2.xyzw, r0.zzzz, cb12[211].xyzw
mad r2.xyzw, cb12[210].xyzw, r0.yyyy, r2.xyzw
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyww, t7.yxzw
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t2.xyzw
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyzw, cb12[212].xyzw, r0.yyyy, r2.xyzw
add r2.xyzw, r2.xyzw, cb12[213].xyzw
div r2.xyz, r2.xyzx, r2.wwww
// Multiply coord by worldToView:
mul r20.xyzw, cb12[1].xyzw, r2.xxxx
mad r20.xyzw, cb12[2].xyzw, r2.yyyy, r20.xyzw
mad r20.xyzw, cb12[3].xyzw, r2.zzzz, r20.xyzw
add r20.xyzw, cb12[4].xyzw, r20.xyzw
div r20.xyzw, r20.xyzw, r20.wwww
// Subtract view-space stereo correction:
ld_indexable(texture2d)(float,float,float,float) r21.xyzw, l(0, 0, 0, 0), t125.xyzw
add r21.w, r20.z, -r21.y
mul r21.w, r21.w, r21.x
div r21.w, r21.w, cb12[13].x
add r20.x, r20.x, -r21.w
// Multiply by viewToWorld:
mul r22.xyzw, cb12[9].xyzw, r20.xxxx
mad r22.xyzw, cb12[10].xyzw, r20.yyyy, r22.xyzw
mad r22.xyzw, cb12[11].xyzw, r20.zzzz, r22.xyzw
mad r22.xyzw, cb12[12].xyzw, r20.wwww, r22.xyzw
div r2.xyz, r22.xyz, r22.wwww

mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb6[0].xyzw
dp4 r3.y, r2.xyzw, cb6[1].xyzw
dp4 r3.z, r2.xyzw, cb6[2].xyzw
add r0.yzw, r2.xxyz, -cb3[1].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r2.x, r0.y
mad r0.xyz, r3.xyzx, cb6[6].wwww, -r0.xxxx
mov r3.xy, -cb6[4].xyxx
mov r3.z, l(-0.000000)
add r3.xyz, r0.xyzx, r3.xyzx
lt r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.w, r3.y, r3.x
or r0.w, r3.z, r0.w
discard_nz r0.w
add r3.xy, -r0.xyxx, cb6[4].zwzz
add r3.z, -r0.z, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.wxyz, s0
mul r0.x, r0.x, cb6[7].w
mul r0.x, r0.x, cb6[6].y
lt r0.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.y, r0.z, r0.y
or r0.y, r0.w, r0.y
discard_nz r0.y
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r1.xxyz
dp3 r1.x, v1.xyzx, v1.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v1.xyzx
dp3 r0.y, r0.yzwy, r1.xyzx
add r0.y, r0.y, -cb6[6].x
lt r0.y, r0.y, l(0.000000)
discard_nz r0.y
mul r2.y, r2.x, l(0.120000)
log r0.y, |cb3[1].w|
mul r0.yz, r0.yyyy, l(0.000000, 2.800000, 0.800000, 0.000000)
exp r0.yz, r0.yyzy
mad r2.zw, r0.yyyz, l(0.000000, 0.000000, 120.000000, 120.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
lt r0.y, l(0.030000), cb3[1].w
movc r0.yz, r0.yyyy, r2.yyzy, r2.xxwx
div r0.y, r0.y, r0.z
log r0.y, r0.y
mul r0.y, r0.y, l(1.600000)
exp r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
mul o0.w, r0.x, r0.y
mul o0.xyz, r0.yyyy, cb3[0].xyzx
ret 
// Approximately 0 instruction slots used
