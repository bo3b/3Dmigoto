// Witcher senses Distort - Helifax 1.21
cbuffer cb2 : register(b2)
{
  float4 cb2[3];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[12];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float2 v4 : TEXCOORD2,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : SV_Position0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v2.yx, v3.xy);
  r1.xyz = v0.xyz;
  r1.w = 1;
  r2.x = dot(r1.xyzw, cb2[0].xyzw);
  r2.y = dot(r1.xyzw, cb2[1].xyzw);
  r2.z = dot(r1.xyzw, cb2[2].xyzw);
  r0.xyz = cb1[9].xyz * r0.xxx + r2.xyz;
  r0.w = v3.y * v2.y;
  r0.w = v2.x * v3.x + -r0.w;
  r0.xyz = cb1[11].xyz * r0.www + r0.xyz;
  r1.xyz = -cb1[8].xyz + r0.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  o0.xyzw = float4(1,1,1,1) / r0.wwww;
  r1.xyz = r1.xyz * r0.www + -r1.xyz;
  r0.xyz = r1.xyz + r0.xyz;
  r0.w = 1;
  o1.z = dot(r0.xyzw, cb1[6].xyzw);
  o1.xy = v4.xy;
  o2.xyzw = v1.xyzw;
  o3.x = dot(r0.xyzw, cb1[0].xyzw);
  o3.y = dot(r0.xyzw, cb1[1].xyzw);
  o3.z = dot(r0.xyzw, cb1[2].xyzw);
  o3.w = dot(r0.xyzw, cb1[3].xyzw);
  
  float4 stereo = StereoParams.Load(0);
  // Noise Witcher senses
  
  o3.x -= stereo.x * (o3.w - stereo.y) ;
  
  float temp = 1.05;
  if (stereo.y > 1.0)
	temp = 1.25;
  o3.x += stereo.x * (temp - o3.z * stereo.y) ;

  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.1 on Mon May 30 16:40:18 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyz         2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xy
dcl_input v4.xy
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output_siv o3.xyzw, position
dcl_temps 3
dp2 r0.x, v2.yxyy, v3.xyxx
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb2[0].xyzw
dp4 r2.y, r1.xyzw, cb2[1].xyzw
dp4 r2.z, r1.xyzw, cb2[2].xyzw
mad r0.xyz, cb1[9].xyzx, r0.xxxx, r2.xyzx
mul r0.w, v2.y, v3.y
mad r0.w, v2.x, v3.x, -r0.w
mad r0.xyz, cb1[11].xyzx, r0.wwww, r0.xyzx
add r1.xyz, r0.xyzx, -cb1[8].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
div o0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.wwww
mad r1.xyz, r1.xyzx, r0.wwww, -r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mov r0.w, l(1.000000)
dp4 o1.z, r0.xyzw, cb1[6].xyzw
mov o1.xy, v4.xyxx
mov o2.xyzw, v1.xyzw
dp4 o3.x, r0.xyzw, cb1[0].xyzw
dp4 o3.y, r0.xyzw, cb1[1].xyzw
dp4 o3.z, r0.xyzw, cb1[2].xyzw
dp4 o3.w, r0.xyzw, cb1[3].xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
