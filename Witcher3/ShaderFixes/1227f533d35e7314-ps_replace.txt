Texture2D<float4> t23 : register(t23);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

SamplerState s11_s : register(s11);

SamplerState s1_s : register(s1);

cbuffer cb12 : register(b12)
{
  float4 cb12[214];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[2];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);


//Work out Inverse
//...Variables
float4 a1, a2, a3, a4;
float4 b1, b2, b3, b4;
float det;
//...Original Matrix
a1.xyzw = cb12[1].xyzw;
a2.xyzw = cb12[2].xyzw;
a3.xyzw = cb12[3].xyzw;
a4.xyzw = cb12[4].xyzw;
//...Determinant
det  = a1.x*(a2.y*(a3.z*a4.w - a3.w*a4.z) + a2.z*(a3.w*a4.y - a3.y*a4.w) + a2.w*(a3.y*a4.z - a3.z*a4.y));
det += a1.y*(a2.x*(a3.w*a4.z - a3.z*a4.w) + a2.z*(a3.x*a4.w - a3.w*a4.z) + a2.w*(a3.z*a4.x - a3.x*a4.z));
det += a1.z*(a2.x*(a3.y*a4.w - a3.w*a4.y) + a2.y*(a3.w*a4.x - a3.x*a4.w) + a2.w*(a3.x*a4.y - a3.y*a4.x));
det += a1.w*(a2.x*(a3.z*a4.y - a3.y*a4.z) + a2.y*(a3.x*a4.z - a3.z*a4.x) + a2.z*(a3.y*a4.x - a3.x*a4.y));
//...Inverse Matrix Elements
b1.x = a2.y*(a3.z*a4.w - a3.w*a4.z) + a2.z*(a3.w*a4.y - a3.y*a4.w) + a2.w*(a3.y*a4.z - a3.z*a4.y);
b1.y = a1.y*(a3.w*a4.z - a3.z*a4.w) + a1.z*(a3.y*a4.w - a3.w*a4.y) + a1.w*(a3.z*a4.y - a3.y*a4.z);
b1.z = a1.y*(a2.z*a4.w - a2.w*a4.z) + a1.z*(a2.w*a4.y - a2.y*a4.w) + a1.w*(a2.y*a4.z - a2.z*a4.y);
b1.w = a1.y*(a2.w*a3.z - a2.z*a3.w) + a1.z*(a2.y*a3.w - a2.w*a3.y) + a1.w*(a2.z*a3.y - a2.y*a3.z);
b2.x = a2.x*(a3.w*a4.z - a3.z*a4.w) + a2.z*(a3.x*a4.w - a3.w*a4.x) + a2.w*(a3.z*a4.x - a3.x*a4.z);
b2.y = a1.x*(a3.z*a4.w - a3.w*a4.z) + a1.z*(a3.w*a4.x - a3.x*a4.w) + a1.w*(a3.x*a4.z - a3.z*a4.x);
b2.z = a1.x*(a2.w*a4.z - a2.z*a4.w) + a1.z*(a2.x*a4.w - a2.w*a4.x) + a1.w*(a2.z*a4.x - a2.x*a4.z);
b2.w = a1.x*(a2.z*a3.w - a2.w*a3.z) + a1.z*(a2.w*a3.x - a2.x*a3.w) + a1.w*(a2.x*a3.z - a2.z*a3.x);
b3.x = a2.x*(a3.y*a4.w - a3.w*a4.y) + a2.y*(a3.w*a4.x - a3.x*a4.w) + a2.w*(a3.x*a4.y - a3.y*a4.x);
b3.y = a1.x*(a3.w*a4.y - a3.y*a4.w) + a1.y*(a3.x*a4.w - a3.w*a4.x) + a1.w*(a3.y*a4.x - a3.x*a4.y);
b3.z = a1.x*(a2.y*a4.w - a2.w*a4.y) + a1.y*(a2.w*a4.x - a2.x*a4.w) + a1.w*(a2.x*a4.y - a2.y*a4.x);
b3.w = a1.x*(a2.w*a3.y - a2.y*a3.w) + a1.y*(a2.x*a3.w - a2.w*a3.x) + a1.w*(a2.y*a3.x - a2.x*a3.y);
b4.x = a2.x*(a3.z*a4.y - a3.y*a4.z) + a2.y*(a3.x*a4.z - a3.z*a4.x) + a2.z*(a3.y*a4.x - a3.x*a4.y);
b4.y = a1.x*(a3.y*a4.z - a3.z*a4.y) + a1.y*(a3.z*a4.x - a3.x*a4.z) + a1.z*(a3.x*a4.y - a3.y*a4.x);
b4.z = a1.x*(a2.z*a4.y - a2.y*a4.z) + a1.y*(a2.x*a4.z - a2.z*a4.x) + a1.z*(a2.y*a4.x - a2.x*a4.y);
b4.w = a1.x*(a2.y*a3.z - a2.z*a3.y) + a1.y*(a2.z*a3.x - a2.x*a3.z) + a1.z*(a2.x*a3.y - a2.y*a3.x);
b1.xyzw /= det;
b2.xyzw /= det;
b3.xyzw /= det;
b4.xyzw /= det;
//End Inverse 

  r0.xy = (uint2)v0.xy;
  r0.zw = float2(0.000000e+000,0.000000e+000);
  r1.xyzw = t1.Load(r0.xyw).xyzw;
  r2.x = 0.000000000e+000 < r1.w;
  if (r2.x != 0) {
    r1.xy = float2(-5.000000e-001,-5.000000e-001) + r1.xy;
    r2.yz = float2(4.000000e-001,4.000000e-001) * r1.xy;
    r3.xyz = cb3[0].yxy / cb3[0].xzw;
    r2.x = r3.x * r2.y;
    r1.xy = r3.yz * r2.xz;
    r1.w = r1.w * r1.w;
    r0.z = t2.Load(r0.xyz).x;
    r0.xy = r0.xy;
    r1.xy = cb12[23].xy * r1.xy;
    r2.xy = cb3[0].zw / cb3[0].xy;
    r0.xy = r1.xy * r2.xy + r0.xy;
    r2.xyzw = cb12[211].xyzw * r0.yyyy;
    r2.xyzw = cb12[210].xyzw * r0.xxxx + r2.xyzw;
    r0.xyzw = cb12[212].xyzw * r0.zzzz + r2.xyzw;
    r0.xyzw = cb12[213].xyzw + r0.xyzw;
    r0.xyz = r0.xyz / r0.www;
	
float4 r20, r21;
r20.xyz = r0.xyz; 
r20.w = 1.0;

r21.xyzw = cb12[2].xyzw * r20.yyyy;
r21.xyzw = cb12[1].xyzw * r20.xxxx + r21.xyzw;
r21.xyzw = cb12[3].xyzw * r20.zzzz + r21.xyzw;
r21.xyzw = cb12[4].xyzw + r21.xyzw;

r21.xyzw /= r21.wwww;

r21.x -= stereo.x*(r21.z - stereo.y)/cb12[13].x; 

r20.xyzw = b2.xyzw * r21.yyyy;
r20.xyzw = b1.xyzw * r21.xxxx + r20.xyzw;
r20.xyzw = b3.xyzw * r21.zzzz + r20.xyzw;
r20.xyzw = b4.xyzw * r21.wwww + r20.xyzw;
r0.xyz = r20.xyz / r20.www; 

    r2.xyz = -cb12[0].xyz + r0.xyz;
    r0.w = dot(r2.xyz, r2.xyz);
    r0.w = rsqrt(r0.w);
    r2.xyz = r2.xyz * r0.www;
    r2.xyz = r2.zzz * float3(-0.000000e+000,-0.000000e+000,-2.000000e+000) + r2.xyz;
    r0.w = 5.000000000e-001 < r1.z;
    if (r0.w != 0) {
      r1.xy = float2(-5.000000e-001,5.000000e-001) * r2.xy;
      r0.w = 1.000000000e+000 + abs(r2.z);
      r1.xy = r1.xy / r0.ww;
      r1.xy = float2(5.000000e-001,5.000000e-001) + r1.xy;
      r1.xy = cb3[1].xy * r1.xy;
      r3.xy = float2(-5.000000e-001,-5.000000e-001) + cb3[1].xy;
      r1.xy = max(r1.xy, float2(5.000000e-001,5.000000e-001));
      r1.xy = min(r3.xy, r1.xy);
      r1.xy = r1.xy / cb3[1].zw;
      r1.xyz = t3.SampleLevel(s1_s, r1.xy, 0.000000000e+000).xyz;
    } else {
      r3.xyz = cb12[114].xyz * r0.yyy;
      r3.xyz = cb12[113].xyz * r0.xxx + r3.xyz;
      r3.xyz = cb12[115].xyz * r0.zzz + r3.xyz;
      r3.xyz = cb12[116].xyz + r3.xyz;
      r3.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -abs(r3.xyz);
      r4.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000) < r3.xyz;
      r0.w = r4.y ? r4.x : 0;
      r0.w = r4.z ? r0.w : 0;
      if (r0.w != 0) {
        r3.xyz = saturate(cb12[112].xyz * r3.xyz);
        r0.w = 9.999899864e-001 * cb12[111].x;
        r2.w = r3.x * r3.y;
        r2.w = r2.w * r3.z;
        r3.x = r2.w * r0.w;
        r0.w = r0.w * r2.w + 9.999999747e-006;
        r2.w = cb12[117].x * r3.x;
        r3.xyz = cb12[119].xyz * r2.yyy;
        r3.xyz = cb12[118].xyz * r2.xxx + r3.xyz;
        r3.xyz = cb12[120].xyz * r2.zzz + r3.xyz;
        r4.xyz = cb12[119].xyz * r0.yyy;
        r4.xyz = cb12[118].xyz * r0.xxx + r4.xyz;
        r4.xyz = cb12[120].xyz * r0.zzz + r4.xyz;
        r4.xyz = cb12[121].xyz + r4.xyz;
        r3.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) / r3.xyz;
        r5.xyz = -r4.xyz * r3.xyz + r3.xyz;
        r3.xyz = -r4.xyz * r3.xyz + -r3.xyz;
        r3.xyz = max(r3.xyz, r5.xyz);
        r3.y = min(r3.z, r3.y);
        r3.x = min(r3.y, r3.x);
        r3.xyz = r2.xyz * r3.xxx + r0.xyz;
        r3.xyz = -cb12[111].yzw + r3.xyz;
        r3.w = dot(r3.xyz, r3.xyz);
        r3.w = rsqrt(r3.w);
        r4.xyz = r3.xyz * r3.www;
        r3.x = r4.z < 0.000000000e+000;
        r3.y = r3.x ? 1 : 0;
        r4.xyzw = float4(5.000000e-001,-5.000000e-001,-5.000000e-001,5.000000e-001) * r4.xyxy;
        r5.x = -r3.z * r3.w + 1.000000000e+000;
        r5.x = max(r5.x, 1.000000047e-003);
        r4.xy = r4.xy / r5.xx;
        r4.xy = float2(5.000000e-001,5.000000e-001) + r4.xy;
        r3.z = r3.z * r3.w + 1.000000000e+000;
        r3.z = max(r3.z, 1.000000047e-003);
        r3.zw = r4.zw / r3.zz;
        r3.zw = float2(5.000000e-001,5.000000e-001) + r3.zw;
        r3.xz = r3.xx ? r4.xy : r3.zw;
        r3.xz = r3.xz * float2(6.666666e-001,6.666666e-001) + float2(1.666667e-001,1.666667e-001);
        r4.y = cb12[122].x;
        r4.z = r3.y;
        r4.xw = float2(0.000000e+000,0.000000e+000);
        r3.xy = r4.zw + r3.xz;
        r3.xy = r4.xy + r3.xy;
        r3.xy = float2(5.000000e-001,1.428571e-001) * r3.xy;
        r3.xyz = t23.SampleLevel(s11_s, r3.xy, 0.000000000e+000).xyz;
        r3.xyz = r3.xyz * r2.www;
      } else {
        r3.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
        r0.w = 9.999999747e-006;
      }
      r2.w = r0.w < 9.990000129e-001;
      if (r2.w != 0) {
        r4.xyz = cb12[126].xyz * r0.yyy;
        r4.xyz = cb12[125].xyz * r0.xxx + r4.xyz;
        r4.xyz = cb12[127].xyz * r0.zzz + r4.xyz;
        r4.xyz = cb12[128].xyz + r4.xyz;
        r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -abs(r4.xyz);
        r5.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000) < r4.xyz;
        r3.w = r5.y ? r5.x : 0;
        r3.w = r5.z ? r3.w : 0;
        if (r3.w != 0) {
          r4.xyz = saturate(cb12[124].xyz * r4.xyz);
          r3.w = 1.000000000e+000 + -r0.w;
          r3.w = cb12[123].x * r3.w;
          r4.x = r4.x * r4.y;
          r4.x = r4.x * r4.z;
          r4.y = r4.x * r3.w;
          r0.w = r3.w * r4.x + r0.w;
          r3.w = cb12[129].x * r4.y;
          r4.xyz = cb12[131].xyz * r2.yyy;
          r4.xyz = cb12[130].xyz * r2.xxx + r4.xyz;
          r4.xyz = cb12[132].xyz * r2.zzz + r4.xyz;
          r5.xyz = cb12[131].xyz * r0.yyy;
          r5.xyz = cb12[130].xyz * r0.xxx + r5.xyz;
          r5.xyz = cb12[132].xyz * r0.zzz + r5.xyz;
          r5.xyz = cb12[133].xyz + r5.xyz;
          r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) / r4.xyz;
          r6.xyz = -r5.xyz * r4.xyz + r4.xyz;
          r4.xyz = -r5.xyz * r4.xyz + -r4.xyz;
          r4.xyz = max(r4.xyz, r6.xyz);
          r4.y = min(r4.z, r4.y);
          r4.x = min(r4.y, r4.x);
          r4.xyz = r2.xyz * r4.xxx + r0.xyz;
          r4.xyz = -cb12[123].yzw + r4.xyz;
          r4.w = dot(r4.xyz, r4.xyz);
          r4.w = rsqrt(r4.w);
          r5.xyz = r4.xyz * r4.www;
          r4.x = r5.z < 0.000000000e+000;
          r4.y = r4.x ? 1 : 0;
          r5.xyzw = float4(5.000000e-001,-5.000000e-001,-5.000000e-001,5.000000e-001) * r5.xyxy;
          r6.x = -r4.z * r4.w + 1.000000000e+000;
          r6.x = max(r6.x, 1.000000047e-003);
          r5.xy = r5.xy / r6.xx;
          r5.xy = float2(5.000000e-001,5.000000e-001) + r5.xy;
          r4.z = r4.z * r4.w + 1.000000000e+000;
          r4.z = max(r4.z, 1.000000047e-003);
          r4.zw = r5.zw / r4.zz;
          r4.zw = float2(5.000000e-001,5.000000e-001) + r4.zw;
          r4.xz = r4.xx ? r5.xy : r4.zw;
          r4.xz = r4.xz * float2(6.666666e-001,6.666666e-001) + float2(1.666667e-001,1.666667e-001);
          r5.y = cb12[134].x;
          r5.z = r4.y;
          r5.xw = float2(0.000000e+000,0.000000e+000);
          r4.xy = r5.zw + r4.xz;
          r4.xy = r5.xy + r4.xy;
          r4.xy = float2(5.000000e-001,1.428571e-001) * r4.xy;
          r4.xyz = t23.SampleLevel(s11_s, r4.xy, 0.000000000e+000).xyz;
          r3.xyz = r3.www * r4.xyz + r3.xyz;
        }
      }
      r3.w = r0.w < 9.990000129e-001;
      r2.w = r2.w ? r3.w : 0;
      if (r2.w != 0) {
        r4.xyz = cb12[138].xyz * r0.yyy;
        r4.xyz = cb12[137].xyz * r0.xxx + r4.xyz;
        r4.xyz = cb12[139].xyz * r0.zzz + r4.xyz;
        r4.xyz = cb12[140].xyz + r4.xyz;
        r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -abs(r4.xyz);
        r5.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000) < r4.xyz;
        r3.w = r5.y ? r5.x : 0;
        r3.w = r5.z ? r3.w : 0;
        if (r3.w != 0) {
          r4.xyz = saturate(cb12[136].xyz * r4.xyz);
          r3.w = 1.000000000e+000 + -r0.w;
          r3.w = cb12[135].x * r3.w;
          r4.x = r4.x * r4.y;
          r4.x = r4.x * r4.z;
          r4.y = r4.x * r3.w;
          r0.w = r3.w * r4.x + r0.w;
          r3.w = cb12[141].x * r4.y;
          r4.xyz = cb12[143].xyz * r2.yyy;
          r4.xyz = cb12[142].xyz * r2.xxx + r4.xyz;
          r4.xyz = cb12[144].xyz * r2.zzz + r4.xyz;
          r5.xyz = cb12[143].xyz * r0.yyy;
          r5.xyz = cb12[142].xyz * r0.xxx + r5.xyz;
          r5.xyz = cb12[144].xyz * r0.zzz + r5.xyz;
          r5.xyz = cb12[145].xyz + r5.xyz;
          r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) / r4.xyz;
          r6.xyz = -r5.xyz * r4.xyz + r4.xyz;
          r4.xyz = -r5.xyz * r4.xyz + -r4.xyz;
          r4.xyz = max(r4.xyz, r6.xyz);
          r4.y = min(r4.z, r4.y);
          r4.x = min(r4.y, r4.x);
          r4.xyz = r2.xyz * r4.xxx + r0.xyz;
          r4.xyz = -cb12[135].yzw + r4.xyz;
          r4.w = dot(r4.xyz, r4.xyz);
          r4.w = rsqrt(r4.w);
          r5.xyz = r4.xyz * r4.www;
          r4.x = r5.z < 0.000000000e+000;
          r4.y = r4.x ? 1 : 0;
          r5.xyzw = float4(5.000000e-001,-5.000000e-001,-5.000000e-001,5.000000e-001) * r5.xyxy;
          r6.x = -r4.z * r4.w + 1.000000000e+000;
          r6.x = max(r6.x, 1.000000047e-003);
          r5.xy = r5.xy / r6.xx;
          r5.xy = float2(5.000000e-001,5.000000e-001) + r5.xy;
          r4.z = r4.z * r4.w + 1.000000000e+000;
          r4.z = max(r4.z, 1.000000047e-003);
          r4.zw = r5.zw / r4.zz;
          r4.zw = float2(5.000000e-001,5.000000e-001) + r4.zw;
          r4.xz = r4.xx ? r5.xy : r4.zw;
          r4.xz = r4.xz * float2(6.666666e-001,6.666666e-001) + float2(1.666667e-001,1.666667e-001);
          r5.y = cb12[146].x;
          r5.z = r4.y;
          r5.xw = float2(0.000000e+000,0.000000e+000);
          r4.xy = r5.zw + r4.xz;
          r4.xy = r5.xy + r4.xy;
          r4.xy = float2(5.000000e-001,1.428571e-001) * r4.xy;
          r4.xyz = t23.SampleLevel(s11_s, r4.xy, 0.000000000e+000).xyz;
          r3.xyz = r3.www * r4.xyz + r3.xyz;
        }
      }
      r3.w = r0.w < 9.990000129e-001;
      r2.w = r2.w ? r3.w : 0;
      if (r2.w != 0) {
        r4.xyz = cb12[150].xyz * r0.yyy;
        r4.xyz = cb12[149].xyz * r0.xxx + r4.xyz;
        r4.xyz = cb12[151].xyz * r0.zzz + r4.xyz;
        r4.xyz = cb12[152].xyz + r4.xyz;
        r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -abs(r4.xyz);
        r5.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000) < r4.xyz;
        r3.w = r5.y ? r5.x : 0;
        r3.w = r5.z ? r3.w : 0;
        if (r3.w != 0) {
          r4.xyz = saturate(cb12[148].xyz * r4.xyz);
          r3.w = 1.000000000e+000 + -r0.w;
          r3.w = cb12[147].x * r3.w;
          r4.x = r4.x * r4.y;
          r4.x = r4.x * r4.z;
          r4.y = r4.x * r3.w;
          r0.w = r3.w * r4.x + r0.w;
          r3.w = cb12[153].x * r4.y;
          r4.xyz = cb12[155].xyz * r2.yyy;
          r4.xyz = cb12[154].xyz * r2.xxx + r4.xyz;
          r4.xyz = cb12[156].xyz * r2.zzz + r4.xyz;
          r5.xyz = cb12[155].xyz * r0.yyy;
          r5.xyz = cb12[154].xyz * r0.xxx + r5.xyz;
          r5.xyz = cb12[156].xyz * r0.zzz + r5.xyz;
          r5.xyz = cb12[157].xyz + r5.xyz;
          r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) / r4.xyz;
          r6.xyz = -r5.xyz * r4.xyz + r4.xyz;
          r4.xyz = -r5.xyz * r4.xyz + -r4.xyz;
          r4.xyz = max(r4.xyz, r6.xyz);
          r4.y = min(r4.z, r4.y);
          r4.x = min(r4.y, r4.x);
          r4.xyz = r2.xyz * r4.xxx + r0.xyz;
          r4.xyz = -cb12[147].yzw + r4.xyz;
          r4.w = dot(r4.xyz, r4.xyz);
          r4.w = rsqrt(r4.w);
          r5.xyz = r4.xyz * r4.www;
          r4.x = r5.z < 0.000000000e+000;
          r4.y = r4.x ? 1 : 0;
          r5.xyzw = float4(5.000000e-001,-5.000000e-001,-5.000000e-001,5.000000e-001) * r5.xyxy;
          r6.x = -r4.z * r4.w + 1.000000000e+000;
          r6.x = max(r6.x, 1.000000047e-003);
          r5.xy = r5.xy / r6.xx;
          r5.xy = float2(5.000000e-001,5.000000e-001) + r5.xy;
          r4.z = r4.z * r4.w + 1.000000000e+000;
          r4.z = max(r4.z, 1.000000047e-003);
          r4.zw = r5.zw / r4.zz;
          r4.zw = float2(5.000000e-001,5.000000e-001) + r4.zw;
          r4.xz = r4.xx ? r5.xy : r4.zw;
          r4.xz = r4.xz * float2(6.666666e-001,6.666666e-001) + float2(1.666667e-001,1.666667e-001);
          r5.y = cb12[158].x;
          r5.z = r4.y;
          r5.xw = float2(0.000000e+000,0.000000e+000);
          r4.xy = r5.zw + r4.xz;
          r4.xy = r5.xy + r4.xy;
          r4.xy = float2(5.000000e-001,1.428571e-001) * r4.xy;
          r4.xyz = t23.SampleLevel(s11_s, r4.xy, 0.000000000e+000).xyz;
          r3.xyz = r3.www * r4.xyz + r3.xyz;
        }
      }
      r3.w = r0.w < 9.990000129e-001;
      r2.w = r2.w ? r3.w : 0;
      if (r2.w != 0) {
        r4.xyz = cb12[162].xyz * r0.yyy;
        r4.xyz = cb12[161].xyz * r0.xxx + r4.xyz;
        r4.xyz = cb12[163].xyz * r0.zzz + r4.xyz;
        r4.xyz = cb12[164].xyz + r4.xyz;
        r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -abs(r4.xyz);
        r5.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000) < r4.xyz;
        r3.w = r5.y ? r5.x : 0;
        r3.w = r5.z ? r3.w : 0;
        if (r3.w != 0) {
          r4.xyz = saturate(cb12[160].xyz * r4.xyz);
          r3.w = 1.000000000e+000 + -r0.w;
          r3.w = cb12[159].x * r3.w;
          r4.x = r4.x * r4.y;
          r4.x = r4.x * r4.z;
          r4.y = r4.x * r3.w;
          r0.w = r3.w * r4.x + r0.w;
          r3.w = cb12[165].x * r4.y;
          r4.xyz = cb12[167].xyz * r2.yyy;
          r4.xyz = cb12[166].xyz * r2.xxx + r4.xyz;
          r4.xyz = cb12[168].xyz * r2.zzz + r4.xyz;
          r5.xyz = cb12[167].xyz * r0.yyy;
          r5.xyz = cb12[166].xyz * r0.xxx + r5.xyz;
          r5.xyz = cb12[168].xyz * r0.zzz + r5.xyz;
          r5.xyz = cb12[169].xyz + r5.xyz;
          r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) / r4.xyz;
          r6.xyz = -r5.xyz * r4.xyz + r4.xyz;
          r4.xyz = -r5.xyz * r4.xyz + -r4.xyz;
          r4.xyz = max(r4.xyz, r6.xyz);
          r4.y = min(r4.z, r4.y);
          r4.x = min(r4.y, r4.x);
          r4.xyz = r2.xyz * r4.xxx + r0.xyz;
          r4.xyz = -cb12[159].yzw + r4.xyz;
          r4.w = dot(r4.xyz, r4.xyz);
          r4.w = rsqrt(r4.w);
          r5.xyz = r4.xyz * r4.www;
          r4.x = r5.z < 0.000000000e+000;
          r4.y = r4.x ? 1 : 0;
          r5.xyzw = float4(5.000000e-001,-5.000000e-001,-5.000000e-001,5.000000e-001) * r5.xyxy;
          r6.x = -r4.z * r4.w + 1.000000000e+000;
          r6.x = max(r6.x, 1.000000047e-003);
          r5.xy = r5.xy / r6.xx;
          r5.xy = float2(5.000000e-001,5.000000e-001) + r5.xy;
          r4.z = r4.z * r4.w + 1.000000000e+000;
          r4.z = max(r4.z, 1.000000047e-003);
          r4.zw = r5.zw / r4.zz;
          r4.zw = float2(5.000000e-001,5.000000e-001) + r4.zw;
          r4.xz = r4.xx ? r5.xy : r4.zw;
          r4.xz = r4.xz * float2(6.666666e-001,6.666666e-001) + float2(1.666667e-001,1.666667e-001);
          r5.y = cb12[170].x;
          r5.z = r4.y;
          r5.xw = float2(0.000000e+000,0.000000e+000);
          r4.xy = r5.zw + r4.xz;
          r4.xy = r5.xy + r4.xy;
          r4.xy = float2(5.000000e-001,1.428571e-001) * r4.xy;
          r4.xyz = t23.SampleLevel(s11_s, r4.xy, 0.000000000e+000).xyz;
          r3.xyz = r3.www * r4.xyz + r3.xyz;
        }
      }
      r3.w = r0.w < 9.990000129e-001;
      r2.w = r2.w ? r3.w : 0;
      if (r2.w != 0) {
        r4.xyz = cb12[174].xyz * r0.yyy;
        r4.xyz = cb12[173].xyz * r0.xxx + r4.xyz;
        r4.xyz = cb12[175].xyz * r0.zzz + r4.xyz;
        r4.xyz = cb12[176].xyz + r4.xyz;
        r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -abs(r4.xyz);
        r5.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000) < r4.xyz;
        r2.w = r5.y ? r5.x : 0;
        r2.w = r5.z ? r2.w : 0;
        if (r2.w != 0) {
          r4.xyz = saturate(cb12[172].xyz * r4.xyz);
          r2.w = 1.000000000e+000 + -r0.w;
          r2.w = cb12[171].x * r2.w;
          r3.w = r4.x * r4.y;
          r3.w = r3.w * r4.z;
          r4.x = r3.w * r2.w;
          r0.w = r2.w * r3.w + r0.w;
          r2.w = cb12[177].x * r4.x;
          r4.xyz = cb12[179].xyz * r2.yyy;
          r4.xyz = cb12[178].xyz * r2.xxx + r4.xyz;
          r4.xyz = cb12[180].xyz * r2.zzz + r4.xyz;
          r5.xyz = cb12[179].xyz * r0.yyy;
          r5.xyz = cb12[178].xyz * r0.xxx + r5.xyz;
          r5.xyz = cb12[180].xyz * r0.zzz + r5.xyz;
          r5.xyz = cb12[181].xyz + r5.xyz;
          r4.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) / r4.xyz;
          r6.xyz = -r5.xyz * r4.xyz + r4.xyz;
          r4.xyz = -r5.xyz * r4.xyz + -r4.xyz;
          r4.xyz = max(r4.xyz, r6.xyz);
          r3.w = min(r4.z, r4.y);
          r3.w = min(r3.w, r4.x);
          r0.xyz = r2.xyz * r3.www + r0.xyz;
          r0.xyz = -cb12[171].yzw + r0.xyz;
          r3.w = dot(r0.xyz, r0.xyz);
          r3.w = rsqrt(r3.w);
          r4.xyz = r3.www * r0.xyz;
          r0.x = r4.z < 0.000000000e+000;
          r0.y = r0.x ? 1 : 0;
          r4.xyzw = float4(5.000000e-001,-5.000000e-001,-5.000000e-001,5.000000e-001) * r4.xyxy;
          r5.x = -r0.z * r3.w + 1.000000000e+000;
          r5.x = max(r5.x, 1.000000047e-003);
          r4.xy = r4.xy / r5.xx;
          r0.z = r0.z * r3.w + 1.000000000e+000;
          r0.z = max(r0.z, 1.000000047e-003);
          r4.zw = r4.zw / r0.zz;
          r4.xyzw = float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + r4.xyzw;
          r0.xz = r0.xx ? r4.xy : r4.zw;
          r0.xz = r0.xz * float2(6.666666e-001,6.666666e-001) + float2(1.666667e-001,1.666667e-001);
          r4.y = cb12[182].x;
          r4.z = r0.y;
          r4.xw = float2(0.000000e+000,0.000000e+000);
          r0.xy = r4.zw + r0.xz;
          r0.xy = r4.xy + r0.xy;
          r0.xy = float2(5.000000e-001,1.428571e-001) * r0.xy;
          r0.xyz = t23.SampleLevel(s11_s, r0.xy, 0.000000000e+000).xyz;
          r3.xyz = r2.www * r0.xyz + r3.xyz;
        }
      }
      r0.x = r0.w < 9.990000129e-001;
      if (r0.x != 0) {
        r0.x = 1.000000000e+000 + -r0.w;
        r0.y = cb12[99].x * r0.x;
        r0.w = r0.x * cb12[99].x + r0.w;
        r0.x = cb12[105].x * r0.y;
        r0.y = r2.z < 0.000000000e+000;
        r0.z = r0.y ? 1 : 0;
        r4.xyzw = float4(5.000000e-001,-5.000000e-001,-5.000000e-001,5.000000e-001) * r2.xyxy;
        r2.x = 1.000000000e+000 + -r2.z;
        r2.x = max(r2.x, 1.000000047e-003);
        r2.xy = r4.xy / r2.xx;
        r2.z = 1.000000000e+000 + r2.z;
        r2.z = max(r2.z, 1.000000047e-003);
        r2.zw = r4.zw / r2.zz;
        r2.xyzw = float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + r2.xyzw;
        r2.xy = r0.yy ? r2.xy : r2.zw;
        r2.xy = r2.xy * float2(6.666666e-001,6.666666e-001) + float2(1.666667e-001,1.666667e-001);
        r4.y = cb12[110].x;
        r4.z = r0.z;
        r4.xw = float2(0.000000e+000,0.000000e+000);
        r0.yz = r4.zw + r2.xy;
        r0.yz = r4.xy + r0.yz;
        r0.yz = float2(5.000000e-001,1.428571e-001) * r0.yz;
        r2.xyz = t23.SampleLevel(s11_s, r0.yz, 0.000000000e+000).xyz;
        r3.xyz = r0.xxx * r2.xyz + r3.xyz;
      }
      r0.x = 1.000000e+000 / r0.w;
      r1.xyz = r3.xyz * r0.xxx;
    }
    r0.xyz = r1.xyz * r1.www;
  } else {
    r0.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  }
  o0.xyz = r0.xyz;
  o0.w = 0.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb12[214], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t23
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 7
ftou r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyww, t1.xyzw
lt r2.x, l(0.000000), r1.w
if_nz r2.x
  add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mul r2.yz, r1.xxyx, l(0.000000, 0.400000, 0.400000, 0.000000)
  div r3.xyz, cb3[0].yxyy, cb3[0].xzwx
  mul r2.x, r2.y, r3.x
  mul r1.xy, r2.xzxx, r3.yzyy
  mul r1.w, r1.w, r1.w
  ld_indexable(texture2d)(float,float,float,float) r0.z, r0.xyzw, t2.yzxw
  utof r0.xy, r0.xyxx
  mul r1.xy, r1.xyxx, cb12[23].xyxx
  div r2.xy, cb3[0].zwzz, cb3[0].xyxx
  mad r0.xy, r1.xyxx, r2.xyxx, r0.xyxx
  mul r2.xyzw, r0.yyyy, cb12[211].xyzw
  mad r2.xyzw, cb12[210].xyzw, r0.xxxx, r2.xyzw
  mad r0.xyzw, cb12[212].xyzw, r0.zzzz, r2.xyzw
  add r0.xyzw, r0.xyzw, cb12[213].xyzw
  div r0.xyz, r0.xyzx, r0.wwww
  add r2.xyz, r0.xyzx, -cb12[0].xyzx
  dp3 r0.w, r2.xyzx, r2.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r2.xyzx
  mad r2.xyz, r2.zzzz, l(-0.000000, -0.000000, -2.000000, 0.000000), r2.xyzx
  lt r0.w, l(0.500000), r1.z
  if_nz r0.w
    mul r1.xy, r2.xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000)
    add r0.w, |r2.z|, l(1.000000)
    div r1.xy, r1.xyxx, r0.wwww
    add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    mul r1.xy, r1.xyxx, cb3[1].xyxx
    add r3.xy, cb3[1].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    max r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    min r1.xy, r3.xyxx, r1.xyxx
    div r1.xy, r1.xyxx, cb3[1].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t3.xyzw, s1, l(0.000000)
  else 
    mul r3.xyz, r0.yyyy, cb12[114].xyzx
    mad r3.xyz, cb12[113].xyzx, r0.xxxx, r3.xyzx
    mad r3.xyz, cb12[115].xyzx, r0.zzzz, r3.xyzx
    add r3.xyz, r3.xyzx, cb12[116].xyzx
    add r3.xyz, -|r3.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
    and r0.w, r4.y, r4.x
    and r0.w, r4.z, r0.w
    if_nz r0.w
      mul_sat r3.xyz, r3.xyzx, cb12[112].xyzx
      mul r0.w, cb12[111].x, l(0.999990)
      mul r2.w, r3.y, r3.x
      mul r2.w, r3.z, r2.w
      mul r3.x, r0.w, r2.w
      mad r0.w, r0.w, r2.w, l(0.000010)
      mul r2.w, r3.x, cb12[117].x
      mul r3.xyz, r2.yyyy, cb12[119].xyzx
      mad r3.xyz, cb12[118].xyzx, r2.xxxx, r3.xyzx
      mad r3.xyz, cb12[120].xyzx, r2.zzzz, r3.xyzx
      mul r4.xyz, r0.yyyy, cb12[119].xyzx
      mad r4.xyz, cb12[118].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[120].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[121].xyzx
      div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx
      mad r5.xyz, -r4.xyzx, r3.xyzx, r3.xyzx
      mad r3.xyz, -r4.xyzx, r3.xyzx, -r3.xyzx
      max r3.xyz, r3.xyzx, r5.xyzx
      min r3.y, r3.z, r3.y
      min r3.x, r3.y, r3.x
      mad r3.xyz, r2.xyzx, r3.xxxx, r0.xyzx
      add r3.xyz, r3.xyzx, -cb12[111].yzwy
      dp3 r3.w, r3.xyzx, r3.xyzx
      rsq r3.w, r3.w
      mul r4.xyz, r3.wwww, r3.xyzx
      lt r3.x, r4.z, l(0.000000)
      and r3.y, r3.x, l(1)
      mul r4.xyzw, r4.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
      mad r5.x, -r3.z, r3.w, l(1.000000)
      max r5.x, r5.x, l(0.001000)
      div r4.xy, r4.xyxx, r5.xxxx
      add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      mad r3.z, r3.z, r3.w, l(1.000000)
      max r3.z, r3.z, l(0.001000)
      div r3.zw, r4.zzzw, r3.zzzz
      add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
      movc r3.xz, r3.xxxx, r4.xxyx, r3.zzwz
      mad r3.xz, r3.xxzx, l(0.666667, 0.000000, 0.666667, 0.000000), l(0.166667, 0.000000, 0.166667, 0.000000)
      itof r4.y, cb12[122].x
      itof r4.z, r3.y
      mov r4.xw, l(0,0,0,0)
      add r3.xy, r3.xzxx, r4.zwzz
      add r3.xy, r3.xyxx, r4.xyxx
      mul r3.xy, r3.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t23.xyzw, s11, l(0.000000)
      mul r3.xyz, r2.wwww, r3.xyzx
    else 
      mov r3.xyz, l(0,0,0,0)
      mov r0.w, l(0.000010)
    endif 
    lt r2.w, r0.w, l(0.999000)
    if_nz r2.w
      mul r4.xyz, r0.yyyy, cb12[126].xyzx
      mad r4.xyz, cb12[125].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[127].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[128].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r5.z, r3.w
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[124].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[123].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r3.w, r4.x, r0.w
        mul r3.w, r4.y, cb12[129].x
        mul r4.xyz, r2.yyyy, cb12[131].xyzx
        mad r4.xyz, cb12[130].xyzx, r2.xxxx, r4.xyzx
        mad r4.xyz, cb12[132].xyzx, r2.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[131].xyzx
        mad r5.xyz, cb12[130].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[132].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[133].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r4.xyzx, r6.xyzx
        min r4.y, r4.z, r4.y
        min r4.x, r4.y, r4.x
        mad r4.xyz, r2.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[123].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(1)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.xz, r4.xxzx, l(0.666667, 0.000000, 0.666667, 0.000000), l(0.166667, 0.000000, 0.166667, 0.000000)
        itof r5.y, cb12[134].x
        itof r5.z, r4.y
        mov r5.xw, l(0,0,0,0)
        add r4.xy, r4.xzxx, r5.zwzz
        add r4.xy, r4.xyxx, r5.xyxx
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r2.w, r2.w, r3.w
    if_nz r2.w
      mul r4.xyz, r0.yyyy, cb12[138].xyzx
      mad r4.xyz, cb12[137].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[139].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[140].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r5.z, r3.w
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[136].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[135].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r3.w, r4.x, r0.w
        mul r3.w, r4.y, cb12[141].x
        mul r4.xyz, r2.yyyy, cb12[143].xyzx
        mad r4.xyz, cb12[142].xyzx, r2.xxxx, r4.xyzx
        mad r4.xyz, cb12[144].xyzx, r2.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[143].xyzx
        mad r5.xyz, cb12[142].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[144].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[145].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r4.xyzx, r6.xyzx
        min r4.y, r4.z, r4.y
        min r4.x, r4.y, r4.x
        mad r4.xyz, r2.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[135].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(1)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.xz, r4.xxzx, l(0.666667, 0.000000, 0.666667, 0.000000), l(0.166667, 0.000000, 0.166667, 0.000000)
        itof r5.y, cb12[146].x
        itof r5.z, r4.y
        mov r5.xw, l(0,0,0,0)
        add r4.xy, r4.xzxx, r5.zwzz
        add r4.xy, r4.xyxx, r5.xyxx
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r2.w, r2.w, r3.w
    if_nz r2.w
      mul r4.xyz, r0.yyyy, cb12[150].xyzx
      mad r4.xyz, cb12[149].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[151].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[152].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r5.z, r3.w
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[148].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[147].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r3.w, r4.x, r0.w
        mul r3.w, r4.y, cb12[153].x
        mul r4.xyz, r2.yyyy, cb12[155].xyzx
        mad r4.xyz, cb12[154].xyzx, r2.xxxx, r4.xyzx
        mad r4.xyz, cb12[156].xyzx, r2.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[155].xyzx
        mad r5.xyz, cb12[154].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[156].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[157].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r4.xyzx, r6.xyzx
        min r4.y, r4.z, r4.y
        min r4.x, r4.y, r4.x
        mad r4.xyz, r2.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[147].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(1)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.xz, r4.xxzx, l(0.666667, 0.000000, 0.666667, 0.000000), l(0.166667, 0.000000, 0.166667, 0.000000)
        itof r5.y, cb12[158].x
        itof r5.z, r4.y
        mov r5.xw, l(0,0,0,0)
        add r4.xy, r4.xzxx, r5.zwzz
        add r4.xy, r4.xyxx, r5.xyxx
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r2.w, r2.w, r3.w
    if_nz r2.w
      mul r4.xyz, r0.yyyy, cb12[162].xyzx
      mad r4.xyz, cb12[161].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[163].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[164].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r5.z, r3.w
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[160].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[159].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r3.w, r4.x, r0.w
        mul r3.w, r4.y, cb12[165].x
        mul r4.xyz, r2.yyyy, cb12[167].xyzx
        mad r4.xyz, cb12[166].xyzx, r2.xxxx, r4.xyzx
        mad r4.xyz, cb12[168].xyzx, r2.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[167].xyzx
        mad r5.xyz, cb12[166].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[168].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[169].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r4.xyzx, r6.xyzx
        min r4.y, r4.z, r4.y
        min r4.x, r4.y, r4.x
        mad r4.xyz, r2.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[159].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(1)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.xz, r4.xxzx, l(0.666667, 0.000000, 0.666667, 0.000000), l(0.166667, 0.000000, 0.166667, 0.000000)
        itof r5.y, cb12[170].x
        itof r5.z, r4.y
        mov r5.xw, l(0,0,0,0)
        add r4.xy, r4.xzxx, r5.zwzz
        add r4.xy, r4.xyxx, r5.xyxx
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r2.w, r2.w, r3.w
    if_nz r2.w
      mul r4.xyz, r0.yyyy, cb12[174].xyzx
      mad r4.xyz, cb12[173].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[175].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[176].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r2.w, r5.y, r5.x
      and r2.w, r5.z, r2.w
      if_nz r2.w
        mul_sat r4.xyz, r4.xyzx, cb12[172].xyzx
        add r2.w, -r0.w, l(1.000000)
        mul r2.w, r2.w, cb12[171].x
        mul r3.w, r4.y, r4.x
        mul r3.w, r4.z, r3.w
        mul r4.x, r2.w, r3.w
        mad r0.w, r2.w, r3.w, r0.w
        mul r2.w, r4.x, cb12[177].x
        mul r4.xyz, r2.yyyy, cb12[179].xyzx
        mad r4.xyz, cb12[178].xyzx, r2.xxxx, r4.xyzx
        mad r4.xyz, cb12[180].xyzx, r2.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[179].xyzx
        mad r5.xyz, cb12[178].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[180].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[181].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r4.xyzx, r6.xyzx
        min r3.w, r4.z, r4.y
        min r3.w, r3.w, r4.x
        mad r0.xyz, r2.xyzx, r3.wwww, r0.xyzx
        add r0.xyz, r0.xyzx, -cb12[171].yzwy
        dp3 r3.w, r0.xyzx, r0.xyzx
        rsq r3.w, r3.w
        mul r4.xyz, r0.xyzx, r3.wwww
        lt r0.x, r4.z, l(0.000000)
        and r0.y, r0.x, l(1)
        mul r4.xyzw, r4.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r5.x, -r0.z, r3.w, l(1.000000)
        max r5.x, r5.x, l(0.001000)
        div r4.xy, r4.xyxx, r5.xxxx
        mad r0.z, r0.z, r3.w, l(1.000000)
        max r0.z, r0.z, l(0.001000)
        div r4.zw, r4.zzzw, r0.zzzz
        add r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
        movc r0.xz, r0.xxxx, r4.xxyx, r4.zzwz
        mad r0.xz, r0.xxzx, l(0.666667, 0.000000, 0.666667, 0.000000), l(0.166667, 0.000000, 0.166667, 0.000000)
        itof r4.y, cb12[182].x
        itof r4.z, r0.y
        mov r4.xw, l(0,0,0,0)
        add r0.xy, r0.xzxx, r4.zwzz
        add r0.xy, r0.xyxx, r4.xyxx
        mul r0.xy, r0.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r2.wwww, r0.xyzx, r3.xyzx
      endif 
    endif 
    lt r0.x, r0.w, l(0.999000)
    if_nz r0.x
      add r0.x, -r0.w, l(1.000000)
      mul r0.y, r0.x, cb12[99].x
      mad r0.w, r0.x, cb12[99].x, r0.w
      mul r0.x, r0.y, cb12[105].x
      lt r0.y, r2.z, l(0.000000)
      and r0.z, r0.y, l(1)
      mul r4.xyzw, r2.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
      add r2.x, -r2.z, l(1.000000)
      max r2.x, r2.x, l(0.001000)
      div r2.xy, r4.xyxx, r2.xxxx
      add r2.z, r2.z, l(1.000000)
      max r2.z, r2.z, l(0.001000)
      div r2.zw, r4.zzzw, r2.zzzz
      add r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
      movc r2.xy, r0.yyyy, r2.xyxx, r2.zwzz
      mad r2.xy, r2.xyxx, l(0.666667, 0.666667, 0.000000, 0.000000), l(0.166667, 0.166667, 0.000000, 0.000000)
      itof r4.y, cb12[110].x
      itof r4.z, r0.z
      mov r4.xw, l(0,0,0,0)
      add r0.yz, r2.xxyx, r4.zzwz
      add r0.yz, r0.yyzy, r4.xxyx
      mul r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.142857, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.yzyy, t23.xyzw, s11, l(0.000000)
      mad r3.xyz, r0.xxxx, r2.xyzx, r3.xyzx
    endif 
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    mul r1.xyz, r0.xxxx, r3.xyzx
  endif 
  mul r0.xyz, r1.wwww, r1.xyzx
else 
  mov r0.xyz, l(0,0,0,0)
endif 
mov o0.xyz, r0.xyzx
mov o0.w, l(0)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb12
// {
//
//   float4 cb12[214];                  // Offset:    0 Size:  3424
//
// }
//
// cbuffer cb3
// {
//
//   float4 cb3[2];                     // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// s1_s                              sampler      NA          NA    1        1
// s11_s                             sampler      NA          NA   11        1
// t1                                texture  float4          2d    1        1
// t2                                texture  float4          2d    2        1
// t3                                texture  float4          2d    3        1
// t23                               texture  float4          2d   23        1
// cb3                               cbuffer      NA          NA    3        1
// cb12                              cbuffer      NA          NA   12        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[214], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t23
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 7
ftou r0.xy, v0.xyxx
utof r0.xy, r0.xyxx
ftoi r1.xy, r0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
lt r0.z, l(0.000000), r2.w
if_nz r0.z
  add r0.zw, r2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  mul r3.yz, r0.zzwz, l(0.000000, 0.400000, 0.400000, 0.000000)
  div r4.xyz, cb3[0].yxyy, cb3[0].xzwx
  mul r3.x, r3.y, r4.x
  mul r0.zw, r3.xxxz, r4.yyyz
  mul r2.x, r2.w, r2.w
  ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t2.xyzw
  mul r0.zw, r0.zzzw, cb12[23].xxxy
  div r1.yz, cb3[0].zzwz, cb3[0].xxyx
  mad r0.xy, r0.zwzz, r1.yzyy, r0.xyxx
  mul r3.xyzw, r0.yyyy, cb12[211].xyzw
  mad r0.xyzw, cb12[210].xyzw, r0.xxxx, r3.xyzw
  mad r0.xyzw, cb12[212].xyzw, r1.xxxx, r0.xyzw
  add r0.xyzw, r0.xyzw, cb12[213].xyzw
  div r0.xyz, r0.xyzx, r0.wwww
  add r1.xyz, r0.xyzx, -cb12[0].xyzx
  dp3 r0.w, r1.xyzx, r1.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, r1.xyzx
  mad r1.xyz, r1.zzzz, l(-0.000000, -0.000000, -2.000000, 0.000000), r1.xyzx
  lt r0.w, l(0.500000), r2.z
  if_nz r0.w
    mul r2.yz, r1.xxyx, l(0.000000, -0.500000, 0.500000, 0.000000)
    add r0.w, |r1.z|, l(1.000000)
    div r2.yz, r2.yyzy, r0.wwww
    add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
    mul r2.yz, r2.yyzy, cb3[1].xxyx
    add r3.xy, cb3[1].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    max r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
    min r2.yz, r2.yyzy, r3.xxyx
    div r2.yz, r2.yyzy, cb3[1].zzwz
    sample_l_indexable(texture2d)(float,float,float,float) r2.yzw, r2.yzyy, t3.wxyz, s1, l(0.000000)
  else 
    mul r3.xyz, r0.yyyy, cb12[114].xyzx
    mad r3.xyz, cb12[113].xyzx, r0.xxxx, r3.xyzx
    mad r3.xyz, cb12[115].xyzx, r0.zzzz, r3.xyzx
    add r3.xyz, r3.xyzx, cb12[116].xyzx
    add r3.xyz, -|r3.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
    and r0.w, r4.y, r4.x
    and r0.w, r0.w, r4.z
    if_nz r0.w
      mul_sat r3.xyz, r3.xyzx, cb12[112].xyzx
      mul r0.w, cb12[111].x, l(0.999990)
      mul r1.w, r3.y, r3.x
      mul r1.w, r3.z, r1.w
      mul r3.x, r0.w, r1.w
      mad r0.w, r1.w, r0.w, l(0.000010)
      mul r1.w, r3.x, cb12[117].x
      mul r3.xyz, r1.yyyy, cb12[119].xyzx
      mad r3.xyz, cb12[118].xyzx, r1.xxxx, r3.xyzx
      mad r3.xyz, cb12[120].xyzx, r1.zzzz, r3.xyzx
      mul r4.xyz, r0.yyyy, cb12[119].xyzx
      mad r4.xyz, cb12[118].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[120].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[121].xyzx
      div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx
      mad r5.xyz, -r4.xyzx, r3.xyzx, r3.xyzx
      mad r3.xyz, -r4.xyzx, r3.xyzx, -r3.xyzx
      max r3.xyz, r5.xyzx, r3.xyzx
      min r3.y, r3.y, r3.z
      min r3.x, r3.x, r3.y
      mad r3.xyz, r1.xyzx, r3.xxxx, r0.xyzx
      add r3.xyz, r3.xyzx, -cb12[111].yzwy
      dp3 r3.w, r3.xyzx, r3.xyzx
      rsq r3.w, r3.w
      mul r4.xyz, r3.wwww, r3.xyzx
      lt r3.x, r4.z, l(0.000000)
      and r3.y, r3.x, l(0x3f800000)
      mul r4.xyzw, r4.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
      mad r5.x, -r3.z, r3.w, l(1.000000)
      max r5.x, r5.x, l(0.001000)
      div r4.xy, r4.xyxx, r5.xxxx
      add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      mad r3.z, r3.z, r3.w, l(1.000000)
      max r3.z, r3.z, l(0.001000)
      div r3.zw, r4.zzzw, r3.zzzz
      add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
      movc r3.xz, r3.xxxx, r4.xxyx, r3.zzwz
      mad r3.x, r3.x, l(0.666667), r3.y
      mad r3.y, r3.z, l(0.666667), cb12[122].x
      add r3.xy, r3.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)
      mul r3.xy, r3.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t23.xyzw, s11, l(0.000000)
      mul r3.xyz, r1.wwww, r3.xyzx
    else 
      mov r3.xyz, l(0,0,0,0)
      mov r0.w, l(0.000010)
    endif 
    lt r1.w, r0.w, l(0.999000)
    if_nz r1.w
      mul r4.xyz, r0.yyyy, cb12[126].xyzx
      mad r4.xyz, cb12[125].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[127].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[128].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r3.w, r5.z
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[124].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[123].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r4.x, r3.w, r0.w
        mul r3.w, r4.y, cb12[129].x
        mul r4.xyz, r1.yyyy, cb12[131].xyzx
        mad r4.xyz, cb12[130].xyzx, r1.xxxx, r4.xyzx
        mad r4.xyz, cb12[132].xyzx, r1.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[131].xyzx
        mad r5.xyz, cb12[130].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[132].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[133].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r6.xyzx, r4.xyzx
        min r4.y, r4.y, r4.z
        min r4.x, r4.x, r4.y
        mad r4.xyz, r1.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[123].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(0x3f800000)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.x, r4.x, l(0.666667), r4.y
        mad r4.y, r4.z, l(0.666667), cb12[134].x
        add r4.xy, r4.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r1.w, r1.w, r3.w
    if_nz r1.w
      mul r4.xyz, r0.yyyy, cb12[138].xyzx
      mad r4.xyz, cb12[137].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[139].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[140].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r3.w, r5.z
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[136].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[135].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r4.x, r3.w, r0.w
        mul r3.w, r4.y, cb12[141].x
        mul r4.xyz, r1.yyyy, cb12[143].xyzx
        mad r4.xyz, cb12[142].xyzx, r1.xxxx, r4.xyzx
        mad r4.xyz, cb12[144].xyzx, r1.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[143].xyzx
        mad r5.xyz, cb12[142].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[144].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[145].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r6.xyzx, r4.xyzx
        min r4.y, r4.y, r4.z
        min r4.x, r4.x, r4.y
        mad r4.xyz, r1.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[135].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(0x3f800000)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.x, r4.x, l(0.666667), r4.y
        mad r4.y, r4.z, l(0.666667), cb12[146].x
        add r4.xy, r4.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r1.w, r1.w, r3.w
    if_nz r1.w
      mul r4.xyz, r0.yyyy, cb12[150].xyzx
      mad r4.xyz, cb12[149].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[151].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[152].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r3.w, r5.z
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[148].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[147].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r4.x, r3.w, r0.w
        mul r3.w, r4.y, cb12[153].x
        mul r4.xyz, r1.yyyy, cb12[155].xyzx
        mad r4.xyz, cb12[154].xyzx, r1.xxxx, r4.xyzx
        mad r4.xyz, cb12[156].xyzx, r1.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[155].xyzx
        mad r5.xyz, cb12[154].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[156].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[157].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r6.xyzx, r4.xyzx
        min r4.y, r4.y, r4.z
        min r4.x, r4.x, r4.y
        mad r4.xyz, r1.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[147].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(0x3f800000)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.x, r4.x, l(0.666667), r4.y
        mad r4.y, r4.z, l(0.666667), cb12[158].x
        add r4.xy, r4.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r1.w, r1.w, r3.w
    if_nz r1.w
      mul r4.xyz, r0.yyyy, cb12[162].xyzx
      mad r4.xyz, cb12[161].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[163].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[164].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r3.w, r5.z
      if_nz r3.w
        mul_sat r4.xyz, r4.xyzx, cb12[160].xyzx
        add r3.w, -r0.w, l(1.000000)
        mul r3.w, r3.w, cb12[159].x
        mul r4.x, r4.y, r4.x
        mul r4.x, r4.z, r4.x
        mul r4.y, r3.w, r4.x
        mad r0.w, r4.x, r3.w, r0.w
        mul r3.w, r4.y, cb12[165].x
        mul r4.xyz, r1.yyyy, cb12[167].xyzx
        mad r4.xyz, cb12[166].xyzx, r1.xxxx, r4.xyzx
        mad r4.xyz, cb12[168].xyzx, r1.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[167].xyzx
        mad r5.xyz, cb12[166].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[168].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[169].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r6.xyzx, r4.xyzx
        min r4.y, r4.y, r4.z
        min r4.x, r4.x, r4.y
        mad r4.xyz, r1.xyzx, r4.xxxx, r0.xyzx
        add r4.xyz, r4.xyzx, -cb12[159].yzwy
        dp3 r4.w, r4.xyzx, r4.xyzx
        rsq r4.w, r4.w
        mul r5.xyz, r4.wwww, r4.xyzx
        lt r4.x, r5.z, l(0.000000)
        and r4.y, r4.x, l(0x3f800000)
        mul r5.xyzw, r5.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r6.x, -r4.z, r4.w, l(1.000000)
        max r6.x, r6.x, l(0.001000)
        div r5.xy, r5.xyxx, r6.xxxx
        add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r4.z, r4.z, r4.w, l(1.000000)
        max r4.z, r4.z, l(0.001000)
        div r4.zw, r5.zzzw, r4.zzzz
        add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
        movc r4.xz, r4.xxxx, r5.xxyx, r4.zzwz
        mad r4.x, r4.x, l(0.666667), r4.y
        mad r4.y, r4.z, l(0.666667), cb12[170].x
        add r4.xy, r4.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)
        mul r4.xy, r4.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
      endif 
    endif 
    lt r3.w, r0.w, l(0.999000)
    and r1.w, r1.w, r3.w
    if_nz r1.w
      mul r4.xyz, r0.yyyy, cb12[174].xyzx
      mad r4.xyz, cb12[173].xyzx, r0.xxxx, r4.xyzx
      mad r4.xyz, cb12[175].xyzx, r0.zzzz, r4.xyzx
      add r4.xyz, r4.xyzx, cb12[176].xyzx
      add r4.xyz, -|r4.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
      lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
      and r1.w, r5.y, r5.x
      and r1.w, r1.w, r5.z
      if_nz r1.w
        mul_sat r4.xyz, r4.xyzx, cb12[172].xyzx
        add r1.w, -r0.w, l(1.000000)
        mul r1.w, r1.w, cb12[171].x
        mul r3.w, r4.y, r4.x
        mul r3.w, r4.z, r3.w
        mul r4.x, r1.w, r3.w
        mad r0.w, r3.w, r1.w, r0.w
        mul r1.w, r4.x, cb12[177].x
        mul r4.xyz, r1.yyyy, cb12[179].xyzx
        mad r4.xyz, cb12[178].xyzx, r1.xxxx, r4.xyzx
        mad r4.xyz, cb12[180].xyzx, r1.zzzz, r4.xyzx
        mul r5.xyz, r0.yyyy, cb12[179].xyzx
        mad r5.xyz, cb12[178].xyzx, r0.xxxx, r5.xyzx
        mad r5.xyz, cb12[180].xyzx, r0.zzzz, r5.xyzx
        add r5.xyz, r5.xyzx, cb12[181].xyzx
        div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
        mad r6.xyz, -r5.xyzx, r4.xyzx, r4.xyzx
        mad r4.xyz, -r5.xyzx, r4.xyzx, -r4.xyzx
        max r4.xyz, r6.xyzx, r4.xyzx
        min r3.w, r4.y, r4.z
        min r3.w, r4.x, r3.w
        mad r0.xyz, r1.xyzx, r3.wwww, r0.xyzx
        add r0.xyz, r0.xyzx, -cb12[171].yzwy
        dp3 r3.w, r0.xyzx, r0.xyzx
        rsq r3.w, r3.w
        mul r4.xyz, r0.xyzx, r3.wwww
        lt r0.x, r4.z, l(0.000000)
        and r0.y, r0.x, l(0x3f800000)
        mul r4.xyzw, r4.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
        mad r5.x, -r0.z, r3.w, l(1.000000)
        max r5.x, r5.x, l(0.001000)
        div r5.xy, r4.xyxx, r5.xxxx
        mad r0.z, r3.w, r0.z, l(1.000000)
        max r0.z, r0.z, l(0.001000)
        div r5.zw, r4.zzzw, r0.zzzz
        add r4.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
        movc r0.xz, r0.xxxx, r4.xxyx, r4.zzwz
        mad r0.x, r0.x, l(0.666667), r0.y
        mad r0.y, r0.z, l(0.666667), cb12[182].x
        add r0.xy, r0.xyxx, l(0.166667, 0.166667, 0.000000, 0.000000)
        mul r0.xy, r0.xyxx, l(0.500000, 0.142857, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t23.xyzw, s11, l(0.000000)
        mad r3.xyz, r1.wwww, r0.xyzx, r3.xyzx
      endif 
    endif 
    lt r0.x, r0.w, l(0.999000)
    if_nz r0.x
      add r0.x, -r0.w, l(1.000000)
      mul r0.y, r0.x, cb12[99].x
      mad r0.w, cb12[99].x, r0.x, r0.w
      mul r0.x, r0.y, cb12[105].x
      lt r0.y, r1.z, l(0.000000)
      and r0.z, r0.y, l(0x3f800000)
      mul r4.xyzw, r1.xyxy, l(0.500000, -0.500000, -0.500000, 0.500000)
      add r1.x, -r1.z, l(1.000000)
      max r1.x, r1.x, l(0.001000)
      div r5.xy, r4.xyxx, r1.xxxx
      add r1.x, r1.z, l(1.000000)
      max r1.x, r1.x, l(0.001000)
      div r5.zw, r4.zzzw, r1.xxxx
      add r1.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
      movc r1.xy, r0.yyyy, r1.xyxx, r1.zwzz
      mad r4.x, r1.x, l(0.666667), r0.z
      mad r4.y, r1.y, l(0.666667), cb12[110].x
      add r0.yz, r4.xxyx, l(0.000000, 0.166667, 0.166667, 0.000000)
      mul r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.142857, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t23.xyzw, s11, l(0.000000)
      mad r3.xyz, r0.xxxx, r1.xyzx, r3.xyzx
    endif 
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    mul r2.yzw, r0.xxxx, r3.xxyz
  endif 
  mul r0.xyz, r2.xxxx, r2.yzwy
else 
  mov r0.xyz, l(0,0,0,0)
endif 
mov o0.xyz, r0.xyzx
mov o0.w, l(0)
ret 
// Approximately 418 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
