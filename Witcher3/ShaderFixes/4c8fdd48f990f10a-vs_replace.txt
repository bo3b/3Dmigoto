// Strange Water HALO - Helifax 1.21
cbuffer cb4 : register(b4)
{
  float4 cb4[3];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[6];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[7];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[1];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  float3 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  float4 v4 : INSTANCE_TRANSFORM0,
  float4 v5 : INSTANCE_TRANSFORM1,
  float4 v6 : INSTANCE_TRANSFORM2,
  float4 v7 : INSTANCE_LOD_PARAMS0,
  out float o0 : TEXCOORD0,
  out float4 o1 : SV_Position0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = cb4[0].xx * v1.xy;
  r0.z = r0.y * 10 + -1;
  r0.xy = float2(100,10) * r0.xy;
  r0.z = floor(r0.z);
  r0.z = reversebits((uint)r0.z);
  r0.x = -cb0[0].x * cb4[1].x + r0.x;
  r0.w = -1 + r0.x;
  r0.w = floor(r0.w);
  r1.x = (int)r0.z + (int)r0.w;
  r1.y = (uint)r1.x >> 13;
  r1.x = (int)r1.x ^ (int)r1.y;
  r1.y = (int)r1.x * (int)r1.x;
  r1.y = mad((int)r1.y, 0x0000ec4d, 0x0131071f);
  r1.x = mad((int)r1.x, (int)r1.y, 0x5208dd0d);
  r1.x = (int)r1.x & 0x7fffffff;
  r1.x = (int)r1.x;
  r1.y = floor(r0.x);
  r0.x = frac(r0.x);
  r0.x = 1 + -r0.x;
  r0.z = (int)r0.z + (int)r1.y;
  r1.z = (uint)r0.z >> 13;
  r0.z = (int)r0.z ^ (int)r1.z;
  r1.z = (int)r0.z * (int)r0.z;
  r1.z = mad((int)r1.z, 0x0000ec4d, 0x0131071f);
  r0.z = mad((int)r0.z, (int)r1.z, 0x5208dd0d);
  r0.z = (int)r0.z & 0x7fffffff;
  r0.z = (int)r0.z;
  r0.z = 4.65661287e-010 * r0.z;
  r1.x = r1.x * 4.65661287e-010 + -r0.z;
  r1.z = r0.x * r0.x;
  r0.x = r1.z * r0.x;
  r1.z = 3 * r1.z;
  r0.x = r0.x * -2 + r1.z;
  r0.z = r0.x * r1.x + r0.z;
  r1.x = floor(r0.y);
  r0.y = frac(r0.y);
  r0.y = 1 + -r0.y;
  r1.x = reversebits((uint)r1.x);
  r0.w = (int)r0.w + (int)r1.x;
  r1.x = (int)r1.x + (int)r1.y;
  r1.y = (uint)r0.w >> 13;
  r0.w = (int)r0.w ^ (int)r1.y;
  r1.y = (int)r0.w * (int)r0.w;
  r1.y = mad((int)r1.y, 0x0000ec4d, 0x0131071f);
  r0.w = mad((int)r0.w, (int)r1.y, 0x5208dd0d);
  r0.w = (int)r0.w & 0x7fffffff;
  r0.w = (int)r0.w;
  r1.y = (uint)r1.x >> 13;
  r1.x = (int)r1.x ^ (int)r1.y;
  r1.y = (int)r1.x * (int)r1.x;
  r1.y = mad((int)r1.y, 0x0000ec4d, 0x0131071f);
  r1.x = mad((int)r1.x, (int)r1.y, 0x5208dd0d);
  r1.x = (int)r1.x & 0x7fffffff;
  r1.x = (int)r1.x;
  r1.x = 4.65661287e-010 * r1.x;
  r0.w = r0.w * 4.65661287e-010 + -r1.x;
  r0.x = r0.x * r0.w + r1.x;
  r0.z = r0.z + -r0.x;
  r0.w = r0.y * r0.y;
  r0.y = r0.w * r0.y;
  r0.w = 3 * r0.w;
  r0.y = r0.y * -2 + r0.w;
  r0.x = r0.y * r0.z + r0.x;
  r0.yzw = v2.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r0.xyz = r0.yzw * r0.xxx;
  r1.xyz = v0.xyz * cb2[4].xyz + cb2[5].xyz;
  r0.xyz = r0.xyz * cb4[2].xxx + r1.xyz;
  r1.xyzw = cb1[6].yyyy * v5.xyzw;
  r1.xyzw = v4.xyzw * cb1[6].xxxx + r1.xyzw;
  r1.xyzw = v6.xyzw * cb1[6].zzzz + r1.xyzw;
  r1.xyzw = cb1[6].wwww * float4(0,0,0,1) + r1.xyzw;
  r0.w = 1;
  o0.x = dot(r0.xyzw, r1.xyzw);
  r1.xyzw = cb1[0].yyyy * v5.xyzw;
  r1.xyzw = v4.xyzw * cb1[0].xxxx + r1.xyzw;
  r1.xyzw = v6.xyzw * cb1[0].zzzz + r1.xyzw;
  r1.xyzw = cb1[0].wwww * float4(0,0,0,1) + r1.xyzw;
  o1.x = dot(r0.xyzw, r1.xyzw);
  r1.xyzw = cb1[1].yyyy * v5.xyzw;
  r1.xyzw = v4.xyzw * cb1[1].xxxx + r1.xyzw;
  r1.xyzw = v6.xyzw * cb1[1].zzzz + r1.xyzw;
  r1.xyzw = cb1[1].wwww * float4(0,0,0,1) + r1.xyzw;
  o1.y = dot(r0.xyzw, r1.xyzw);
  r1.xyzw = cb1[2].yyyy * v5.xyzw;
  r1.xyzw = v4.xyzw * cb1[2].xxxx + r1.xyzw;
  r1.xyzw = v6.xyzw * cb1[2].zzzz + r1.xyzw;
  r1.xyzw = cb1[2].wwww * float4(0,0,0,1) + r1.xyzw;
  o1.z = dot(r0.xyzw, r1.xyzw);
  r1.xyzw = cb1[3].yyyy * v5.xyzw;
  r1.xyzw = v4.xyzw * cb1[3].xxxx + r1.xyzw;
  r1.xyzw = v6.xyzw * cb1[3].zzzz + r1.xyzw;
  r1.xyzw = cb1[3].wwww * float4(0,0,0,1) + r1.xyzw;
  o1.w = dot(r0.xyzw, r1.xyzw);
  
  
  float4 stereo = StereoParams.Load(0);
  o1.x -= stereo.x * (o1.w - stereo.y);
  o1 = 0;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.1 on Wed Jun 01 23:54:39 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float       
// INSTANCE_TRANSFORM       0   xyzw        4     NONE   float   xyzw
// INSTANCE_TRANSFORM       1   xyzw        5     NONE   float   xyzw
// INSTANCE_TRANSFORM       2   xyzw        6     NONE   float   xyzw
// INSTANCE_LOD_PARAMS      0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   x           0     NONE   float   x   
// SV_Position              0   xyzw        1      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output o0.x
dcl_output_siv o1.xyzw, position
dcl_temps 2
mul r0.xy, v1.xyxx, cb4[0].xxxx
mad r0.z, r0.y, l(10.000000), l(-1.000000)
mul r0.xy, r0.xyxx, l(100.000000, 10.000000, 0.000000, 0.000000)
round_ni r0.z, r0.z
bfrev r0.z, r0.z
mad r0.x, -cb0[0].x, cb4[1].x, r0.x
add r0.w, r0.x, l(-1.000000)
round_ni r0.w, r0.w
iadd r1.x, r0.z, r0.w
ishr r1.y, r1.x, l(13)
xor r1.x, r1.x, r1.y
imul null, r1.y, r1.x, r1.x
imad r1.y, r1.y, l(0x0000ec4d), l(0x0131071f)
imad r1.x, r1.x, r1.y, l(0x5208dd0d)
and r1.x, r1.x, l(0x7fffffff)
itof r1.x, r1.x
round_ni r1.y, r0.x
frc r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
iadd r0.z, r0.z, r1.y
ishr r1.z, r0.z, l(13)
xor r0.z, r0.z, r1.z
imul null, r1.z, r0.z, r0.z
imad r1.z, r1.z, l(0x0000ec4d), l(0x0131071f)
imad r0.z, r0.z, r1.z, l(0x5208dd0d)
and r0.z, r0.z, l(0x7fffffff)
itof r0.z, r0.z
mul r0.z, r0.z, l(0.000000)
mad r1.x, r1.x, l(0.000000), -r0.z
mul r1.z, r0.x, r0.x
mul r0.x, r0.x, r1.z
mul r1.z, r1.z, l(3.000000)
mad r0.x, r0.x, l(-2.000000), r1.z
mad r0.z, r0.x, r1.x, r0.z
round_ni r1.x, r0.y
frc r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
bfrev r1.x, r1.x
iadd r0.w, r0.w, r1.x
iadd r1.x, r1.x, r1.y
ishr r1.y, r0.w, l(13)
xor r0.w, r0.w, r1.y
imul null, r1.y, r0.w, r0.w
imad r1.y, r1.y, l(0x0000ec4d), l(0x0131071f)
imad r0.w, r0.w, r1.y, l(0x5208dd0d)
and r0.w, r0.w, l(0x7fffffff)
itof r0.w, r0.w
ishr r1.y, r1.x, l(13)
xor r1.x, r1.x, r1.y
imul null, r1.y, r1.x, r1.x
imad r1.y, r1.y, l(0x0000ec4d), l(0x0131071f)
imad r1.x, r1.x, r1.y, l(0x5208dd0d)
and r1.x, r1.x, l(0x7fffffff)
itof r1.x, r1.x
mul r1.x, r1.x, l(0.000000)
mad r0.w, r0.w, l(0.000000), -r1.x
mad r0.x, r0.x, r0.w, r1.x
add r0.z, -r0.x, r0.z
mul r0.w, r0.y, r0.y
mul r0.y, r0.y, r0.w
mul r0.w, r0.w, l(3.000000)
mad r0.y, r0.y, l(-2.000000), r0.w
mad r0.x, r0.y, r0.z, r0.x
mad r0.yzw, v2.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r1.xyz, v0.xyzx, cb2[4].xyzx, cb2[5].xyzx
mad r0.xyz, r0.xyzx, cb4[2].xxxx, r1.xyzx
mul r1.xyzw, v5.xyzw, cb1[6].yyyy
mad r1.xyzw, v4.xyzw, cb1[6].xxxx, r1.xyzw
mad r1.xyzw, v6.xyzw, cb1[6].zzzz, r1.xyzw
mad r1.xyzw, cb1[6].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
mov r0.w, l(1.000000)
dp4 o0.x, r0.xyzw, r1.xyzw
mul r1.xyzw, v5.xyzw, cb1[0].yyyy
mad r1.xyzw, v4.xyzw, cb1[0].xxxx, r1.xyzw
mad r1.xyzw, v6.xyzw, cb1[0].zzzz, r1.xyzw
mad r1.xyzw, cb1[0].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o1.x, r0.xyzw, r1.xyzw
mul r1.xyzw, v5.xyzw, cb1[1].yyyy
mad r1.xyzw, v4.xyzw, cb1[1].xxxx, r1.xyzw
mad r1.xyzw, v6.xyzw, cb1[1].zzzz, r1.xyzw
mad r1.xyzw, cb1[1].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o1.y, r0.xyzw, r1.xyzw
mul r1.xyzw, v5.xyzw, cb1[2].yyyy
mad r1.xyzw, v4.xyzw, cb1[2].xxxx, r1.xyzw
mad r1.xyzw, v6.xyzw, cb1[2].zzzz, r1.xyzw
mad r1.xyzw, cb1[2].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o1.z, r0.xyzw, r1.xyzw
mul r1.xyzw, v5.xyzw, cb1[3].yyyy
mad r1.xyzw, v4.xyzw, cb1[3].xxxx, r1.xyzw
mad r1.xyzw, v6.xyzw, cb1[3].zzzz, r1.xyzw
mad r1.xyzw, cb1[3].wwww, l(0.000000, 0.000000, 0.000000, 1.000000), r1.xyzw
dp4 o1.w, r0.xyzw, r1.xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
