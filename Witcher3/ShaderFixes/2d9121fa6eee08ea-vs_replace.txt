//HUD
cbuffer Constants : register(b0)
{
  float4 mvp[2] : packoffset(c0);
  float4 texgen[4] : packoffset(c2);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

#include <hud.hlsl>

void main(
  float4 v0 : COLOR0,
  float4 v1 : SV_Position0,
  out float4 o0 : COLOR0,
  out float2 o1 : TEXCOORD0,
  out float2 p1 : TEXCOORD1,
  out float4 o2 : SV_Position0)
{
  o0.xyzw = v0.xyzw;
  o1.x = dot(v1.xyzw, texgen[0].xyzw);
  o1.y = dot(v1.xyzw, texgen[1].xyzw);
  p1.x = dot(v1.xyzw, texgen[2].xyzw);
  p1.y = dot(v1.xyzw, texgen[3].xyzw);
  o2.x = dot(v1.xyzw, mvp[0].xyzw);
  o2.y = dot(v1.xyzw, mvp[1].xyzw);
  o2.zw = float2(0.000000e+000,1.000000e+000);
  
float4 stereo = StereoParams.Load(0);
float4 params = IniParams.Load(0);
if (params.z >= 1.0)
{
	o2.x -= stereo.x* ( o2.z - stereo.y);
}
else
{
	o2.x += stereo.x* params.x;
}
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 mvp[2];                     // Offset:    0 Size:    32
//   float4 texgen[4];                  // Offset:   32 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[6], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output o1.zw
dcl_output_siv o2.xyzw, position
mov o0.xyzw, v0.xyzw
dp4 o1.x, v1.xyzw, cb0[2].xyzw
dp4 o1.y, v1.xyzw, cb0[3].xyzw
dp4 o1.z, v1.xyzw, cb0[4].xyzw
dp4 o1.w, v1.xyzw, cb0[5].xyzw
dp4 o2.x, v1.xyzw, cb0[0].xyzw
dp4 o2.y, v1.xyzw, cb0[1].xyzw
mov o2.zw, l(0,0,0,1.000000)
ret 
// Approximately 9 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 
