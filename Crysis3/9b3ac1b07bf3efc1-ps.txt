//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.960.8229
//
//   using 3Dmigoto v1.1.34 on Tue Jul 21 22:40:17 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 vfViewPos;                  // Offset:    0 Size:    16 [unused]
//   float4 cFogColorDensity;           // Offset:   16 Size:    16
//   float3 vfSunDir;                   // Offset:   32 Size:    12
//   float4 volFogShadowDarkening;      // Offset:   48 Size:    16
//   float4 PS_WorldViewPos;            // Offset:   64 Size:    16
//   float3 vfColGradDelta;             // Offset:   80 Size:    12
//   float4 vfRampParams;               // Offset:   96 Size:    16
//   float4 vfColGradRadial;            // Offset:  112 Size:    16
//   float4 vfParams;                   // Offset:  128 Size:    16
//   float4 PS_NearFarClipDist;         // Offset:  144 Size:    16
//   float4 vfColGradParams;            // Offset:  160 Size:    16
//   float4 volFogShadowDarkeningSunAmb;// Offset:  176 Size:    16
//   float4 PS_ScreenSize;              // Offset:  192 Size:    16
//   float3 CameraFrontVector;          // Offset:  208 Size:    12
//   float3 vfColGradBase;              // Offset:  224 Size:    12
//   float4 PS_HPosScale;               // Offset:  240 Size:    16
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   row_major float4x4 mViewProj;      // Offset:    0 Size:    64
//
// }
//
// cbuffer PER_FRAME
// {
//
//   float4 g_PS_SunLightDir;           // Offset:   32 Size:    16
//
// }
//
// cbuffer PER_MATERIAL
// {
//
//   float4 MatSpecColor;               // Offset:   16 Size:    16
//   float2 __0RealtimeReflMul__1EnvCubeReflMul__2__3;// Offset:   96 Size:     8 [unused]
//   float2 __0DetailNormalsScale__1NormalsScale__2__3;// Offset:  112 Size:     8
//   float4 __0__1__2__3EnvCubeScale;   // Offset:  128 Size:    16 [unused]
//   float4 __0SoftIntersectionFactor__1RainTilling__2DetailTilling__3Tilling;// Offset:  144 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sceneDepthSampler                 sampler      NA          NA    0        1
// RefractionSampler                 sampler      NA          NA    1        1
// ReflSampler                       sampler      NA          NA    2        1
// WaterNormalsSampler               sampler      NA          NA    3        1
// volFogShadowSampler               sampler      NA          NA    4        1
// WaterNormalsSampler               texture  float4          2d    0        1
// RefractionSampler                 texture  float4          2d    1        1
// sceneDepthSampler                 texture  float4          2d    2        1
// ReflSampler                       texture  float4          2d    3        1
// volFogShadowSampler               texture  float4          2d    4        1
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// PER_FRAME                         cbuffer      NA          NA    2        1
// PER_MATERIAL                      cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 6
mul r0.xy, v1.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t0.xywz, s3
mad r0.xyz, r0.xyzx, l(0.150000, 0.150000, 0.100000, 0.000000), l(-0.075000, -0.075000, -0.050000, 0.000000)
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v3.xyzx
mad r0.xyzw, r1.xyxy, r0.zzzz, r0.xyxy
mad r2.xy, v1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xywz, s3
mad r2.xyz, r2.xyzx, l(0.150000, 0.150000, 0.100000, 0.000000), l(-0.075000, -0.075000, -0.050000, 0.000000)
mad r2.xyzw, r1.xyxy, r2.zzzz, r2.xyxy
add r0.xyzw, r0.xyzw, r2.xyzw
mul r2.xy, v1.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.w, cb3[9].z, cb3[9].w
div r2.xy, r2.xyxx, r1.wwww
add r1.w, r1.w, r1.w
mad r2.xy, r2.xyxx, r1.wwww, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t0.xyzw, s3
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
div r3.xyzw, v1.xyxy, cb3[9].wwww
mul r4.xyzw, l(0.250000, 0.250000, 1.000000, 1.000000), cb3[9].wwww
mad r0.xyzw, r3.xyzw, r4.xyzw, r0.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyxx, t0.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t0.xyzw, s3
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
mad r0.xy, r2.xyxx, cb3[7].xxxx, r0.xyxx
add r0.xyz, r0.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r0.xy, r0.xyxx, cb3[7].yyyy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r2.xyz, r0.xyzx, r0.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mad r2.xyz, r2.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
add r3.xyz, -v5.xyzx, cb0[4].xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
add r0.w, r0.w, r0.w
mad r2.xyz, r2.xyzx, -r0.wwww, r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mad r2.xyz, r2.xyzx, r0.wwww, v5.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, cb1[0].xyzw, r2.xyzw
dp4 r3.y, cb1[1].xyzw, r2.xyzw
dp4 r0.w, cb1[3].xyzw, r2.xyzw
div r2.xy, r3.xyxx, r0.wwww
mov r3.xyz, v5.xyzx
mov r3.w, l(1.000000)
dp4 r4.x, cb1[0].xyzw, r3.xyzw
dp4 r4.y, cb1[1].xyzw, r3.xyzw
dp4 r0.w, cb1[3].xyzw, r3.xyzw
div r2.zw, r4.xxxy, r0.wwww
add r2.xy, -r2.zwzz, r2.xyxx
dp2 r0.w, r2.xyxx, r2.xyxx
rsq r0.w, r0.w
mul r2.xy, r0.wwww, r2.xyxx
mul r2.xy, r2.xyxx, cb0[15].xyxx
mul r0.w, cb0[12].y, l(0.500000)
log r0.w, r0.w
add r0.w, r0.w, l(-4.000000)
mad r0.w, -cb3[1].w, r0.w, r0.w
mul r2.xy, r0.wwww, r2.xyxx
mul r2.xy, r2.xyxx, cb0[12].wwww
mul r2.xy, r2.xyxx, l(64.000000, 64.000000, 0.000000, 0.000000)
div r2.zw, v2.xxxy, v2.wwww
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t2.yzwx, s0
mad r1.w, r0.w, cb0[9].y, -v2.w
mul r0.w, r0.w, cb0[9].y
mul_sat r1.w, r1.w, cb3[9].x
mul r3.xy, r0.xyxx, r1.wwww
dp3 r0.x, r1.xyzx, r0.xyzx
dp3 r0.y, r1.xyzx, cb0[13].xyzx
mad r0.x, -r0.x, v3.w, l(1.000000)
mul r1.xy, r3.xyxx, v2.zzzz
mov r3.xw, l(0.150000,0,0,0.150000)
mov r3.yz, cb0[15].yyxy
mul r3.xy, r1.xyxx, r3.xyxx
mad r3.xy, r3.xyxx, r3.zwzz, r2.zwzz
mad r0.z, -r1.y, r3.w, l(1.000000)
mad r4.z, -r0.z, cb0[15].y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.z, r3.xyxx, t2.yzxw, s0
mul r0.z, r0.z, cb0[9].y
lt r0.z, v2.w, r0.z
and r0.z, r0.z, l(0x3f800000)
mul r1.z, r1.x, l(0.150000)
mul r1.xy, r1.xyxx, cb0[15].xyxx
mul r4.x, r3.z, r1.z
mad r3.xy, r4.xzxx, r0.zzzz, r2.zwzz
sample_d_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t3.xyzw, s2, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r3.w, r3.w
mul r0.z, r0.z, l(32.000000)
mul r3.xyz, r0.zzzz, r3.xyzx
div r3.xyz, r3.xyzx, cb2[2].wwww
mad r2.xy, r1.xyxx, l(0.098500, 0.098500, 0.000000, 0.000000), r2.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.z, r2.xyxx, t2.yzxw, s0
mul r4.z, r0.z, cb0[9].y
mad r5.xyzw, r1.xyxy, l(0.102500, 0.102500, 0.100000, 0.100000), r2.zwzw
mul r1.xy, r1.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.z, r5.zwzz, t2.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r1.z, r5.xyxx, t2.yzxw, s0
mul r4.y, r0.z, cb0[9].y
mul r4.x, r1.z, cb0[9].y
mad r0.z, r1.z, cb0[9].y, -r0.w
lt r4.xyz, v2.wwww, r4.xyzx
and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r2.xy, r1.xyxx, r4.xxxx
mad r2.xy, r2.xyxx, l(1.025000, 1.025000, 0.000000, 0.000000), r2.zwzz
sample_indexable(texture2d)(float,float,float,float) r5.x, r2.xyxx, t1.xyzw, s1
mul r2.xy, r1.xyxx, r4.zzzz
mad r1.xy, r1.xyxx, r4.yyyy, r2.zwzz
mad r0.z, r4.x, r0.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r5.y, r1.xyxx, t1.xyzw, s1
mad r1.xy, r2.xyxx, l(0.985000, 0.985000, 0.000000, 0.000000), r2.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r5.z, r1.xyxx, t1.xyzw, s1
div r1.xyz, r5.xyzx, cb2[2].wwww
add r1.xyz, r1.xyzx, -cb0[1].xyzx
dp3 r2.x, v3.xyzx, cb0[13].xyzx
add r0.z, r0.z, -r2.x
max r0.z, r0.z, l(0.000000)
mul r0.z, r0.z, -cb0[1].w
div r0.y, r0.z, r0.y
exp r0.y, r0.y
min r0.y, r0.y, l(1.000000)
mad r1.xyz, r0.yyyy, r1.xyzx, cb0[1].xyzx
add r2.xyz, -r1.xyzx, r3.xyzx
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, r0.x
mad_sat r0.x, r0.x, l(0.950000), l(0.050000)
add_sat r0.y, v2.w, l(-0.330000)
mul r0.y, r0.y, r1.w
mul r0.x, r0.y, r0.x
mad r1.xyz, r0.xxxx, r2.xyzx, r1.xyzx
mad_sat r0.x, v5.z, cb0[10].x, cb0[10].y
add r0.z, -r0.x, l(2.000000)
mul r0.x, r0.z, r0.x
mad r2.xyz, r0.xxxx, cb0[5].xyzx, cb0[14].xyzx
dp3 r0.x, -v3.xyzx, -v3.xyzx
rsq r0.z, r0.x
sqrt r0.x, r0.x
mul r3.xyz, r0.zzzz, -v3.xyzx
dp3 r0.z, r3.xyzx, cb0[2].xyzx
mad r0.z, r0.z, -cb0[10].z, cb0[10].z
exp r0.z, r0.z
mul_sat r1.w, r0.x, cb0[7].w
log r1.w, r1.w
mul r1.w, r1.w, cb0[10].w
exp r1.w, r1.w
mul r0.z, r0.z, r1.w
mul r3.xyz, r0.zzzz, cb0[7].xyzx
mad_sat r4.xy, r0.wwww, cb0[11].xzxx, cb0[11].ywyy
mul r3.xyz, r3.xyzx, r4.xxxx
mad r2.xyz, r2.xyzx, r4.yyyy, r3.xyzx
mul r3.xyz, r2.xyzx, cb0[3].xxxx
mad r2.xyz, -r2.xyzx, cb0[3].xxxx, r2.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
add r2.xyz, -r1.xyzx, r2.xyzx
mad r0.yzw, r0.yyyy, r2.xxyz, r1.xxyz
add r1.xyz, -r0.yzwy, r1.xyzx
mul r1.w, -v3.z, cb0[8].x
mul r2.x, r1.w, l(1.442695)
exp r2.x, r2.x
add r2.x, r2.x, l(-1.000000)
div r2.x, r2.x, r1.w
lt r1.w, l(0.010000), |r1.w|
movc r1.w, r1.w, r2.x, l(1.000000)
mul r2.x, r0.x, cb0[8].y
mad_sat r0.x, r0.x, cb0[6].x, cb0[6].y
mul r1.w, r1.w, r2.x
exp r1.w, -r1.w
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
add r2.x, -r0.x, l(2.000000)
mul r0.x, r0.x, r2.x
mad r0.x, r0.x, cb0[6].z, cb0[6].w
mad r0.x, -r1.w, r0.x, l(1.000000)
max_sat r0.x, r0.x, cb0[8].w
mad r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
mul o0.xyz, r0.xyzx, cb2[2].wwww
mov o0.w, l(1.000000)
ret 
// Approximately 182 instruction slots used
