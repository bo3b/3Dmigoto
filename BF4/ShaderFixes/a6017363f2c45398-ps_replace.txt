// aa hud
cbuffer functionConstants : register(b0)
{
  float4 lightProbeShR : packoffset(c0);
  float4 lightProbeShG : packoffset(c1);
  float4 lightProbeShB : packoffset(c2);
  float4 lightProbeShO : packoffset(c3);
}

cbuffer viewConstants : register(b2)
{
  float1 time : packoffset(c0);
  float3 vc_pad0_ : packoffset(c0.y);
  float4 screenSize : packoffset(c1);
  float3 debugNonFiniteColor : packoffset(c2);
  float1 vc_pad2_ : packoffset(c2.w);
  float4x4 viewMatrix : packoffset(c3);
  float4x4 projMatrix : packoffset(c7);
  float4x4 viewProjMatrix : packoffset(c11);
  float4x4 crViewProjMatrix : packoffset(c15);
  float4 projectionKxKyKzKw : packoffset(c19);
  float3 cameraPos : packoffset(c20);
  float1 vc_pad8_ : packoffset(c20.w);
  float3 transparentStartAndSlopeAndClamp : packoffset(c21);
  float1 vc_pad9_ : packoffset(c21.w);
  float4 transparentCurve : packoffset(c22);
}
SamplerState sampler0_s : register(s0);
Texture2D<float4> texture_Texture : register(t1);
Texture2D<float4> texture_Texture8 : register(t2);
Texture2D<float4> texture_Texture2 : register(t3);
Texture2D<float4> texture_Texture1 : register(t4);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = texture_Texture1.Sample(sampler0_s, v5.zw).xyw;
  r0.x = r0.x * r0.z;
  r0.xy = r0.xy * float2(2,2) + float2(-1,-1);
  r0.w = dot(r0.xy, r0.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r0.z = sqrt(r0.w);
  r1.x = dot(r0.xyz, v2.xyz);
  r1.y = dot(r0.xyz, v3.xyz);
  r1.z = dot(r0.xyz, v4.xyz);
  r0.x = dot(r1.xyz, r1.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = r1.xyz * r0.xxx;
  o0.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.w = 0.5;
  r1.x = 250 * time;
  r1.x = frac(r1.x);
  r1.x = r1.x * 2 + -1;
  r1.x = 0.0199999996 * abs(r1.x);
  r1.yzw = texture_Texture2.Sample(sampler0_s, v5.xy).xyz;
  r1.yzw = float3(10,10,10) * r1.yzw;
  r1.xyz = r1.yzw * r1.xxx;
  r2.xy = float2(8,8) * v5.xy;
  r2.xyz = texture_Texture8.Sample(sampler0_s, r2.xy).xyz;
  r3.xyz = texture_Texture.Sample(sampler0_s, v5.xy).xyz;
  r1.xyz = r3.xyz * r2.xyz + r1.xyz;
  r1.w = 0.100000001 * r1.x;
  o1.xyz = sqrt(r1.xyz);
  r1.xyz = cameraPos.xyz + -v1.xyz;
  r2.x = dot(r1.xyz, r1.xyz);
  r2.x = rsqrt(r2.x);
  r1.xyz = r2.xxx * r1.xyz;
  r1.x = dot(r0.xyz, r1.xyz);
  r1.x = 1.00100005 + -r1.x;
  r1.y = r1.x * r1.x;
  r1.x = saturate(r1.x * r1.y);
  r1.x = r1.x * 0.399999976 + 0.600000024;
  r1.x = r1.w * r1.x;
  o1.w = sqrt(r1.x);
  r0.w = 1;
  o2.x = dot(r0.xyzw, lightProbeShO.xyzw);
  o2.yzw = float3(0,0,0);
  r1.x = dot(r0.xyzw, lightProbeShR.xyzw);
  r1.y = dot(r0.xyzw, lightProbeShG.xyzw);
  r1.z = dot(r0.xyzw, lightProbeShB.xyzw);
  o3.xyz = max(float3(0,0,0), r1.xyz);
  o3.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//   using 3Dmigoto v1.2.6 on Mon Oct 26 07:08:41 2015
//
//
// Buffer Definitions: 
//
// cbuffer functionConstants
// {
//
//   float4 lightProbeShR;              // Offset:    0 Size:    16
//   float4 lightProbeShG;              // Offset:   16 Size:    16
//   float4 lightProbeShB;              // Offset:   32 Size:    16
//   float4 lightProbeShO;              // Offset:   48 Size:    16
//
// }
//
// cbuffer viewConstants
// {
//
//   float1 time;                       // Offset:    0 Size:     4
//   float3 vc_pad0_;                   // Offset:    4 Size:    12 [unused]
//   float4 screenSize;                 // Offset:   16 Size:    16 [unused]
//   float3 debugNonFiniteColor;        // Offset:   32 Size:    12 [unused]
//   float1 vc_pad2_;                   // Offset:   44 Size:     4 [unused]
//   float4x4 viewMatrix;               // Offset:   48 Size:    64 [unused]
//   float4x4 projMatrix;               // Offset:  112 Size:    64 [unused]
//   float4x4 viewProjMatrix;           // Offset:  176 Size:    64 [unused]
//   float4x4 crViewProjMatrix;         // Offset:  240 Size:    64 [unused]
//   float4 projectionKxKyKzKw;         // Offset:  304 Size:    16 [unused]
//   float3 cameraPos;                  // Offset:  320 Size:    12
//   float1 vc_pad8_;                   // Offset:  332 Size:     4 [unused]
//   float3 transparentStartAndSlopeAndClamp;// Offset:  336 Size:    12 [unused]
//   float1 vc_pad9_;                   // Offset:  348 Size:     4 [unused]
//   float4 transparentCurve;           // Offset:  352 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler0                          sampler      NA          NA    0        1
// texture_Texture                   texture  float4          2d    1        1
// texture_Texture8                  texture  float4          2d    2        1
// texture_Texture2                  texture  float4          2d    3        1
// texture_Texture1                  texture  float4          2d    4        1
// functionConstants                 cbuffer      NA          NA    0        1
// viewConstants                     cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v5.zwzz, t4.xywz, s0
mul r0.x, r0.z, r0.x
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r0.z, r0.w
dp3 r1.x, r0.xyzx, v2.xyzx
dp3 r1.y, r0.xyzx, v3.xyzx
dp3 r1.z, r0.xyzx, v4.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, l(0.500000)
mul r1.x, cb2[0].x, l(250.000000)
frc r1.x, r1.x
mad r1.x, r1.x, l(2.000000), l(-1.000000)
mul r1.x, |r1.x|, l(0.020000)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v5.xyxx, t3.wxyz, s0
mul r1.yzw, r1.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
mul r1.xyz, r1.xxxx, r1.yzwy
mul r2.xy, v5.xyxx, l(8.000000, 8.000000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t2.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t1.xyzw, s0
mad r1.xyz, r3.xyzx, r2.xyzx, r1.xyzx
mul r1.w, r1.x, l(0.100000)
sqrt o1.xyz, r1.xyzx
add r1.xyz, -v1.xyzx, cb2[20].xyzx
dp3 r2.x, r1.xyzx, r1.xyzx
rsq r2.x, r2.x
mul r1.xyz, r1.xyzx, r2.xxxx
dp3 r1.x, r0.xyzx, r1.xyzx
add r1.x, -r1.x, l(1.001000)
mul r1.y, r1.x, r1.x
mul_sat r1.x, r1.y, r1.x
mad r1.x, r1.x, l(0.399999976), l(0.600000)
mul r1.x, r1.x, r1.w
sqrt o1.w, r1.x
mov r0.w, l(1.000000)
dp4 o2.x, r0.xyzw, cb0[3].xyzw
mov o2.yzw, l(0,0,0,0)
dp4 r1.x, r0.xyzw, cb0[0].xyzw
dp4 r1.y, r0.xyzw, cb0[1].xyzw
dp4 r1.z, r0.xyzw, cb0[2].xyzw
max o3.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o3.w, l(0)
ret 
// Approximately 48 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
