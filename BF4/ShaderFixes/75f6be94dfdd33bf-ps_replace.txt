// water
cbuffer functionConstants : register(b0)
{
  float3 outdoorLightDir : packoffset(c0);
  float1 fc_pad0 : packoffset(c0.w);
  float3 outdoorLightHemisphereDir : packoffset(c1);
  float1 fc_pad1 : packoffset(c1.w);
  float3 outdoorLightTopColor : packoffset(c2);
  float1 fc_pad2 : packoffset(c2.w);
  float3 outdoorLightBottomColor : packoffset(c3);
  float1 fc_pad3 : packoffset(c3.w);
  float3 outdoorLightKeyColor : packoffset(c4);
  float1 fc_pad4 : packoffset(c4.w);
  float4 outdoorLightKeySpecularColorAndHemisphereVisibility : packoffset(c5);
  float4 outdoorLightSkyEnvmap8BitTexInvScale : packoffset(c6);
  float4 outdoorLightCustomEnvmapScaleAmbient : packoffset(c7);
  float4 outdoorLightEnvmapsMipmapCount : packoffset(c8);
  float4 lightProbeShR : packoffset(c9);
  float4 lightProbeShG : packoffset(c10);
  float4 lightProbeShB : packoffset(c11);
  float4 lightProbeShO : packoffset(c12);
}

cbuffer viewConstants : register(b2)
{
  float1 time : packoffset(c0);
  float3 vc_pad0_ : packoffset(c0.y);
  float4 screenSize : packoffset(c1);
  float3 debugNonFiniteColor : packoffset(c2);
  float1 vc_pad2_ : packoffset(c2.w);
  float4x4 viewMatrix : packoffset(c3);
  float4x4 projMatrix : packoffset(c7);
  float4x4 viewProjMatrix : packoffset(c11);
  float4x4 crViewProjMatrix : packoffset(c15);
  float4 projectionKxKyKzKw : packoffset(c19);
  float3 cameraPos : packoffset(c20);
  float1 vc_pad8_ : packoffset(c20.w);
  float3 transparentStartAndSlopeAndClamp : packoffset(c21);
  float1 vc_pad9_ : packoffset(c21.w);
  float4 transparentCurve : packoffset(c22);
}

cbuffer externalConstants : register(b1)
{
  float4 external_clipPlane0 : packoffset(c0);
  float4 external_clipPlane1 : packoffset(c1);
  float4 external_clipPlane2 : packoffset(c2);
  float4 external_clipPlane3 : packoffset(c3);
  float4 external_tileOriginAndDimension : packoffset(c4);
  float4 external_displacementScale : packoffset(c5);
  float3 external_waterOrigin : packoffset(c6);
  float1 vc_pad6 : packoffset(c6.w);
}
SamplerState sampler0_s : register(s0);
SamplerState sampler1_s : register(s1);
SamplerState sampler2_s : register(s2);
SamplerState sampler3_s : register(s3);
SamplerState sampler4_s : register(s4);
Texture2D<float4> texture_depthBufferTexture : register(t1);
TextureCube<float4> texture_outdoorLightCustomEnvmap : register(t2);
TextureCube<float4> texture_outdoorLightSkyEnvmap : register(t3);
Texture2D<float4> texture_Texture7 : register(t4);
Texture2D<float4> texture_Texture19 : register(t5);
Texture2D<float4> texture_Texture12 : register(t6);
Texture2D<float4> texture_gradientAndFoamMap : register(t7);
Texture2D<float4> texture_detailGradientAndFoamMap : register(t8);
Texture2D<float4> texture_Texture8 : register(t9);
Texture2D<float4> texture_interactiveFoamMap : register(t10);
Texture2D<float4> texture_Texture4 : register(t11);
TextureCube<float4> texture_Texture1 : register(t12);
Texture2D<float4> texture_Texture15 : register(t13);
TextureCube<float4> texture_Texture6 : register(t14);
Texture2D<float4> texture_planarReflectionHBlurTexture : register(t15);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v1.xyz;
  r0.w = 1;
  r1.x = dot(external_clipPlane0.xyzw, r0.xyzw);
  r1.x = r1.x < 0;
  if (r1.x != 0) discard;
  r1.x = dot(external_clipPlane1.xyzw, r0.xyzw);
  r1.x = r1.x < 0;
  if (r1.x != 0) discard;
  r1.x = dot(external_clipPlane2.xyzw, r0.xyzw);
  r0.x = dot(external_clipPlane3.xyzw, r0.xyzw);
  r0.x = r0.x < 0;
  if (r0.x != 0) discard;
  r0.x = r1.x < 0;
  if (r0.x != 0) discard;
  r0.xyzw = -external_tileOriginAndDimension.xyxy + v1.xzxz;
  r0.xyzw = -v3.xyxy + r0.xyzw;
  r1.xyzw = r0.zwzw / external_tileOriginAndDimension.wwzz;
  r0.xyzw = r0.xyzw * float4(2,2,2,2) + v1.xzxz;
  r2.xy = time * float2(-0.0500000007,0.0500000007) + r1.xy;
  r2.xyz = texture_Texture15.Sample(sampler3_s, r2.xy).xyw;
  r2.x = r2.x * r2.z;
  r2.zw = r2.xy * float2(2,2) + float2(-1,-1);
  r3.xy = r2.xy + r2.xy;
  r2.x = dot(r2.zw, r2.zw);
  r2.x = 1 + -r2.x;
  r2.x = max(0, r2.x);
  r3.z = sqrt(r2.x);
  r2.xyz = float3(-1,-1,-1) + r3.xyz;
  r3.xyz = -cameraPos.xyz + v1.xyz;
  r2.w = dot(r3.xyz, r3.xyz);
  r2.w = sqrt(r2.w);
  r2.w = 1500 + -r2.w;
  r2.w = saturate(0.000689655193 * r2.w);
  r3.x = r2.w * r2.w;
  r2.w = 1 + -r2.w;
  r3.y = r3.x * r3.x;
  r3.y = r3.y * r3.y;
  r4.xyz = texture_gradientAndFoamMap.Sample(sampler3_s, r1.zw).xyz;
  r5.xyz = float3(10,7.5,5) * r4.xxx;
  r5.x = saturate(r5.x);
  r3.zw = float2(-1,1) * v2.xy;
  r3.z = texture_interactiveFoamMap.Sample(sampler3_s, r3.zw).x;
  r6.xy = float2(100,1.5) * r3.zz;
  r3.w = saturate(r5.x * r3.y + r6.x);
  r4.w = max(0, r6.y);
  r4.w = min(0.150000006, r4.w);
  r2.xyz = r3.www * r2.xyz + float3(0,0,1);
  r6.xyzw = float4(-0.00100000005,0.00100000005,-0.0500000007,0.0250000004) * time;
  r5.xw = r1.xy * float2(2,2) + r6.zw;
  r6.xy = v1.xz * float2(0.00300000003,0.00300000003) + r6.xy;
  r6.xyz = texture_Texture19.Sample(sampler3_s, r6.xy).xyw;
  r7.xyz = texture_Texture15.Sample(sampler3_s, r5.xw).xyw;
  r7.x = r7.x * r7.z;
  r5.xw = r7.xy * float2(2,2) + float2(-1,-1);
  r7.xy = r7.xy + r7.xy;
  r5.x = dot(r5.xw, r5.xw);
  r5.x = 1 + -r5.x;
  r5.x = max(0, r5.x);
  r7.z = sqrt(r5.x);
  r7.xyz = float3(-1,-1,-1) + r7.xyz;
  r7.xyz = r3.www * r7.xyz + float3(0,0,1);
  r2.xyz = r7.xyz + r2.xyz;
  r7.xyz = r2.xyz + r2.xyz;
  r7.w = -r7.y;
  r6.x = r6.x * r6.z;
  r6.xy = r6.xy * float2(2,2) + float2(-1,-1);
  r2.z = dot(r6.xy, r6.xy);
  r2.z = 1 + -r2.z;
  r2.z = max(0, r2.z);
  r6.z = sqrt(r2.z);
  r6.xyz = float3(0.5,0.5,0.5) * r6.xyz;
  r6.w = -r6.y;
  r8.xyz = float3(0,1,0) + -r6.xzw;
  r0.xy = float2(0.000300000014,0.000300000014) * r0.xy;
  r0.zw = r0.zw * float2(0.00150000001,0.00150000001) + float2(0.215000004,0.433999985);
  r0.zw = texture_Texture12.Sample(sampler3_s, r0.zw).xz;
  r0.x = texture_Texture12.Sample(sampler3_s, r0.xy).y;
  r5.xw = float2(3,0.25) * r0.xx;
  r0.x = -r0.x * 0.25 + r0.z;
  r5.x = saturate(r5.x);
  r6.xyz = r5.xxx * r8.xyz + r6.xzw;
  r0.yz = texture_detailGradientAndFoamMap.Sample(sampler3_s, r1.xy).yz;
  r1.xyzw = float4(0.300000012,0.300000012,6,6) * r1.xyzw;
  r0.yz = float2(-0.5,-0.5) + r0.yz;
  r4.yz = float2(-0.5,-0.5) + r4.yz;
  r2.z = r4.x * r4.x;
  r3.w = saturate(v1.w);
  r4.x = 1 + -r3.w;
  r4.xy = r4.xx * r4.yz;
  r0.yz = r4.xy * external_displacementScale.yy + r0.yz;
  r4.xz = r0.yz * float2(5,5) + v2.zw;
  r4.y = 1;
  r0.y = dot(r4.xyz, r4.xyz);
  r8.w = rsqrt(r0.y);
  r9.xyz = r4.xyz * r8.www + -r6.xyz;
  r6.xyz = r3.yyy * r9.xyz + r6.xyz;
  r8.xz = r8.ww * r4.xz;
  r4.xyz = r8.xwz + r8.xwz;
  r0.y = saturate(-r8.z * 100 + 1);
  r7.xyz = r6.xyz + r7.xzw;
  r8.xy = screenSize.zw * v0.xy;
  r8.zw = r7.xz * float2(0.200000003,0.200000003) + r8.xy;
  r0.z = texture_depthBufferTexture.Sample(sampler0_s, r8.xy).x;
  r8.xyz = texture_planarReflectionHBlurTexture.Sample(sampler4_s, r8.zw).xyz;
  r8.xyz = float3(0.275000006,0.275000006,0.275000006) * r8.xyz;
  r5.x = saturate(r3.z * 0.150000006 + r5.y);
  r3.z = r3.z * r3.z;
  r3.z = 3 * r3.z;
  r3.z = min(1, r3.z);
  r0.x = r3.w * r0.x + r5.w;
  r5.y = r3.y * r3.y;
  r0.x = r5.x * r5.y + r0.x;
  r5.x = 0.0500000007 * v3.y;
  r5.x = saturate(-r5.x);
  r5.x = 10 * r5.x;
  r5.x = min(1, r5.x);
  r9.xyz = cameraPos.xyz + -v1.xyz;
  r5.y = dot(r9.xyz, r9.xyz);
  r5.y = rsqrt(r5.y);
  r10.xyz = r9.xyz * r5.yyy;
  r11.xyz = -r10.xyz;
  r12.xyz = r10.yyy * float3(0,2,0) + r11.xyz;
  r5.w = texture_Texture6.Sample(sampler3_s, r12.xyz).x;
  r5.w = r5.w + r5.w;
  r5.w = r5.w * r2.z;
  r2.z = r2.z * r2.z;
  r2.z = r2.z * 1000 + r4.w;
  r4.w = 100 * r5.w;
  r4.w = r4.w * r5.x;
  r0.x = r4.w * r3.x + r0.x;
  r3.x = -r3.x * r3.x + 1;
  r12.xyz = r0.xxx * float3(0.210999995,0.504000008,0.484000027) + float3(0.0759999976,0.128000006,0.143999994);
  r0.x = dot(r6.xyz, r10.xyz);
  r2.xy = r2.xy * float2(0.896000028,-0.896000028) + r6.xz;
  r2.xyw = float3(10,10,0.5) * r2.xyw;
  r0.x = 1.00100005 + -r0.x;
  r0.x = r0.x * r0.x;
  r0.x = r0.x * r0.x;
  r0.x = min(1, r0.x);
  r4.w = r0.x + r0.x;
  r5.x = dot(r11.xyz, r4.xyz);
  r5.x = r5.x + r5.x;
  r4.xyz = r4.xyz * -r5.xxx + r11.xyz;
  r4.x = texture_Texture1.Sample(sampler3_s, r4.xyz).w;
  r4.x = r4.x * r4.w;
  r4.x = 1 >= r4.x;
  r4.x = r4.x ? 0 : 1;
  r4.yz = v1.xz * float2(0.000650000002,0.000650000002) + float2(0.670000017,0.330000013);
  r4.yzw = texture_Texture7.Sample(sampler2_s, r4.yz).xyz;
  r6.xyz = r4.yzw * r4.yzw;
  r4.yzw = r4.yzw + r3.xxx;
  r4.yzw = saturate(float3(0.0500000007,0.0500000007,0.0500000007) + r4.yzw);
  r13.xyz = r6.xyz * r4.xxx;
  r13.xyz = r13.xyz * r0.yyy;
  r12.xyz = r13.xyz * float3(100,78.9369965,57.9550018) + r12.xyz;
  r8.xyz = r12.xyz * float3(0.5,0.5,0.5) + r8.xyz;
  r3.x = r0.x * r0.x;
  r0.x = 0.590624928 * r0.x;
  r12.xyz = r4.yzw * r0.xxx;
  r0.x = 5 * r3.x;
  r2.xy = r0.xx * r2.xy;
  r0.x = dot(r11.xxyy, r2.xxyy);
  r13.xy = r2.xy * -r0.xx;
  r11.xyz = texture_Texture1.Sample(sampler3_s, r11.xyz).xyz;
  r11.xyz = r11.xyz * r11.xyz;
  r13.z = 0;
  r9.xzw = -r9.xyz * r5.yyy + r13.xyz;
  r0.x = -r9.y * r5.y + 1.00100005;
  r0.x = r0.x * r0.x;
  r0.x = r0.x * r0.x;
  r0.x = min(1, r0.x);
  r2.x = texture_Texture1.Sample(sampler3_s, r9.xzw).w;
  r0.y = r2.x * r0.y;
  r5.xyw = r6.xyz * r0.yyy;
  r5.xyw = r5.xyw * float3(1.5,1.5,1.5) + r8.xyz;
  r1.xy = texture_Texture8.Sample(sampler3_s, r1.xy).xz;
  r0.y = texture_Texture8.Sample(sampler3_s, r1.zw).x;
  r0.y = r0.y * r1.x;
  r1.x = r1.y * r5.z;
  r1.x = r1.x * r0.y;
  r0.y = r2.z * r0.y;
  r0.y = 30 * r0.y;
  r0.y = r1.x * 12 + r0.y;
  r1.x = 0.5 * r0.w;
  r0.w = r0.w * 0.5 + 0.300000012;
  r1.yz = float2(0.200000003,0.200000003) * v1.xz;
  r1.y = texture_Texture8.Sample(sampler3_s, r1.yz).y;
  r1.y = r1.y + r1.y;
  r1.x = r1.x * r1.y;
  r0.w = r1.y * r0.w;
  r0.w = 30 * r0.w;
  r1.z = log2(r3.w);
  r1.z = 16 * r1.z;
  r1.z = exp2(r1.z);
  r1.w = 0.25 * r1.z;
  r1.z = 1 + -r1.z;
  r0.x = r1.z + r0.x;
  r0.x = min(1, r0.x);
  r0.w = r1.w * r0.w;
  r1.z = -0.0299999993 * time;
  r1.z = r3.w * 2 + r1.z;
  r1.w = -0.860000014 + r3.w;
  r1.w = 7.14285803 * r1.w;
  r1.w = max(0, r1.w);
  r2.xyz = texture_Texture4.Sample(sampler3_s, r1.zz).xyz;
  r2.xyz = float3(30,30,30) * r2.xyz;
  r2.xyz = r2.xyz * r1.xxx + r0.www;
  r0.w = r1.w * -2 + 3;
  r1.x = r1.w * r1.w;
  r0.w = r1.x * r0.w;
  r1.xzw = r0.www * r2.xyz;
  r1.xzw = r3.yyy * r0.yyy + r1.xzw;
  r0.y = v3.z / v3.w;
  r0.y = -projectionKxKyKzKw.z + r0.y;
  r0.y = projectionKxKyKzKw.w / r0.y;
  r0.y = r0.z + -r0.y;
  r0.y = saturate(4 * r0.y);
  r0.z = 1 + -r0.y;
  r0.x = r0.y * r0.x;
  r0.x = v4.x * r0.x;
  r0.y = r0.z * 2 + r3.z;
  r0.yzw = r0.yyy * r1.yyy + r1.xzw;
  r0.yzw = r0.yzw + r5.xyw;
  r1.xyz = r11.xyz * float3(1.5,1.5,1.5) + -r0.yzw;
  r0.yzw = r2.www * r1.xyz + r0.yzw;
  r1.x = dot(r7.xyz, r7.xyz);
  r1.x = rsqrt(r1.x);
  r1.xyz = r7.xyz * r1.xxx;
  r2.x = dot(r10.xyz, r1.xyz);
  r2.x = r2.x + r2.x;
  r2.xyz = r1.xyz * -r2.xxx + r10.xyz;
  r2.xyz = -r2.xyz;
  r3.xy = (int2)outdoorLightEnvmapsMipmapCount.yx;
  r3.xy = (int2)r3.xy + int2(-1,-1);
  r3.xy = (int2)r3.xy;
  r3.zw = trunc(outdoorLightEnvmapsMipmapCount.yx);
  r3.zw = float2(-10,-10) + r3.zw;
  r3.zw = max(float2(0,0), r3.zw);
  r3.xy = min(r3.zw, r3.xy);
  r2.w = texture_outdoorLightCustomEnvmap.SampleLevel(sampler1_s, r2.xyz, r3.x).x;
  r2.xyz = texture_outdoorLightSkyEnvmap.SampleLevel(sampler1_s, r2.xyz, r3.y).xyz;
  r2.w = outdoorLightCustomEnvmapScaleAmbient.x * r2.w;
  r1.w = 1;
  r3.x = dot(r1.xyzw, lightProbeShR.xyzw);
  r3.y = dot(r1.xyzw, lightProbeShG.xyzw);
  r3.z = dot(r1.xyzw, lightProbeShB.xyzw);
  r1.w = dot(r1.xyzw, lightProbeShO.xyzw);
  r1.x = dot(r1.xyz, outdoorLightHemisphereDir.xyz);
  r1.x = r1.x * 0.5 + 0.5;
  r3.xyz = max(float3(0,0,0), r3.xyz);
  r5.xyz = outdoorLightCustomEnvmapScaleAmbient.yyy + r3.xyz;
  r5.xyz = r5.xyz * r2.www;
  r2.xyz = r2.xyz * r1.www;
  r2.xyz = outdoorLightKeySpecularColorAndHemisphereVisibility.www * r2.xyz;
  r2.xyz = outdoorLightSkyEnvmap8BitTexInvScale.xxx * r2.xyz;
  r1.y = 1 + -r1.w;
  r2.xyz = r5.xyz * r1.yyy + r2.xyz;
  r2.xyz = r12.xyz * r2.xyz;
  r5.xyz = -outdoorLightBottomColor.xyz + outdoorLightTopColor.xyz;
  r1.xyz = r1.xxx * r5.xyz + outdoorLightBottomColor.xyz;
  r1.xyz = r1.xyz * r1.www + r3.xyz;
  r1.xyz = r1.xyz * float3(0.0219999999,0.0289999992,0.0329999998) + r2.xyz;
  r0.yzw = r4.yzw * r0.yzw + r1.xyz;
  o0.xyz = r0.yzw * r0.xxx;
  o0.w = r0.x;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//   using 3Dmigoto v1.2.6 on Sun Oct 25 09:41:43 2015
//
//
// Buffer Definitions: 
//
// cbuffer functionConstants
// {
//
//   float3 outdoorLightDir;            // Offset:    0 Size:    12 [unused]
//   float1 fc_pad0;                    // Offset:   12 Size:     4 [unused]
//   float3 outdoorLightHemisphereDir;  // Offset:   16 Size:    12
//   float1 fc_pad1;                    // Offset:   28 Size:     4 [unused]
//   float3 outdoorLightTopColor;       // Offset:   32 Size:    12
//   float1 fc_pad2;                    // Offset:   44 Size:     4 [unused]
//   float3 outdoorLightBottomColor;    // Offset:   48 Size:    12
//   float1 fc_pad3;                    // Offset:   60 Size:     4 [unused]
//   float3 outdoorLightKeyColor;       // Offset:   64 Size:    12 [unused]
//   float1 fc_pad4;                    // Offset:   76 Size:     4 [unused]
//   float4 outdoorLightKeySpecularColorAndHemisphereVisibility;// Offset:   80 Size:    16
//   float4 outdoorLightSkyEnvmap8BitTexInvScale;// Offset:   96 Size:    16
//   float4 outdoorLightCustomEnvmapScaleAmbient;// Offset:  112 Size:    16
//   float4 outdoorLightEnvmapsMipmapCount;// Offset:  128 Size:    16
//   float4 lightProbeShR;              // Offset:  144 Size:    16
//   float4 lightProbeShG;              // Offset:  160 Size:    16
//   float4 lightProbeShB;              // Offset:  176 Size:    16
//   float4 lightProbeShO;              // Offset:  192 Size:    16
//
// }
//
// cbuffer viewConstants
// {
//
//   float1 time;                       // Offset:    0 Size:     4
//   float3 vc_pad0_;                   // Offset:    4 Size:    12 [unused]
//   float4 screenSize;                 // Offset:   16 Size:    16
//   float3 debugNonFiniteColor;        // Offset:   32 Size:    12 [unused]
//   float1 vc_pad2_;                   // Offset:   44 Size:     4 [unused]
//   float4x4 viewMatrix;               // Offset:   48 Size:    64 [unused]
//   float4x4 projMatrix;               // Offset:  112 Size:    64 [unused]
//   float4x4 viewProjMatrix;           // Offset:  176 Size:    64 [unused]
//   float4x4 crViewProjMatrix;         // Offset:  240 Size:    64 [unused]
//   float4 projectionKxKyKzKw;         // Offset:  304 Size:    16
//   float3 cameraPos;                  // Offset:  320 Size:    12
//   float1 vc_pad8_;                   // Offset:  332 Size:     4 [unused]
//   float3 transparentStartAndSlopeAndClamp;// Offset:  336 Size:    12 [unused]
//   float1 vc_pad9_;                   // Offset:  348 Size:     4 [unused]
//   float4 transparentCurve;           // Offset:  352 Size:    16 [unused]
//
// }
//
// cbuffer externalConstants
// {
//
//   float4 external_clipPlane0;        // Offset:    0 Size:    16
//   float4 external_clipPlane1;        // Offset:   16 Size:    16
//   float4 external_clipPlane2;        // Offset:   32 Size:    16
//   float4 external_clipPlane3;        // Offset:   48 Size:    16
//   float4 external_tileOriginAndDimension;// Offset:   64 Size:    16
//   float4 external_displacementScale; // Offset:   80 Size:    16
//   float3 external_waterOrigin;       // Offset:   96 Size:    12 [unused]
//   float1 vc_pad6;                    // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler0                          sampler      NA          NA    0        1
// sampler1                          sampler      NA          NA    1        1
// sampler2                          sampler      NA          NA    2        1
// sampler3                          sampler      NA          NA    3        1
// sampler4                          sampler      NA          NA    4        1
// texture_depthBufferTexture        texture  float4          2d    1        1
// texture_outdoorLightCustomEnvmap    texture  float4        cube    2        1
// texture_outdoorLightSkyEnvmap     texture  float4        cube    3        1
// texture_Texture7                  texture  float4          2d    4        1
// texture_Texture19                 texture  float4          2d    5        1
// texture_Texture12                 texture  float4          2d    6        1
// texture_gradientAndFoamMap        texture  float4          2d    7        1
// texture_detailGradientAndFoamMap    texture  float4          2d    8        1
// texture_Texture8                  texture  float4          2d    9        1
// texture_interactiveFoamMap        texture  float4          2d   10        1
// texture_Texture4                  texture  float4          2d   11        1
// texture_Texture1                  texture  float4        cube   12        1
// texture_Texture15                 texture  float4          2d   13        1
// texture_Texture6                  texture  float4        cube   14        1
// texture_planarReflectionHBlurTexture    texture  float4          2d   15        1
// functionConstants                 cbuffer      NA          NA    0        1
// externalConstants                 cbuffer      NA          NA    1        1
// viewConstants                     cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texturecube (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texturecube (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.x
dcl_output o0.xyzw
dcl_temps 14
mov r0.xyz, v1.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, cb1[0].xyzw, r0.xyzw
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
dp4 r1.x, cb1[1].xyzw, r0.xyzw
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
dp4 r1.x, cb1[2].xyzw, r0.xyzw
dp4 r0.x, cb1[3].xyzw, r0.xyzw
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
lt r0.x, r1.x, l(0.000000)
discard_nz r0.x
add r0.xyzw, v1.xzxz, -cb1[4].xyxy
add r0.xyzw, r0.xyzw, -v3.xyxy
div r1.xyzw, r0.zwzw, cb1[4].wwzz
mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), v1.xzxz
mad r2.xy, cb2[0].xxxx, l(-0.050000, 0.050000, 0.000000, 0.000000), r1.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t13.xywz, s3
mul r2.x, r2.z, r2.x
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
add r3.xy, r2.xyxx, r2.xyxx
dp2 r2.x, r2.zwzz, r2.zwzz
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r3.z, r2.x
add r2.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
add r3.xyz, v1.xyzx, -cb2[20].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
sqrt r2.w, r2.w
add r2.w, -r2.w, l(1500.000000)
mul_sat r2.w, r2.w, l(0.000689655193)
mul r3.x, r2.w, r2.w
add r2.w, -r2.w, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.zwzz, t7.xyzw, s3
mul r5.xyz, r4.xxxx, l(10.000000, 7.500000, 5.000000, 0.000000)
mov_sat r5.x, r5.x
mul r3.zw, v2.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000)
sample_indexable(texture2d)(float,float,float,float) r3.z, r3.zwzz, t10.yzxw, s3
mul r6.xy, r3.zzzz, l(100.000000, 1.500000, 0.000000, 0.000000)
mad_sat r3.w, r5.x, r3.y, r6.x
max r4.w, r6.y, l(0.000000)
min r4.w, r4.w, l(0.150000)
mad r2.xyz, r3.wwww, r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r6.xyzw, cb2[0].xxxx, l(-0.001000, 0.001000, -0.050000, 0.025000)
mad r5.xw, r1.xxxy, l(2.000000, 0.000000, 0.000000, 2.000000), r6.zzzw
mad r6.xy, v1.xzxx, l(0.003000, 0.003000, 0.000000, 0.000000), r6.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t5.xywz, s3
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.xwxx, t13.xywz, s3
mul r7.x, r7.z, r7.x
mad r5.xw, r7.xxxy, l(2.000000, 0.000000, 0.000000, 2.000000), l(-1.000000, 0.000000, 0.000000, -1.000000)
add r7.xy, r7.xyxx, r7.xyxx
dp2 r5.x, r5.xwxx, r5.xwxx
add r5.x, -r5.x, l(1.000000)
max r5.x, r5.x, l(0.000000)
sqrt r7.z, r5.x
add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r7.xyz, r3.wwww, r7.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r2.xyz, r2.xyzx, r7.xyzx
add r7.xyz, r2.xyzx, r2.xyzx
mov r7.w, -r7.y
mul r6.x, r6.z, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.z, r6.xyxx, r6.xyxx
add r2.z, -r2.z, l(1.000000)
max r2.z, r2.z, l(0.000000)
sqrt r6.z, r2.z
mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mov r6.w, -r6.y
add r8.xyz, -r6.xzwx, l(0.000000, 1.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, l(0.000300, 0.000300, 0.000000, 0.000000)
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.001500, 0.001500), l(0.000000, 0.000000, 0.215000, 0.434000)
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t6.ywxz, s3
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t6.yxzw, s3
mul r5.xw, r0.xxxx, l(3.000000, 0.000000, 0.000000, 0.250000)
mad r0.x, -r0.x, l(0.250000), r0.z
mov_sat r5.x, r5.x
mad r6.xyz, r5.xxxx, r8.xyzx, r6.xzwx
sample_indexable(texture2d)(float,float,float,float) r0.yz, r1.xyxx, t8.xyzw, s3
mul r1.xyzw, r1.xyzw, l(0.300000, 0.300000, 6.000000, 6.000000)
add r0.yz, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
add r4.yz, r4.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r2.z, r4.x, r4.x
mov_sat r3.w, v1.w
add r4.x, -r3.w, l(1.000000)
mul r4.xy, r4.yzyy, r4.xxxx
mad r0.yz, r4.xxyx, cb1[5].yyyy, r0.yyzy
mad r4.xz, r0.yyzy, l(5.000000, 0.000000, 5.000000, 0.000000), v2.zzwz
mov r4.y, l(1.000000)
dp3 r0.y, r4.xyzx, r4.xyzx
rsq r8.w, r0.y
mad r9.xyz, r4.xyzx, r8.wwww, -r6.xyzx
mad r6.xyz, r3.yyyy, r9.xyzx, r6.xyzx
mul r8.xz, r4.xxzx, r8.wwww
add r4.xyz, r8.xwzx, r8.xwzx
mad_sat r0.y, -r8.z, l(100.000000), l(1.000000)
add r7.xyz, r7.xzwx, r6.xyzx
mul r8.xy, v0.xyxx, cb2[1].zwzz
mad r8.zw, r7.xxxz, l(0.000000, 0.000000, 0.200000, 0.200000), r8.xxxy
sample_indexable(texture2d)(float,float,float,float) r0.z, r8.xyxx, t1.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.zwzz, t15.xyzw, s4
mul r8.xyz, r8.xyzx, l(0.275000, 0.275000, 0.275000, 0.000000)
mad_sat r5.x, r3.z, l(0.150000), r5.y
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, l(3.000000)
min r3.z, r3.z, l(1.000000)
mad r0.x, r3.w, r0.x, r5.w
mul r5.y, r3.y, r3.y
mad r0.x, r5.x, r5.y, r0.x
mul r5.x, v3.y, l(0.050000)
mov_sat r5.x, -r5.x
mul r5.x, r5.x, l(10.000000)
min r5.x, r5.x, l(1.000000)
add r9.xyz, -v1.xyzx, cb2[20].xyzx
dp3 r5.y, r9.xyzx, r9.xyzx
rsq r5.y, r5.y
mul r10.xyz, r5.yyyy, r9.xyzx
mov r11.xyz, -r10.xyzx
mad r12.xyz, r10.yyyy, l(0.000000, 2.000000, 0.000000, 0.000000), r11.xyzx
sample_indexable(texturecube)(float,float,float,float) r5.w, r12.xyzx, t14.yzwx, s3
add r5.w, r5.w, r5.w
mul r5.w, r2.z, r5.w
mul r2.z, r2.z, r2.z
mad r2.z, r2.z, l(1000.000000), r4.w
mul r4.w, r5.w, l(100.000000)
mul r4.w, r5.x, r4.w
mad r0.x, r4.w, r3.x, r0.x
mad r3.x, -r3.x, r3.x, l(1.000000)
mad r12.xyz, r0.xxxx, l(0.211000, 0.504000, 0.484000027, 0.000000), l(0.076000, 0.128000, 0.144000, 0.000000)
dp3 r0.x, r6.xyzx, r10.xyzx
mad r2.xy, r2.xyxx, l(0.896000, -0.896000, 0.000000, 0.000000), r6.xzxx
mul r2.xyw, r2.xyxw, l(10.000000, 10.000000, 0.000000, 0.500000)
add r0.x, -r0.x, l(1.001000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
min r0.x, r0.x, l(1.000000)
add r4.w, r0.x, r0.x
dp3 r5.x, r11.xyzx, r4.xyzx
add r5.x, r5.x, r5.x
mad r4.xyz, r4.xyzx, -r5.xxxx, r11.xyzx
sample_indexable(texturecube)(float,float,float,float) r4.x, r4.xyzx, t12.wxyz, s3
mul r4.x, r4.w, r4.x
ge r4.x, l(1.000000), r4.x
movc r4.x, r4.x, l(0), l(1.000000)
mad r4.yz, v1.xxzx, l(0.000000, 0.000650, 0.000650, 0.000000), l(0.000000, 0.670000, 0.330000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r4.yzw, r4.yzyy, t4.wxyz, s2
mul r6.xyz, r4.yzwy, r4.yzwy
add r4.yzw, r3.xxxx, r4.yyzw
add_sat r4.yzw, r4.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
mul r13.xyz, r4.xxxx, r6.xyzx
mul r13.xyz, r0.yyyy, r13.xyzx
mad r12.xyz, r13.xyzx, l(100.000000, 78.936996, 57.955002, 0.000000), r12.xyzx
mad r8.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r8.xyzx
mul r3.x, r0.x, r0.x
mul r0.x, r0.x, l(0.590624928)
mul r12.xyz, r0.xxxx, r4.yzwy
mul r0.x, r3.x, l(5.000000)
mul r2.xy, r2.xyxx, r0.xxxx
dp4 r0.x, r11.xxyy, r2.xxyy
mul r13.xy, -r0.xxxx, r2.xyxx
sample_indexable(texturecube)(float,float,float,float) r11.xyz, r11.xyzx, t12.xyzw, s3
mul r11.xyz, r11.xyzx, r11.xyzx
mov r13.z, l(0)
mad r9.xzw, -r9.xxyz, r5.yyyy, r13.xxyz
mad r0.x, -r9.y, r5.y, l(1.001000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
min r0.x, r0.x, l(1.000000)
sample_indexable(texturecube)(float,float,float,float) r2.x, r9.xzwx, t12.wxyz, s3
mul r0.y, r0.y, r2.x
mul r5.xyw, r0.yyyy, r6.xyxz
mad r5.xyw, r5.xyxw, l(1.500000, 1.500000, 0.000000, 1.500000), r8.xyxz
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t9.xzyw, s3
sample_indexable(texture2d)(float,float,float,float) r0.y, r1.zwzz, t9.yxzw, s3
mul r0.y, r1.x, r0.y
mul r1.x, r5.z, r1.y
mul r1.x, r0.y, r1.x
mul r0.y, r0.y, r2.z
mul r0.y, r0.y, l(30.000000)
mad r0.y, r1.x, l(12.000000), r0.y
mul r1.x, r0.w, l(0.500000)
mad r0.w, r0.w, l(0.500000), l(0.300000)
mul r1.yz, v1.xxzx, l(0.000000, 0.200000, 0.200000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t9.xyzw, s3
add r1.y, r1.y, r1.y
mul r1.x, r1.y, r1.x
mul r0.w, r0.w, r1.y
mul r0.w, r0.w, l(30.000000)
log r1.z, r3.w
mul r1.z, r1.z, l(16.000000)
exp r1.z, r1.z
mul r1.w, r1.z, l(0.250000)
add r1.z, -r1.z, l(1.000000)
add r0.x, r0.x, r1.z
min r0.x, r0.x, l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.z, cb2[0].x, l(-0.030000)
mad r1.z, r3.w, l(2.000000), r1.z
add r1.w, r3.w, l(-0.860000)
mul r1.w, r1.w, l(7.142858)
max r1.w, r1.w, l(0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.zzzz, t11.xyzw, s3
mul r2.xyz, r2.xyzx, l(30.000000, 30.000000, 30.000000, 0.000000)
mad r2.xyz, r2.xyzx, r1.xxxx, r0.wwww
mad r0.w, r1.w, l(-2.000000), l(3.000000)
mul r1.x, r1.w, r1.w
mul r0.w, r0.w, r1.x
mul r1.xzw, r2.xxyz, r0.wwww
mad r1.xzw, r3.yyyy, r0.yyyy, r1.xxzw
div r0.y, v3.z, v3.w
add r0.y, r0.y, -cb2[19].z
div r0.y, cb2[19].w, r0.y
add r0.y, -r0.y, r0.z
mul_sat r0.y, r0.y, l(4.000000)
add r0.z, -r0.y, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r0.x, v4.x
mad r0.y, r0.z, l(2.000000), r3.z
mad r0.yzw, r0.yyyy, r1.yyyy, r1.xxzw
add r0.yzw, r5.xxyw, r0.yyzw
mad r1.xyz, r11.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000), -r0.yzwy
mad r0.yzw, r2.wwww, r1.xxyz, r0.yyzw
dp3 r1.x, r7.xyzx, r7.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r7.xyzx
dp3 r2.x, r10.xyzx, r1.xyzx
add r2.x, r2.x, r2.x
mad r2.xyz, r1.xyzx, -r2.xxxx, r10.xyzx
mov r2.xyz, -r2.xyzx
ftoi r3.xy, cb0[8].yxyy
iadd r3.xy, r3.xyxx, l(-1, -1, 0, 0)
itof r3.xy, r3.xyxx
round_z r3.zw, cb0[8].yyyx
add r3.zw, r3.zzzw, l(0.000000, 0.000000, -10.000000, -10.000000)
max r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xy, r3.xyxx, r3.zwzz
sample_l_indexable(texturecube)(float,float,float,float) r2.w, r2.xyzx, t2.yzwx, s1, r3.x
sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t3.xyzw, s1, r3.y
mul r2.w, r2.w, cb0[7].x
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[9].xyzw
dp4 r3.y, r1.xyzw, cb0[10].xyzw
dp4 r3.z, r1.xyzw, cb0[11].xyzw
dp4 r1.w, r1.xyzw, cb0[12].xyzw
dp3 r1.x, r1.xyzx, cb0[1].xyzx
mad r1.x, r1.x, l(0.500000), l(0.500000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r5.xyz, r3.xyzx, cb0[7].yyyy
mul r5.xyz, r2.wwww, r5.xyzx
mul r2.xyz, r1.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[5].wwww
mul r2.xyz, r2.xyzx, cb0[6].xxxx
add r1.y, -r1.w, l(1.000000)
mad r2.xyz, r5.xyzx, r1.yyyy, r2.xyzx
mul r2.xyz, r2.xyzx, r12.xyzx
add r5.xyz, cb0[2].xyzx, -cb0[3].xyzx
mad r1.xyz, r1.xxxx, r5.xyzx, cb0[3].xyzx
mad r1.xyz, r1.xyzx, r1.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, l(0.022000, 0.029000, 0.033000, 0.000000), r2.xyzx
mad r0.yzw, r4.yyzw, r0.yyzw, r1.xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, r0.x
ret 
// Approximately 266 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
