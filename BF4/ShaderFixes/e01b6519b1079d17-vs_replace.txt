//hud multi
cbuffer _Globals : register(b0)
{
  float2 invPixelSize : packoffset(c0);
  float4x4 mvp : packoffset(c1);
  float4 texgen0 : packoffset(c5);
  float4 texgen1 : packoffset(c6);
  float4 texgen2 : packoffset(c7);
  float4 texgen3 : packoffset(c8);
  float4 g_color : packoffset(c9);
  float4 cxmul : packoffset(c10);
  float4 cxadd : packoffset(c11);
  float4 filterTexScale : packoffset(c12);
  float4 filterOffset : packoffset(c13);
  float4 filterShadowColor : packoffset(c14);
  float4 filterShadowTexScale : packoffset(c15);
  float4 aaCircleData : packoffset(c16);
  float4 aaLinePlane0 : packoffset(c17);
  float4 aaLinePlane1 : packoffset(c18);
  float4 aaLinePlane2 : packoffset(c19);
  float4 aaLinePlane3 : packoffset(c20);
  float4 distanceFieldParams0 : packoffset(c21);
  float4 distanceFieldParams1 : packoffset(c22);
  float4 distanceFieldParams2 : packoffset(c23);
  float4 cctvDistortParams0 : packoffset(c24);
  float4 cctvDistortParams1 : packoffset(c25);
  float4 kinectTrackingParams : packoffset(c26);
  float4 combatAreaSecondColor : packoffset(c27);
  float4 combatAreaParams : packoffset(c28);
  float4 postProcessDistortParams0 : packoffset(c29);
  float4 postProcessDistortParams1 : packoffset(c30);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  float4 v5 : TEXCOORD5,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float2 o2 : TEXCOORD1,
  out float2 p2 : TEXCOORD2,
  out float2 o3 : TEXCOORD3,
  out float2 p3 : TEXCOORD4)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v0.xyz;
  r0.w = 1;
  o0.x = dot(r0.xyzw, mvp._m00_m10_m20_m30);
  o0.y = dot(r0.xyzw, mvp._m01_m11_m21_m31);
  o0.z = dot(r0.xyzw, mvp._m02_m12_m22_m32);
  o0.w = dot(r0.xyzw, mvp._m03_m13_m23_m33);
  
  float4 stereo = StereoParams.Load(0);
  float4 iniParams = IniParams.Load(0);
  if (o0.w != 1)
  {
  o0.x -= stereo.x * (o0.w - stereo.y) * (1-iniParams.y);
  }
  else
  o0.x += stereo.x * iniParams.x;
  
  o1.xyzw = v5.xyzw;
  o2.xy = v1.xy;
  p2.xy = v2.xy;
  o3.xy = v3.xy;
  p3.xy = v4.xy;  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//   using 3Dmigoto v1.2.6 on Wed Oct 21 13:03:55 2015
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float2 invPixelSize;               // Offset:    0 Size:     8 [unused]
//   float4x4 mvp;                      // Offset:   16 Size:    64
//   float4 texgen0;                    // Offset:   80 Size:    16 [unused]
//   float4 texgen1;                    // Offset:   96 Size:    16 [unused]
//   float4 texgen2;                    // Offset:  112 Size:    16 [unused]
//   float4 texgen3;                    // Offset:  128 Size:    16 [unused]
//   float4 g_color;                    // Offset:  144 Size:    16 [unused]
//   float4 cxmul;                      // Offset:  160 Size:    16 [unused]
//   float4 cxadd;                      // Offset:  176 Size:    16 [unused]
//   float4 filterTexScale;             // Offset:  192 Size:    16 [unused]
//   float4 filterOffset;               // Offset:  208 Size:    16 [unused]
//   float4 filterShadowColor;          // Offset:  224 Size:    16 [unused]
//   float4 filterShadowTexScale;       // Offset:  240 Size:    16 [unused]
//   float4 aaCircleData;               // Offset:  256 Size:    16 [unused]
//   float4 aaLinePlane0;               // Offset:  272 Size:    16 [unused]
//   float4 aaLinePlane1;               // Offset:  288 Size:    16 [unused]
//   float4 aaLinePlane2;               // Offset:  304 Size:    16 [unused]
//   float4 aaLinePlane3;               // Offset:  320 Size:    16 [unused]
//   float4 distanceFieldParams0;       // Offset:  336 Size:    16 [unused]
//   float4 distanceFieldParams1;       // Offset:  352 Size:    16 [unused]
//   float4 distanceFieldParams2;       // Offset:  368 Size:    16 [unused]
//   float4 cctvDistortParams0;         // Offset:  384 Size:    16 [unused]
//   float4 cctvDistortParams1;         // Offset:  400 Size:    16 [unused]
//   float4 kinectTrackingParams;       // Offset:  416 Size:    16 [unused]
//   float4 combatAreaSecondColor;      // Offset:  432 Size:    16 [unused]
//   float4 combatAreaParams;           // Offset:  448 Size:    16 [unused]
//   float4 postProcessDistortParams0;  // Offset:  464 Size:    16 [unused]
//   float4 postProcessDistortParams1;  // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xy          2     NONE   float   xy  
// TEXCOORD                 3   xy          3     NONE   float   xy  
// TEXCOORD                 4   xy          4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2     zw        2     NONE   float     zw
// TEXCOORD                 3   xy          3     NONE   float   xy  
// TEXCOORD                 4     zw        3     NONE   float     zw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xy
dcl_input v3.xy
dcl_input v4.xy
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output o3.xy
dcl_output o3.zw
dcl_temps 1
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 o0.x, r0.xyzw, cb0[1].xyzw
dp4 o0.y, r0.xyzw, cb0[2].xyzw
dp4 o0.z, r0.xyzw, cb0[3].xyzw
dp4 o0.w, r0.xyzw, cb0[4].xyzw
mov o1.xyzw, v5.xyzw
mov o2.xy, v1.xyxx
mov o2.zw, v2.xxxy
mov o3.xy, v3.xyxx
mov o3.zw, v4.xxxy
ret 
// Approximately 12 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
     