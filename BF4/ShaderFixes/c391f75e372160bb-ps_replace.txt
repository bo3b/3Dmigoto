// Frost
cbuffer viewConstants : register(b2)
{
  float1 time : packoffset(c0);
  float3 vc_pad0_ : packoffset(c0.y);
  float4 screenSize : packoffset(c1);
  float3 debugNonFiniteColor : packoffset(c2);
  float1 vc_pad2_ : packoffset(c2.w);
  float4x4 viewMatrix : packoffset(c3);
  float4x4 projMatrix : packoffset(c7);
  float4x4 viewProjMatrix : packoffset(c11);
  float4x4 crViewProjMatrix : packoffset(c15);
  float4 projectionKxKyKzKw : packoffset(c19);
  float3 cameraPos : packoffset(c20);
  float1 vc_pad8_ : packoffset(c20.w);
  float3 transparentStartAndSlopeAndClamp : packoffset(c21);
  float1 vc_pad9_ : packoffset(c21.w);
  float4 transparentCurve : packoffset(c22);
}

cbuffer externalConstants : register(b1)
{
  float4 external_screenEffectParams : packoffset(c0);
}
SamplerState sampler0_s : register(s0);
Texture2D<float4> texture_Texture7 : register(t1);
Texture2D<float4> texture_Texture2 : register(t2);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = cameraPos.xz * float2(0.0017857143,0.00714285718) + float2(0.735000014,-0.344999999);
  r0.x = texture_Texture2.Sample(sampler0_s, r0.xy).y;
  r0.y = 1 + -external_screenEffectParams.x;
  r0.x = r0.x + -r0.y;
  r0.y = 1 + -r0.y;
  r0.y = 1 / r0.y;
  r0.x = saturate(r0.x * r0.y);
  r0.y = r0.x * -2 + 3;
  r0.x = r0.x * r0.x;
  r0.z = -r0.y * r0.x + 1;
  r0.x = r0.y * r0.x;
  r0.yw = screenSize.xy * v1.xy;
  r0.yw = float2(0.00100000005,0.00100000005) * r0.yw;
  r0.yw = texture_Texture7.Sample(sampler0_s, r0.yw).xw;
  r1.x = texture_Texture7.Sample(sampler0_s, v1.xy).y;
  r0.w = r1.x * r0.w;
  r0.x = r1.x * r0.x;
  r0.x = r0.x * 1.39999998 + 0.100000001;
  r0.z = r0.z >= r0.w;
  r0.z = r0.z ? 0 : 1;
  r0.y = r0.y * r0.z;
  r0.y = v1.z * r0.y;
  o0.xyz = r0.xxx * r0.yyy;
  o0.w = r0.y;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//   using 3Dmigoto v1.2.6 on Sat Oct 31 01:25:05 2015
//
//
// Buffer Definitions: 
//
// cbuffer viewConstants
// {
//
//   float1 time;                       // Offset:    0 Size:     4 [unused]
//   float3 vc_pad0_;                   // Offset:    4 Size:    12 [unused]
//   float4 screenSize;                 // Offset:   16 Size:    16
//   float3 debugNonFiniteColor;        // Offset:   32 Size:    12 [unused]
//   float1 vc_pad2_;                   // Offset:   44 Size:     4 [unused]
//   float4x4 viewMatrix;               // Offset:   48 Size:    64 [unused]
//   float4x4 projMatrix;               // Offset:  112 Size:    64 [unused]
//   float4x4 viewProjMatrix;           // Offset:  176 Size:    64 [unused]
//   float4x4 crViewProjMatrix;         // Offset:  240 Size:    64 [unused]
//   float4 projectionKxKyKzKw;         // Offset:  304 Size:    16 [unused]
//   float3 cameraPos;                  // Offset:  320 Size:    12
//   float1 vc_pad8_;                   // Offset:  332 Size:     4 [unused]
//   float3 transparentStartAndSlopeAndClamp;// Offset:  336 Size:    12 [unused]
//   float1 vc_pad9_;                   // Offset:  348 Size:     4 [unused]
//   float4 transparentCurve;           // Offset:  352 Size:    16 [unused]
//
// }
//
// cbuffer externalConstants
// {
//
//   float4 external_screenEffectParams;// Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler0                          sampler      NA          NA    0        1
// texture_Texture7                  texture  float4          2d    1        1
// texture_Texture2                  texture  float4          2d    2        1
// externalConstants                 cbuffer      NA          NA    1        1
// viewConstants                     cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 2
mad r0.xy, cb2[20].xzxx, l(0.00178571430, 0.00714285718, 0.000000, 0.000000), l(0.735000, -0.345000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.yxzw, s0
add r0.y, -cb1[0].x, l(1.000000)
add r0.x, -r0.y, r0.x
add r0.y, -r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul_sat r0.x, r0.y, r0.x
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mad r0.z, -r0.y, r0.x, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.yw, v1.xxxy, cb2[1].xxxy
mul r0.yw, r0.yyyw, l(0.000000, 0.001000, 0.000000, 0.001000)
sample_indexable(texture2d)(float,float,float,float) r0.yw, r0.ywyy, t1.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t1.yxzw, s0
mul r0.w, r0.w, r1.x
mul r0.x, r0.x, r1.x
mad r0.x, r0.x, l(1.400000), l(0.100000)
ge r0.z, r0.z, r0.w
movc r0.z, r0.z, l(0), l(1.000000)
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, v1.z
mul o0.xyz, r0.yyyy, r0.xxxx
mov o0.w, r0.y
ret 
// Approximately 25 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
