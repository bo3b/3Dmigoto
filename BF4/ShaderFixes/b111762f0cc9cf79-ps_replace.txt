//tank and ship HUD
cbuffer functionConstants : register(b0)
{
  float4 lightProbeShR : packoffset(c0);
  float4 lightProbeShG : packoffset(c1);
  float4 lightProbeShB : packoffset(c2);
  float4 lightProbeShO : packoffset(c3);
}
SamplerState sampler0_s : register(s0);
Texture2D<float4> texture_Texture : register(t1);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.xyz = v2.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.w = 0.5;
  r0.xyz = texture_Texture.Sample(sampler0_s, v3.xy).xyz;
  o1.xyz = sqrt(r0.xyz);
  o1.w = 0;
  o2.yzw = float3(0,0,0);
  r0.xyz = v2.xyz;
  r0.w = 1;
  o2.x = dot(r0.xyzw, lightProbeShO.xyzw);
  r1.x = dot(r0.xyzw, lightProbeShR.xyzw);
  r1.y = dot(r0.xyzw, lightProbeShG.xyzw);
  r1.z = dot(r0.xyzw, lightProbeShB.xyzw);
  o3.xyz = max(float3(0,0,0), r1.xyz);
  o3.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//   using 3Dmigoto v1.2.6 on Fri Oct 23 02:19:13 2015
//
//
// Buffer Definitions: 
//
// cbuffer functionConstants
// {
//
//   float4 lightProbeShR;              // Offset:    0 Size:    16
//   float4 lightProbeShG;              // Offset:   16 Size:    16
//   float4 lightProbeShB;              // Offset:   32 Size:    16
//   float4 lightProbeShO;              // Offset:   48 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler0                          sampler      NA          NA    0        1
// texture_Texture                   texture  float4          2d    1        1
// functionConstants                 cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float       
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 2
mad o0.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t1.xyzw, s0
sqrt o1.xyz, r0.xyzx
mov o1.w, l(0)
mov o2.yzw, l(0,0,0,0)
mov r0.xyz, v2.xyzx
mov r0.w, l(1.000000)
dp4 o2.x, r0.xyzw, cb0[3].xyzw
dp4 r1.x, r0.xyzw, cb0[0].xyzw
dp4 r1.y, r0.xyzw, cb0[1].xyzw
dp4 r1.z, r0.xyzw, cb0[2].xyzw
max o3.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o3.w, l(0)
ret 
// Approximately 15 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
