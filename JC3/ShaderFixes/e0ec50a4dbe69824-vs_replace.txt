// Halo

cbuffer GlobalConstants : register(b0)
{
  float4 Globals[49] : packoffset(c0);
}

cbuffer PerInstanceConstants : register(b1)
{
  row_major float4x4 WorldMat : packoffset(c0);
  float4 Dimensions : packoffset(c4);
  float2 UVScale : packoffset(c5);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float3 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = Dimensions.xyz * v0.xyz;
  r1.xyz = WorldMat._m10_m11_m12 * r0.yyy;
  r0.xyw = r0.xxx * WorldMat._m00_m01_m02 + r1.xyz;
  r0.xyz = r0.zzz * WorldMat._m20_m21_m22 + r0.xyw;
  r0.xyz = WorldMat._m30_m31_m32 + r0.xyz;
  r1.xyzw = Globals[1].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * Globals[0].xyzw + r1.xyzw;
  r0.xyzw = r0.zzzz * Globals[2].xyzw + r1.xyzw;
  r0.xyzw = Globals[3].xyzw + r0.xyzw;
  o0.xyzw = r0.xyzw;
  
  float4 stereo = StereoParams.Load(0);
  r0.x += stereo.x * (r0.w - stereo.y);
  
  r0.xyz = float3(0.5,-0.5,0.5) * r0.xyw;
  o1.z = r0.w;
  r0.xy = r0.xy + r0.zz;
  o1.xy = UVScale.xy * r0.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.41 on Sun Jul 31 08:38:36 2016
//
//
// Buffer Definitions: 
//
// cbuffer GlobalConstants
// {
//
//   float4 Globals[49];                // Offset:    0 Size:   784
//
// }
//
// cbuffer PerInstanceConstants
// {
//
//   row_major float4x4 WorldMat;       // Offset:    0 Size:    64
//   float4 Dimensions;                 // Offset:   64 Size:    16
//   float2 UVScale;                    // Offset:   80 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// GlobalConstants                   cbuffer      NA          NA    0        1
// PerInstanceConstants              cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_temps 2
mul r0.xyz, v0.xyzx, cb1[4].xyzx
mul r1.xyz, r0.yyyy, cb1[1].xyzx
mad r0.xyw, r0.xxxx, cb1[0].xyxz, r1.xyxz
mad r0.xyz, r0.zzzz, cb1[2].xyzx, r0.xywx
add r0.xyz, r0.xyzx, cb1[3].xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mov o0.xyzw, r0.xyzw
mul r0.xyz, r0.xywx, l(0.500000, -0.500000, 0.500000, 0.000000)
mov o1.z, r0.w
add r0.xy, r0.zzzz, r0.xyxx
mul o1.xy, r0.xyxx, cb1[5].xyxx
ret 
// Approximately 15 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
