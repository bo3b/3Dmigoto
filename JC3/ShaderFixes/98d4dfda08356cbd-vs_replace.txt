// Lensflares VS

cbuffer cbInstanceConsts : register(b1)
{
  float4 InstanceConsts : packoffset(c0);
}

// Copied from pixel shader using 3DMigoto to get depth information:
cbuffer cbInstanceConsts : register(b13)
{
  float4 PSInstanceConsts : packoffset(c0);
}


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : COLOR1,
  float4 v3 : TEXCOORD0,
  float2 v4 : TEXCOORD1,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : COLOR0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = InstanceConsts.xy * v0.xy;
  r1.x = cmp(v1.w < 0.00999999978);
  r0.zw = float2(0,1);
  o0.xyzw = r1.xxxx ? float4(-1,-1,-1,1) : r0.xyzw;
  
  float4 stereo = StereoParams.Load(0);
  float depth = 1 / (PSInstanceConsts.z * 9.9999752 + 0.000025);
  o0.x += stereo.x * (depth - stereo.y) / depth;
  
  o1.xy = float2(1.99993896,1.99993896) * v4.xy;
  r0.xyz = InstanceConsts.zzz * v1.xyz;
  o2.xyz = float3(4,4,4) * r0.xyz;
  o2.w = v1.w;
  
    
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.34 on Sat Mar 26 10:43:52 2016
//
//
// Buffer Definitions: 
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts;             // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbInstanceConsts                  cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_input v0.xy
dcl_input v1.xyzw
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_temps 2
mul r0.xy, v0.xyxx, cb1[0].xyxx
lt r1.x, v1.w, l(0.010000)
mov r0.zw, l(0,0,0,1.000000)
movc o0.xyzw, r1.xxxx, l(-1.000000,-1.000000,-1.000000,1.000000), r0.xyzw
mul o1.xy, v4.xyxx, l(1.999939, 1.999939, 0.000000, 0.000000)
mul r0.xyz, v1.xyzx, cb1[0].zzzz
mul o2.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
mov o2.w, v1.w
ret 
// Approximately 9 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
