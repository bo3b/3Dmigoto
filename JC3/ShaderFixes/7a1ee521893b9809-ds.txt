// Tessellated Terrain
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.29 on Fri Feb 19 10:58:57 2016
//
//
// Buffer Definitions: 
//
// cbuffer cb1
// {
//
//   float4 ViewDir_BackPatchCull;      // Offset:    0 Size:    16 [unused]
//   row_major float4x4 m_OffsetViewProjection;// Offset:   16 Size:    64
//   float4 m_CameraPosition;           // Offset:   80 Size:    16
//   float4 TessOrigin;                 // Offset:   96 Size:    16
//   float TessellationFactorInner;     // Offset:  112 Size:     4 [unused]
//   float TessellationFactorEdge;      // Offset:  116 Size:     4 [unused]
//   float TessellationFactorClamp;     // Offset:  120 Size:     4 [unused]
//   float TessellationFactorSphere;    // Offset:  124 Size:     4 [unused]
//   float TessellationFactorNormalDiff;// Offset:  128 Size:     4 [unused]
//   float BackPatchCullThreshold;      // Offset:  132 Size:     4 [unused]
//   float FrustumCull;                 // Offset:  136 Size:     4 [unused]
//   float HalfRes;                     // Offset:  140 Size:     4 [unused]
//   float Pad0;                        // Offset:  144 Size:     4 [unused]
//   float Pad1;                        // Offset:  148 Size:     4 [unused]
//
// }
//
// cbuffer cb0
// {
//
//   float4 WorldPos;                   // Offset:    0 Size:    16
//   float4 HalfTexel_DisplacementMapAndDisplacementConstants;// Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SamplerStateDisplacement          sampler      NA          NA    0        1
// NormalDisplacementMap             texture   float          2d    0        1
// cb0                               cbuffer      NA          NA    0        1
// cb1                               cbuffer      NA          NA    1        1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float       
// SV_TessFactor            1   x           1  TRIEDGE   float       
// SV_TessFactor            2   x           2  TRIEDGE   float       
// SV_InsideTessFactor      0   x           3   TRIINT   float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xyz         0     NONE   float   xyz 
// TEXCOORD                 2   xyz         1     NONE   float   xyz 
// TEXCOORD                 3   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE    uint       
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyz
dcl_input vicp[3][1].xyz
dcl_input vicp[3][2].xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 9

dcl_resource_texture2d (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw
ld_indexable(texture1d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t120.xyzw

add r0.xyz, cb1[6].xyzx, -cb0[0].xyzx
eq r0.w, vDomain.x, l(0.000000)
ne r1.xy, vDomain.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
and r0.w, r0.w, r1.x
and r0.w, r1.y, r0.w
if_nz r0.w
  add r2.xyz, vicp[2][0].xyzx, vicp[1][0].xyzx
  mad r2.xyz, -r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
  dp3 r0.w, r2.xyzx, r2.xyzx
  sqrt r0.w, r0.w
  lt r0.w, r0.w, l(192.000000)
  if_nz r0.w
    eq r0.w, vicp[1][2].w, vicp[2][2].w
    if_nz r0.w
      add r0.w, -vicp[1][2].z, vicp[2][2].z
      mad r1.z, vDomain.z, r0.w, vicp[1][2].z
      mul r1.z, r1.z, l(0.500000)
      round_ne r1.z, r1.z
      mad r1.z, r1.z, l(2.000000), -vicp[1][2].z
      div_sat r1.z, r1.z, r0.w
      add r1.w, -r1.z, l(1.000000)
      mad r0.w, r1.z, r0.w, vicp[1][2].z
      ftoi r2.x, r0.w
      ftoi r2.y, vicp[1][2].w
      mul r3.xyz, r1.zzzz, vicp[2][0].xyzx
      mad r3.xyz, r1.wwww, vicp[1][0].xyzx, r3.xyzx
      mul r4.xyz, r1.zzzz, vicp[2][1].xyzx
      mad r4.xyz, r1.wwww, vicp[1][1].xyzx, r4.xyzx
      mul r5.xy, r1.zzzz, vicp[2][2].xyxx
      mad o2.xy, r1.wwww, vicp[1][2].xyxx, r5.xyxx
      mov r2.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r0.w, r2.xyzw, t0.yzwx
      mad r0.w, r0.w, cb0[1].z, cb0[1].w
      mad r2.xyz, r0.wwww, r4.xyzx, r3.xyzx
      mul r0.w, r2.y, l(64.000000)
      mad r1.zw, r2.xxxz, l(0.000000, 0.000000, 64.000000, 64.000000), l(0.000000, 0.000000, 8192.000000, 8192.000000)
      ftou r0.w, r0.w
      ftou r1.zw, r1.zzzw
      bfi r1.z, l(16), l(16), r1.w, r1.z
      and r1.z, r1.z, l(0x0000ffff)
      and r0.w, r0.w, l(0x0007ffff)
      ubfe r1.w, l(16), l(0), r1.w
      utof r1.z, r1.z
      mad r2.x, r1.z, l(0.015625), l(-128.000000)
      utof r0.w, r0.w
      mul r2.y, r0.w, l(0.015625)
      utof r0.w, r1.w
      mad r2.z, r0.w, l(0.015625), l(-128.000000)
      add r3.xyz, -cb1[5].xyzx, cb0[0].xyzx
      mul r4.xyzw, r3.yyyy, cb1[2].xyzw
      mad r4.xyzw, r3.xxxx, cb1[1].xyzw, r4.xyzw
      mad r3.xyzw, r3.zzzz, cb1[3].xyzw, r4.xyzw
      add r3.xyzw, r3.xyzw, cb1[4].xyzw
      mul r4.xyzw, r2.yyyy, cb1[2].xyzw
      mad r4.xyzw, r2.xxxx, cb1[1].xyzw, r4.xyzw
      mad r4.xyzw, r2.zzzz, cb1[3].xyzw, r4.xyzw
      add r3.xyzw, r3.xyzw, r4.xyzw
      add r4.xyz, r2.xyzx, cb0[0].xyzx
      add r4.xyz, r4.xyzx, -cb1[5].xyzx
      dp3 r0.w, r4.xyzx, r4.xyzx
      sqrt o1.w, r0.w
      dp4 r0.w, r3.xyzw, r3.xyzw
      sqrt r0.w, r0.w
      add r0.w, r0.w, l(-5.000000)
      mul_sat r0.w, r0.w, l(0.0153846154)
      add o2.z, -r0.w, l(1.000000)

// Driver will stereoise this output
//add r7.w, r3.w, -r7.y
//mad r3.x, r7.w, r7.x, r3.x

      mov o0.xyzw, r3.xyzw
      mov o1.xyz, r2.xyzx
      ret 
    else 
      mov r2.yz, vDomain.yyzy
    endif 
    eq r0.w, vicp[1][2].z, vicp[2][2].z
    if_nz r0.w
      add r0.w, -vicp[1][2].w, vicp[2][2].w
      mad r1.z, r2.z, r0.w, vicp[1][2].w
      mul r1.z, r1.z, l(0.500000)
      round_ne r1.z, r1.z
      mad r1.z, r1.z, l(2.000000), -vicp[1][2].w
      div_sat r1.z, r1.z, r0.w
      add r1.w, -r1.z, l(1.000000)
      mad r0.w, r1.z, r0.w, vicp[1][2].w
      ftoi r3.x, vicp[1][2].z
      ftoi r3.y, r0.w
      mul r4.xyz, r1.zzzz, vicp[2][0].xyzx
      mad r4.xyz, r1.wwww, vicp[1][0].xyzx, r4.xyzx
      mul r5.xyz, r1.zzzz, vicp[2][1].xyzx
      mad r5.xyz, r1.wwww, vicp[1][1].xyzx, r5.xyzx
      mul r6.xy, r1.zzzz, vicp[2][2].xyxx
      mad o2.xy, r1.wwww, vicp[1][2].xyxx, r6.xyxx
      mov r3.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r0.w, r3.xyzw, t0.yzwx
      mad r0.w, r0.w, cb0[1].z, cb0[1].w
      mad r3.xyz, r0.wwww, r5.xyzx, r4.xyzx
      mul r0.w, r3.y, l(64.000000)
      mad r1.zw, r3.xxxz, l(0.000000, 0.000000, 64.000000, 64.000000), l(0.000000, 0.000000, 8192.000000, 8192.000000)
      ftou r0.w, r0.w
      ftou r1.zw, r1.zzzw
      bfi r1.z, l(16), l(16), r1.w, r1.z
      and r1.z, r1.z, l(0x0000ffff)
      and r0.w, r0.w, l(0x0007ffff)
      ubfe r1.w, l(16), l(0), r1.w
      utof r1.z, r1.z
      mad r3.x, r1.z, l(0.015625), l(-128.000000)
      utof r0.w, r0.w
      mul r3.y, r0.w, l(0.015625)
      utof r0.w, r1.w
      mad r3.z, r0.w, l(0.015625), l(-128.000000)
      add r4.xyz, -cb1[5].xyzx, cb0[0].xyzx
      mul r5.xyzw, r4.yyyy, cb1[2].xyzw
      mad r5.xyzw, r4.xxxx, cb1[1].xyzw, r5.xyzw
      mad r4.xyzw, r4.zzzz, cb1[3].xyzw, r5.xyzw
      add r4.xyzw, r4.xyzw, cb1[4].xyzw
      mul r5.xyzw, r3.yyyy, cb1[2].xyzw
      mad r5.xyzw, r3.xxxx, cb1[1].xyzw, r5.xyzw
      mad r5.xyzw, r3.zzzz, cb1[3].xyzw, r5.xyzw
      add r4.xyzw, r4.xyzw, r5.xyzw
      add r5.xyz, r3.xyzx, cb0[0].xyzx
      add r5.xyz, r5.xyzx, -cb1[5].xyzx
      dp3 r0.w, r5.xyzx, r5.xyzx
      sqrt o1.w, r0.w
      dp4 r0.w, r4.xyzw, r4.xyzw
      sqrt r0.w, r0.w
      add r0.w, r0.w, l(-5.000000)
      mul_sat r0.w, r0.w, l(0.0153846154)
      add o2.z, -r0.w, l(1.000000)

add r7.w, r4.w, -r7.y
mad r4.x, r7.w, r7.x, r4.x

      mov o0.xyzw, r4.xyzw
      mov o1.xyz, r3.xyzx
      ret 
    endif 
  else 
    mov r2.yz, vDomain.yyzy
  endif 
  mov r2.x, l(0)
else 
  eq r0.w, vDomain.y, l(0.000000)
  ne r1.z, vDomain.x, l(0.000000)
  and r0.w, r0.w, r1.z
  and r0.w, r1.y, r0.w
  if_nz r0.w
    add r3.xyz, vicp[2][0].xyzx, vicp[0][0].xyzx
    mad r3.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
    dp3 r0.w, r3.xyzx, r3.xyzx
    sqrt r0.w, r0.w
    lt r0.w, r0.w, l(192.000000)
    if_nz r0.w
      eq r0.w, vicp[0][2].w, vicp[2][2].w
      if_nz r0.w
        add r0.w, -vicp[2][2].z, vicp[0][2].z
        mad r1.y, vDomain.x, r0.w, vicp[2][2].z
        mul r1.y, r1.y, l(0.500000)
        round_ne r1.y, r1.y
        mad r1.y, r1.y, l(2.000000), -vicp[2][2].z
        div_sat r1.y, r1.y, r0.w
        add r1.w, -r1.y, l(1.000000)
        mad r0.w, r1.y, r0.w, vicp[2][2].z
        ftoi r3.x, r0.w
        ftoi r3.y, vicp[0][2].w
        mul r4.xyz, r1.wwww, vicp[2][0].xyzx
        mad r4.xyz, r1.yyyy, vicp[0][0].xyzx, r4.xyzx
        mul r5.xyz, r1.wwww, vicp[2][1].xyzx
        mad r5.xyz, r1.yyyy, vicp[0][1].xyzx, r5.xyzx
        mul r6.xy, r1.wwww, vicp[2][2].xyxx
        mad o2.xy, r1.yyyy, vicp[0][2].xyxx, r6.xyxx
        mov r3.zw, l(0,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r0.w, r3.xyzw, t0.yzwx
        mad r0.w, r0.w, cb0[1].z, cb0[1].w
        mad r3.xyz, r0.wwww, r5.xyzx, r4.xyzx
        mul r0.w, r3.y, l(64.000000)
        mad r1.yw, r3.xxxz, l(0.000000, 64.000000, 0.000000, 64.000000), l(0.000000, 8192.000000, 0.000000, 8192.000000)
        ftou r0.w, r0.w
        ftou r1.yw, r1.yyyw
        bfi r1.y, l(16), l(16), r1.w, r1.y
        and r1.y, r1.y, l(0x0000ffff)
        and r0.w, r0.w, l(0x0007ffff)
        ubfe r1.w, l(16), l(0), r1.w
        utof r1.y, r1.y
        mad r3.x, r1.y, l(0.015625), l(-128.000000)
        utof r0.w, r0.w
        mul r3.y, r0.w, l(0.015625)
        utof r0.w, r1.w
        mad r3.z, r0.w, l(0.015625), l(-128.000000)
        add r4.xyz, -cb1[5].xyzx, cb0[0].xyzx
        mul r5.xyzw, r4.yyyy, cb1[2].xyzw
        mad r5.xyzw, r4.xxxx, cb1[1].xyzw, r5.xyzw
        mad r4.xyzw, r4.zzzz, cb1[3].xyzw, r5.xyzw
        add r4.xyzw, r4.xyzw, cb1[4].xyzw
        mul r5.xyzw, r3.yyyy, cb1[2].xyzw
        mad r5.xyzw, r3.xxxx, cb1[1].xyzw, r5.xyzw
        mad r5.xyzw, r3.zzzz, cb1[3].xyzw, r5.xyzw
        add r4.xyzw, r4.xyzw, r5.xyzw
        add r5.xyz, r3.xyzx, cb0[0].xyzx
        add r5.xyz, r5.xyzx, -cb1[5].xyzx
        dp3 r0.w, r5.xyzx, r5.xyzx
        sqrt o1.w, r0.w
        dp4 r0.w, r4.xyzw, r4.xyzw
        sqrt r0.w, r0.w
        add r0.w, r0.w, l(-5.000000)
        mul_sat r0.w, r0.w, l(0.0153846154)
        add o2.z, -r0.w, l(1.000000)

add r7.w, r4.w, -r7.y
mad r4.x, r7.w, r7.x, r4.x

        mov o0.xyzw, r4.xyzw
        mov o1.xyz, r3.xyzx
        ret 
      else 
        mov r2.xz, vDomain.xxzx
      endif 
      eq r0.w, vicp[0][2].z, vicp[2][2].z
      if_nz r0.w
        add r0.w, -vicp[2][2].w, vicp[0][2].w
        mad r1.y, r2.x, r0.w, vicp[2][2].w
        mul r1.y, r1.y, l(0.500000)
        round_ne r1.y, r1.y
        mad r1.y, r1.y, l(2.000000), -vicp[2][2].w
        div_sat r1.y, r1.y, r0.w
        add r1.w, -r1.y, l(1.000000)
        mad r0.w, r1.y, r0.w, vicp[2][2].w
        ftoi r3.x, vicp[0][2].z
        ftoi r3.y, r0.w
        mul r4.xyz, r1.wwww, vicp[2][0].xyzx
        mad r4.xyz, r1.yyyy, vicp[0][0].xyzx, r4.xyzx
        mul r5.xyz, r1.wwww, vicp[2][1].xyzx
        mad r5.xyz, r1.yyyy, vicp[0][1].xyzx, r5.xyzx
        mul r6.xy, r1.wwww, vicp[2][2].xyxx
        mad o2.xy, r1.yyyy, vicp[0][2].xyxx, r6.xyxx
        mov r3.zw, l(0,0,0,0)
        ld_indexable(texture2d)(float,float,float,float) r0.w, r3.xyzw, t0.yzwx
        mad r0.w, r0.w, cb0[1].z, cb0[1].w
        mad r3.xyz, r0.wwww, r5.xyzx, r4.xyzx
        mul r0.w, r3.y, l(64.000000)
        mad r1.yw, r3.xxxz, l(0.000000, 64.000000, 0.000000, 64.000000), l(0.000000, 8192.000000, 0.000000, 8192.000000)
        ftou r0.w, r0.w
        ftou r1.yw, r1.yyyw
        bfi r1.y, l(16), l(16), r1.w, r1.y
        and r1.y, r1.y, l(0x0000ffff)
        and r0.w, r0.w, l(0x0007ffff)
        ubfe r1.w, l(16), l(0), r1.w
        utof r1.y, r1.y
        mad r3.x, r1.y, l(0.015625), l(-128.000000)
        utof r0.w, r0.w
        mul r3.y, r0.w, l(0.015625)
        utof r0.w, r1.w
        mad r3.z, r0.w, l(0.015625), l(-128.000000)
        add r4.xyz, -cb1[5].xyzx, cb0[0].xyzx
        mul r5.xyzw, r4.yyyy, cb1[2].xyzw
        mad r5.xyzw, r4.xxxx, cb1[1].xyzw, r5.xyzw
        mad r4.xyzw, r4.zzzz, cb1[3].xyzw, r5.xyzw
        add r4.xyzw, r4.xyzw, cb1[4].xyzw
        mul r5.xyzw, r3.yyyy, cb1[2].xyzw
        mad r5.xyzw, r3.xxxx, cb1[1].xyzw, r5.xyzw
        mad r5.xyzw, r3.zzzz, cb1[3].xyzw, r5.xyzw
        add r4.xyzw, r4.xyzw, r5.xyzw
        add r5.xyz, r3.xyzx, cb0[0].xyzx
        add r5.xyz, r5.xyzx, -cb1[5].xyzx
        dp3 r0.w, r5.xyzx, r5.xyzx
        sqrt o1.w, r0.w
        dp4 r0.w, r4.xyzw, r4.xyzw
        sqrt r0.w, r0.w
        add r0.w, r0.w, l(-5.000000)
        mul_sat r0.w, r0.w, l(0.0153846154)
        add o2.z, -r0.w, l(1.000000)

add r7.w, r4.w, -r7.y
mad r4.x, r7.w, r7.x, r4.x

        mov o0.xyzw, r4.xyzw
        mov o1.xyz, r3.xyzx
        ret 
      endif 
    else 
      mov r2.xz, vDomain.xxzx
    endif 
    mov r2.y, l(0)
  else 
    eq r0.w, vDomain.z, l(0.000000)
    and r0.w, r1.x, r0.w
    and r0.w, r1.z, r0.w
    if_nz r0.w
      add r1.xyz, vicp[1][0].xyzx, vicp[0][0].xyzx
      mad r0.xyz, -r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
      dp3 r0.x, r0.xyzx, r0.xyzx
      sqrt r0.x, r0.x
      lt r0.x, r0.x, l(192.000000)
      if_nz r0.x
        eq r0.x, vicp[0][2].w, vicp[1][2].w
        if_nz r0.x
          add r0.x, -vicp[0][2].z, vicp[1][2].z
          mad r0.y, vDomain.y, r0.x, vicp[0][2].z
          mul r0.y, r0.y, l(0.500000)
          round_ne r0.y, r0.y
          mad r0.y, r0.y, l(2.000000), -vicp[0][2].z
          div_sat r0.y, r0.y, r0.x
          add r0.z, -r0.y, l(1.000000)
          mad r0.x, r0.y, r0.x, vicp[0][2].z
          ftoi r1.x, r0.x
          ftoi r1.y, vicp[0][2].w
          mul r3.xyz, r0.yyyy, vicp[1][0].xyzx
          mad r3.xyz, r0.zzzz, vicp[0][0].xyzx, r3.xyzx
          mul r4.xyz, r0.yyyy, vicp[1][1].xyzx
          mad r4.xyz, r0.zzzz, vicp[0][1].xyzx, r4.xyzx
          mul r0.xy, r0.yyyy, vicp[1][2].xyxx
          mad o2.xy, r0.zzzz, vicp[0][2].xyxx, r0.xyxx
          mov r1.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r0.x, r1.xyzw, t0.xyzw
          mad r0.x, r0.x, cb0[1].z, cb0[1].w
          mad r0.xyz, r0.xxxx, r4.xyzx, r3.xyzx
          mul r0.y, r0.y, l(64.000000)
          mad r0.xz, r0.xxzx, l(64.000000, 0.000000, 64.000000, 0.000000), l(8192.000000, 0.000000, 8192.000000, 0.000000)
          ftou r0.xyz, r0.xyzx
          bfi r0.x, l(16), l(16), r0.z, r0.x
          and r0.xy, r0.xyxx, l(0x0000ffff, 0x0007ffff, 0, 0)
          ubfe r0.z, l(16), l(0), r0.z
          utof r0.x, r0.x
          mad r1.x, r0.x, l(0.015625), l(-128.000000)
          utof r0.x, r0.y
          mul r1.y, r0.x, l(0.015625)
          utof r0.x, r0.z
          mad r1.z, r0.x, l(0.015625), l(-128.000000)
          add r0.xyz, -cb1[5].xyzx, cb0[0].xyzx
          mul r3.xyzw, r0.yyyy, cb1[2].xyzw
          mad r3.xyzw, r0.xxxx, cb1[1].xyzw, r3.xyzw
          mad r0.xyzw, r0.zzzz, cb1[3].xyzw, r3.xyzw
          add r0.xyzw, r0.xyzw, cb1[4].xyzw
          mul r3.xyzw, r1.yyyy, cb1[2].xyzw
          mad r3.xyzw, r1.xxxx, cb1[1].xyzw, r3.xyzw
          mad r3.xyzw, r1.zzzz, cb1[3].xyzw, r3.xyzw
          add r0.xyzw, r0.xyzw, r3.xyzw
          add r3.xyz, r1.xyzx, cb0[0].xyzx
          add r3.xyz, r3.xyzx, -cb1[5].xyzx
          dp3 r1.w, r3.xyzx, r3.xyzx
          sqrt o1.w, r1.w
          dp4 r1.w, r0.xyzw, r0.xyzw
          sqrt r1.w, r1.w
          add r1.w, r1.w, l(-5.000000)
          mul_sat r1.w, r1.w, l(0.0153846154)
          add o2.z, -r1.w, l(1.000000)

add r7.w, r0.w, -r7.y
mad r0.x, r7.w, r7.x, r0.x

          mov o0.xyzw, r0.xyzw
          mov o1.xyz, r1.xyzx
          ret 
        else 
          mov r2.xy, vDomain.xyxx
        endif 
        eq r0.x, vicp[0][2].z, vicp[1][2].z
        if_nz r0.x
          add r0.x, -vicp[0][2].w, vicp[1][2].w
          mad r0.y, r2.y, r0.x, vicp[0][2].w
          mul r0.y, r0.y, l(0.500000)
          round_ne r0.y, r0.y
          mad r0.y, r0.y, l(2.000000), -vicp[0][2].w
          div_sat r0.y, r0.y, r0.x
          add r0.z, -r0.y, l(1.000000)
          mad r0.x, r0.y, r0.x, vicp[0][2].w
          ftoi r1.x, vicp[0][2].z
          ftoi r1.y, r0.x
          mul r3.xyz, r0.yyyy, vicp[1][0].xyzx
          mad r3.xyz, r0.zzzz, vicp[0][0].xyzx, r3.xyzx
          mul r4.xyz, r0.yyyy, vicp[1][1].xyzx
          mad r4.xyz, r0.zzzz, vicp[0][1].xyzx, r4.xyzx
          mul r0.xy, r0.yyyy, vicp[1][2].xyxx
          mad o2.xy, r0.zzzz, vicp[0][2].xyxx, r0.xyxx
          mov r1.zw, l(0,0,0,0)
          ld_indexable(texture2d)(float,float,float,float) r0.x, r1.xyzw, t0.xyzw
          mad r0.x, r0.x, cb0[1].z, cb0[1].w
          mad r0.xyz, r0.xxxx, r4.xyzx, r3.xyzx
          mul r0.y, r0.y, l(64.000000)
          mad r0.xz, r0.xxzx, l(64.000000, 0.000000, 64.000000, 0.000000), l(8192.000000, 0.000000, 8192.000000, 0.000000)
          ftou r0.xyz, r0.xyzx
          bfi r0.x, l(16), l(16), r0.z, r0.x
          and r0.xy, r0.xyxx, l(0x0000ffff, 0x0007ffff, 0, 0)
          ubfe r0.z, l(16), l(0), r0.z
          utof r0.x, r0.x
          mad r1.x, r0.x, l(0.015625), l(-128.000000)
          utof r0.x, r0.y
          mul r1.y, r0.x, l(0.015625)
          utof r0.x, r0.z
          mad r1.z, r0.x, l(0.015625), l(-128.000000)
          add r0.xyz, -cb1[5].xyzx, cb0[0].xyzx
          mul r3.xyzw, r0.yyyy, cb1[2].xyzw
          mad r3.xyzw, r0.xxxx, cb1[1].xyzw, r3.xyzw
          mad r0.xyzw, r0.zzzz, cb1[3].xyzw, r3.xyzw
          add r0.xyzw, r0.xyzw, cb1[4].xyzw
          mul r3.xyzw, r1.yyyy, cb1[2].xyzw
          mad r3.xyzw, r1.xxxx, cb1[1].xyzw, r3.xyzw
          mad r3.xyzw, r1.zzzz, cb1[3].xyzw, r3.xyzw
          add r0.xyzw, r0.xyzw, r3.xyzw
          add r3.xyz, r1.xyzx, cb0[0].xyzx
          add r3.xyz, r3.xyzx, -cb1[5].xyzx
          dp3 r1.w, r3.xyzx, r3.xyzx
          sqrt o1.w, r1.w
          dp4 r1.w, r0.xyzw, r0.xyzw
          sqrt r1.w, r1.w
          add r1.w, r1.w, l(-5.000000)
          mul_sat r1.w, r1.w, l(0.0153846154)
          add o2.z, -r1.w, l(1.000000)

add r7.w, r0.w, -r7.y
mad r0.x, r7.w, r7.x, r0.x

          mov o0.xyzw, r0.xyzw
          mov o1.xyz, r1.xyzx
          ret 
        endif 
      else 
        mov r2.xy, vDomain.xyxx
      endif 
    else 
      mov r2.xy, vDomain.xyxx
    endif 
    mov r2.z, vDomain.z
  endif 
endif 
mul r0.xyz, r2.yyyy, vicp[1][0].xyzx
mad r0.xyz, r2.xxxx, vicp[0][0].xyzx, r0.xyzx
mad r0.xyz, r2.zzzz, vicp[2][0].xyzx, r0.xyzx
mul r1.xyz, r2.yyyy, vicp[1][1].xyzx
mad r1.xyz, r2.xxxx, vicp[0][1].xyzx, r1.xyzx
mad r1.xyz, r2.zzzz, vicp[2][1].xyzx, r1.xyzx
mul r3.xy, r2.yyyy, vicp[1][2].xyxx
mad r3.xy, r2.xxxx, vicp[0][2].xyxx, r3.xyxx
mad r3.xy, r2.zzzz, vicp[2][2].xyxx, r3.xyxx
add r3.zw, r3.xxxy, cb0[1].xxxy
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.zwzz, t0.yzwx, s0, l(0.000000)
mad r0.w, r0.w, cb0[1].z, cb0[1].w
add r4.xyz, r0.xyzx, cb0[0].xyzx
add r4.xyz, r4.xyzx, -cb1[5].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
sqrt r1.w, r1.w
add r1.w, r1.w, l(-704.000000)
mul_sat r1.w, r1.w, l(0.015625)
min r2.w, r0.w, l(0.100000)
max r2.w, r2.w, l(-0.100000)
mad r0.w, -r1.w, r2.w, r0.w
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
eq r1.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.xyz, r1.xyzx, l(1, 1, 1, 0)
iadd r0.w, r1.x, r1.y
iadd r0.w, r0.w, r1.z
ige r0.w, r0.w, l(2)
mul r1.x, r0.y, l(64.000000)
mad r1.yz, r0.xxzx, l(0.000000, 64.000000, 64.000000, 0.000000), l(0.000000, 8192.000000, 8192.000000, 0.000000)
ftou r1.xyz, r1.xyzx
bfi r1.y, l(16), l(16), r1.z, r1.y
and r1.xy, r1.xyxx, l(0x0007ffff, 0x0000ffff, 0, 0)
ubfe r1.z, l(16), l(0), r1.z
utof r1.xy, r1.xyxx
mad r2.x, r1.y, l(0.015625), l(-128.000000)
mul r2.y, r1.x, l(0.015625)
utof r1.x, r1.z
mad r2.z, r1.x, l(0.015625), l(-128.000000)
movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
add r1.xyz, -cb1[5].xyzx, cb0[0].xyzx
mul r2.xyzw, r1.yyyy, cb1[2].xyzw
mad r2.xyzw, r1.xxxx, cb1[1].xyzw, r2.xyzw
mad r1.xyzw, r1.zzzz, cb1[3].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, cb1[4].xyzw
mul r2.xyzw, r0.yyyy, cb1[2].xyzw
mad r2.xyzw, r0.xxxx, cb1[1].xyzw, r2.xyzw
mad r2.xyzw, r0.zzzz, cb1[3].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
add r2.xyz, r0.xyzx, cb0[0].xyzx
add r2.xyz, r2.xyzx, -cb1[5].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt o1.w, r0.w
dp4 r0.w, r1.xyzw, r1.xyzw
sqrt r0.w, r0.w
add r0.w, r0.w, l(-5.000000)
mul_sat r0.w, r0.w, l(0.0153846154)
add o2.z, -r0.w, l(1.000000)

add r7.w, r1.w, -r7.y
mad r1.x, r7.w, r7.x, r1.x

mov o0.xyzw, r1.xyzw
mov o1.xyz, r0.xyzx
mov o2.xy, r3.xyxx
ret 
// Approximately 463 instruction slots used
