// ---- Created with 3Dmigoto v1.2.44 on Sun Sep 25 23:48:17 2016

// Shadows

cbuffer RBIInfo : register(b6)
{
  row_major float4x4 ModelWorldMatrix : packoffset(c0);
  row_major float4x4 ModelWorldMatrixPrev : packoffset(c4);
  float4 ModelDiffuseColor : packoffset(c8);
  float4 ModelAmbientColor : packoffset(c9);
  float4 ModelSpecularColor : packoffset(c10);
  float4 ModelEmissiveColor : packoffset(c11);
  float4 ModelDebugColor : packoffset(c12);
}

cbuffer GlobalConstants : register(b0)
{
  float4 Globals[49] : packoffset(c0);
}

cbuffer InstanceConsts : register(b1)
{
  float IsDeformed : packoffset(c0);
}

cbuffer instanceconst : register(b2)
{
  float4 ControlPoints[216] : packoffset(c0);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TEXCOORD0,
  out float4 o0 : SV_Position0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = -Globals[4].xyz + ModelWorldMatrix._m30_m31_m32;
  r1.xyzw = Globals[30].xyzw * ModelWorldMatrix._m01_m01_m01_m01;
  r1.xyzw = ModelWorldMatrix._m00_m00_m00_m00 * Globals[29].xyzw + r1.xyzw;
  r1.xyzw = ModelWorldMatrix._m02_m02_m02_m02 * Globals[31].xyzw + r1.xyzw;
  r1.xyzw = ModelWorldMatrix._m03_m03_m03_m03 * Globals[32].xyzw + r1.xyzw;
  r2.xyzw = Globals[30].xyzw * ModelWorldMatrix._m11_m11_m11_m11;
  r2.xyzw = ModelWorldMatrix._m10_m10_m10_m10 * Globals[29].xyzw + r2.xyzw;
  r2.xyzw = ModelWorldMatrix._m12_m12_m12_m12 * Globals[31].xyzw + r2.xyzw;
  r2.xyzw = ModelWorldMatrix._m13_m13_m13_m13 * Globals[32].xyzw + r2.xyzw;
  r3.xyzw = Globals[30].xyzw * ModelWorldMatrix._m21_m21_m21_m21;
  r3.xyzw = ModelWorldMatrix._m20_m20_m20_m20 * Globals[29].xyzw + r3.xyzw;
  r3.xyzw = ModelWorldMatrix._m22_m22_m22_m22 * Globals[31].xyzw + r3.xyzw;
  r3.xyzw = ModelWorldMatrix._m23_m23_m23_m23 * Globals[32].xyzw + r3.xyzw;
  r4.xyzw = Globals[30].xyzw * r0.yyyy;
  r4.xyzw = r0.xxxx * Globals[29].xyzw + r4.xyzw;
  r0.xyzw = r0.zzzz * Globals[31].xyzw + r4.xyzw;
  r0.xyzw = ModelWorldMatrix._m33_m33_m33_m33 * Globals[32].xyzw + r0.xyzw;
  r4.x = cmp(IsDeformed == 1.000000);
  if (r4.x != 0) {
    r4.xyzw = float4(127.996094,127.996094,127.996094,127.996094) * v1.xyzw;
    r5.xyzw = floor(r4.xyzw);
    r5.xyzw = float4(128,128,128,128) + r5.xyzw;
    r5.xyzw = (uint4)r5.xyzw;
    r4.xyzw = frac(r4.xyzw);
    r6.xyzw = (uint4)r5.xyzw >> int4(2,2,2,2);
    r7.xyzw = (int4)r5.xyzw & int4(-4,-4,-4,-4);
    r5.xyzw = (int4)r5.xyzw + (int4)-r7.xyzw;
    r7.x = dot(ControlPoints[r6.x].xyzw, icb[r5.x+0].xyzw);
    r7.y = dot(ControlPoints[r6.y].xyzw, icb[r5.y+0].xyzw);
    r7.z = dot(ControlPoints[r6.z].xyzw, icb[r5.z+0].xyzw);
    r7.w = dot(ControlPoints[r6.w].xyzw, icb[r5.w+0].xyzw);
    r5.x = dot(r7.xyzw, r4.xyzw);
    r4.x = dot(float4(1,1,1,1), r4.xyzw);
    r4.x = saturate(r5.x / r4.x);
    r4.x = 2.5 * r4.x;
    r4.yzw = float3(1,0.00390625,1.52587891e-005) * v0.www;
    r4.yzw = frac(r4.yzw);
    r4.yzw = r4.yzw * float3(2,2,2) + float3(-1,-1,-1);
    r4.xyz = r4.xxx * r4.yzw + v0.xyz;
  } else {
    r4.xyz = v0.xyz;
  }
  r2.xyzw = r4.yyyy * r2.xyzw;
  r1.xyzw = r4.xxxx * r1.xyzw + r2.xyzw;
  r1.xyzw = r4.zzzz * r3.xyzw + r1.xyzw;
  o0.xyzw = r1.xyzw + r0.xyzw;
  
o0=0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer RBIInfo
// {
//
//   row_major float4x4 ModelWorldMatrix;// Offset:    0 Size:    64
//   row_major float4x4 ModelWorldMatrixPrev;// Offset:   64 Size:    64 [unused]
//   float4 ModelDiffuseColor;          // Offset:  128 Size:    16 [unused]
//   float4 ModelAmbientColor;          // Offset:  144 Size:    16 [unused]
//   float4 ModelSpecularColor;         // Offset:  160 Size:    16 [unused]
//   float4 ModelEmissiveColor;         // Offset:  176 Size:    16 [unused]
//   float4 ModelDebugColor;            // Offset:  192 Size:    16 [unused]
//
// }
//
// cbuffer GlobalConstants
// {
//
//   float4 Globals[49];                // Offset:    0 Size:   784
//
// }
//
// cbuffer InstanceConsts
// {
//
//   float IsDeformed;                  // Offset:    0 Size:     4
//
// }
//
// cbuffer instanceconst
// {
//
//   float4 ControlPoints[216];         // Offset:    0 Size:  3456
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// GlobalConstants                   cbuffer      NA          NA    0        1
// InstanceConsts                    cbuffer      NA          NA    1        1
// instanceconst                     cbuffer      NA          NA    2        1
// RBIInfo                           cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb6[4], immediateIndexed
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[216], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 8
add r0.xyz, cb6[3].xyzx, -cb0[4].xyzx
mul r1.xyzw, cb6[0].yyyy, cb0[30].xyzw
mad r1.xyzw, cb6[0].xxxx, cb0[29].xyzw, r1.xyzw
mad r1.xyzw, cb6[0].zzzz, cb0[31].xyzw, r1.xyzw
mad r1.xyzw, cb6[0].wwww, cb0[32].xyzw, r1.xyzw
mul r2.xyzw, cb6[1].yyyy, cb0[30].xyzw
mad r2.xyzw, cb6[1].xxxx, cb0[29].xyzw, r2.xyzw
mad r2.xyzw, cb6[1].zzzz, cb0[31].xyzw, r2.xyzw
mad r2.xyzw, cb6[1].wwww, cb0[32].xyzw, r2.xyzw
mul r3.xyzw, cb6[2].yyyy, cb0[30].xyzw
mad r3.xyzw, cb6[2].xxxx, cb0[29].xyzw, r3.xyzw
mad r3.xyzw, cb6[2].zzzz, cb0[31].xyzw, r3.xyzw
mad r3.xyzw, cb6[2].wwww, cb0[32].xyzw, r3.xyzw
mul r4.xyzw, r0.yyyy, cb0[30].xyzw
mad r4.xyzw, r0.xxxx, cb0[29].xyzw, r4.xyzw
mad r0.xyzw, r0.zzzz, cb0[31].xyzw, r4.xyzw
mad r0.xyzw, cb6[3].wwww, cb0[32].xyzw, r0.xyzw
eq r4.x, cb1[0].x, l(1.000000)
if_nz r4.x
  mul r4.xyzw, v1.xyzw, l(127.996094, 127.996094, 127.996094, 127.996094)
  round_ni r5.xyzw, r4.xyzw
  add r5.xyzw, r5.xyzw, l(128.000000, 128.000000, 128.000000, 128.000000)
  ftou r5.xyzw, r5.xyzw
  frc r4.xyzw, r4.xyzw
  ushr r6.xyzw, r5.xyzw, l(2, 2, 2, 2)
  and r7.xyzw, r5.xyzw, l(-4, -4, -4, -4)
  iadd r5.xyzw, r5.xyzw, -r7.xyzw
  dp4 r7.x, cb2[r6.x + 0].xyzw, icb[r5.x + 0].xyzw
  dp4 r7.y, cb2[r6.y + 0].xyzw, icb[r5.y + 0].xyzw
  dp4 r7.z, cb2[r6.z + 0].xyzw, icb[r5.z + 0].xyzw
  dp4 r7.w, cb2[r6.w + 0].xyzw, icb[r5.w + 0].xyzw
  dp4 r5.x, r7.xyzw, r4.xyzw
  dp4 r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
  div_sat r4.x, r5.x, r4.x
  mul r4.x, r4.x, l(2.500000)
  mul r4.yzw, v0.wwww, l(0.000000, 1.000000, 0.003906, 0.000015)
  frc r4.yzw, r4.yyzw
  mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  mad r4.xyz, r4.xxxx, r4.yzwy, v0.xyzx
else 
  mov r4.xyz, v0.xyzx
endif 
mul r2.xyzw, r2.xyzw, r4.yyyy
mad r1.xyzw, r4.xxxx, r1.xyzw, r2.xyzw
mad r1.xyzw, r4.zzzz, r3.xyzw, r1.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 47 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//   using 3Dmigoto v1.2.44 on Sun Sep 25 23:48:17 2016
//
//
// Buffer Definitions: 
//
// cbuffer RBIInfo
// {
//
//   row_major float4x4 ModelWorldMatrix;// Offset:    0 Size:    64
//   row_major float4x4 ModelWorldMatrixPrev;// Offset:   64 Size:    64 [unused]
//   float4 ModelDiffuseColor;          // Offset:  128 Size:    16 [unused]
//   float4 ModelAmbientColor;          // Offset:  144 Size:    16 [unused]
//   float4 ModelSpecularColor;         // Offset:  160 Size:    16 [unused]
//   float4 ModelEmissiveColor;         // Offset:  176 Size:    16 [unused]
//   float4 ModelDebugColor;            // Offset:  192 Size:    16 [unused]
//
// }
//
// cbuffer GlobalConstants
// {
//
//   float4 Globals[49];                // Offset:    0 Size:   784
//
// }
//
// cbuffer InstanceConsts
// {
//
//   float IsDeformed;                  // Offset:    0 Size:     4
//
// }
//
// cbuffer instanceconst
// {
//
//   float4 ControlPoints[216];         // Offset:    0 Size:  3456
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// GlobalConstants                   cbuffer      NA          NA    0        1
// InstanceConsts                    cbuffer      NA          NA    1        1
// instanceconst                     cbuffer      NA          NA    2        1
// RBIInfo                           cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb6[4], immediateIndexed
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[216], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 8
add r0.xyz, cb6[3].xyzx, -cb0[4].xyzx
mul r1.xyzw, cb6[0].yyyy, cb0[30].xyzw
mad r1.xyzw, cb6[0].xxxx, cb0[29].xyzw, r1.xyzw
mad r1.xyzw, cb6[0].zzzz, cb0[31].xyzw, r1.xyzw
mad r1.xyzw, cb6[0].wwww, cb0[32].xyzw, r1.xyzw
mul r2.xyzw, cb6[1].yyyy, cb0[30].xyzw
mad r2.xyzw, cb6[1].xxxx, cb0[29].xyzw, r2.xyzw
mad r2.xyzw, cb6[1].zzzz, cb0[31].xyzw, r2.xyzw
mad r2.xyzw, cb6[1].wwww, cb0[32].xyzw, r2.xyzw
mul r3.xyzw, cb6[2].yyyy, cb0[30].xyzw
mad r3.xyzw, cb6[2].xxxx, cb0[29].xyzw, r3.xyzw
mad r3.xyzw, cb6[2].zzzz, cb0[31].xyzw, r3.xyzw
mad r3.xyzw, cb6[2].wwww, cb0[32].xyzw, r3.xyzw
mul r4.xyzw, r0.yyyy, cb0[30].xyzw
mad r4.xyzw, r0.xxxx, cb0[29].xyzw, r4.xyzw
mad r0.xyzw, r0.zzzz, cb0[31].xyzw, r4.xyzw
mad r0.xyzw, cb6[3].wwww, cb0[32].xyzw, r0.xyzw
eq r4.x, l(1.000000), cb1[0].x
if_nz r4.x
  mul r4.xyzw, v1.xyzw, l(127.996094, 127.996094, 127.996094, 127.996094)
  round_ni r5.xyzw, r4.xyzw
  add r5.xyzw, r5.xyzw, l(128.000000, 128.000000, 128.000000, 128.000000)
  ftou r5.xyzw, r5.xyzw
  utof r6.xyzw, r5.xyzw
  frc r4.xyzw, r4.xyzw
  ushr r5.xyzw, r5.xyzw, l(2, 2, 2, 2)
  ftoi r6.xyzw, r6.xyzw
  and r7.xyzw, r6.xyzw, l(-4, -4, -4, -4)
  itof r7.xyzw, r7.xyzw
  ftoi r7.xyzw, -r7.xyzw
  iadd r6.xyzw, r6.xyzw, r7.xyzw
  itof r6.xyzw, r6.xyzw
  ftou r6.xyzw, r6.xyzw
  dp4 r7.x, cb2[r5.x + 0].xyzw, icb[r6.x + 0].xyzw
  dp4 r7.y, cb2[r5.y + 0].xyzw, icb[r6.y + 0].xyzw
  dp4 r7.z, cb2[r5.z + 0].xyzw, icb[r6.z + 0].xyzw
  dp4 r7.w, cb2[r5.w + 0].xyzw, icb[r6.w + 0].xyzw
  dp4 r5.x, r7.xyzw, r4.xyzw
  dp4 r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
  div_sat r4.x, r5.x, r4.x
  mul r4.x, r4.x, l(2.500000)
  mul r4.yzw, v0.wwww, l(0.000000, 1.000000, 0.00390625000, 0.0000152587891)
  frc r4.yzw, r4.yyzw
  mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  mad r4.xyz, r4.xxxx, r4.yzwy, v0.xyzx
else 
  mov r4.xyz, v0.xyzx
endif 
mul r2.xyzw, r2.xyzw, r4.yyyy
mad r1.xyzw, r4.xxxx, r1.xyzw, r2.xyzw
mad r1.xyzw, r4.zzzz, r3.xyzw, r1.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 53 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
