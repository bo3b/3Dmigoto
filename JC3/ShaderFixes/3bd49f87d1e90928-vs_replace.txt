// HUD Crosshair
//PS aba3457ec46dd1a2 Gancho
//PS 9acce4803e196f96 Cruz  

cbuffer Constants : register(b0)
{
  float4 vfuniforms[144] : packoffset(c0);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include <ShaderFixes/crosshair.hlsl>

void main( 
  float4 v0 : SV_Position0,
  uint v1 : COLOR1,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float2 o2 : TEXCOORD2,
  out float4 o3 : SV_Position0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v1.x * 6;
  r0.y = mad((int)v1.x, 6, 1);
  r0.xy = (uint2)r0.xy;
  r0.xy = float2(0.100000001,0.100000001) + r0.xy;
  r0.xy = (uint2)r0.xy;
  o1.xyzw = vfuniforms[r0.y].xyzw;
  o0.xyzw = vfuniforms[r0.x].xyzw;
  r0.xyzw = mad((int4)v1.xxxx, int4(6,6,6,6), int4(2,2,4,4));
  r0.xyzw = (uint4)r0.xyzw;
  r0.xyzw = float4(0.100000001,1.10000002,0.100000001,1.10000002) + r0.xyzw;
  r0.xyzw = (uint4)r0.xyzw;
  o2.x = dot(v0.xyzw, vfuniforms[r0.z].xyzw);
  o2.y = dot(v0.xyzw, vfuniforms[r0.w].xyzw);
  o3.x = dot(v0.xyzw, vfuniforms[r0.x].xyzw);
  o3.y = dot(v0.xyzw, vfuniforms[r0.y].xyzw);
  o3.zw = float2(0,1);
  
  float4 stereo = StereoParams.Load(0);
  float4 iniParams = IniParams.Load(0);
  //float4 tex_filter = IniParams.Load(int2(2,0));
  //if (tex_filter.x == 2)
	//{
	
	if(o3.y < 0.7 && o3.y > -0.5)
	{
	o3.x += adjust_from_depth_buffer(0,0);
	}
	//}
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.27 on Tue Jan 26 19:10:17 2016
//
//
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 vfuniforms[144];            // Offset:    0 Size:  2304
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// COLOR                    1   x           1     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[144], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
dcl_temps 1
imul null, r0.x, v1.x, l(6)
imad r0.y, v1.x, l(6), l(1)
utof r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
ftou r0.xy, r0.xyxx
mov o1.xyzw, cb0[r0.y + 0].xyzw
mov o0.xyzw, cb0[r0.x + 0].xyzw
imad r0.xyzw, v1.xxxx, l(6, 6, 6, 6), l(2, 2, 4, 4)
utof r0.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, l(0.100000, 1.100000, 0.100000, 1.100000)
ftou r0.xyzw, r0.xyzw
dp4 o2.x, v0.xyzw, cb0[r0.z + 0].xyzw
dp4 o2.y, v0.xyzw, cb0[r0.w + 0].xyzw
dp4 o3.x, v0.xyzw, cb0[r0.x + 0].xyzw
dp4 o3.y, v0.xyzw, cb0[r0.y + 0].xyzw
mov o3.zw, l(0,0,0,1.000000)
ret 
// Approximately 17 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 