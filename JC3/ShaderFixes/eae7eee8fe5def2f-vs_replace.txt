// Halo Fire

cbuffer PerInstanceConstants : register(b1)
{
  row_major float4x4 WorldViewProjMatrix : packoffset(c0);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : COLOR1,
  float4 v3 : TEXCOORD0,
  float2 v4 : TEXCOORD1,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = v3.x * v1.w;
  r0.x = v3.z * r0.x;
  r0.y = cmp(r0.x < 0.00100000005);
  o1.z = 0.300000012 * r0.x;
  
  r1.xyzw = WorldViewProjMatrix._m10_m11_m12_m13 * v0.yyyy;
  r1.xyzw = v0.xxxx * WorldViewProjMatrix._m00_m01_m02_m03 + r1.xyzw;
  r1.xyzw = v0.zzzz * WorldViewProjMatrix._m20_m21_m22_m23 + r1.xyzw;
  r1.xyzw = WorldViewProjMatrix._m30_m31_m32_m33 + r1.xyzw;
  
  o0.xyzw = r0.yyyy ? float4(-1,-1,-1,1) : r1.xyzw;
  
  float4 stereo = StereoParams.Load(0);
  r1.x += stereo.x * (r1.w - stereo.y);
  
  o1.xy = float2(1.99993896,1.99993896) * v4.xy;
  r0.xyz = float3(0.5,-0.5,0.5) * r1.xyw;
  o2.zw = r1.zw;
  o2.xy = r0.xy + r0.zz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.27 on Thu Jan 28 12:53:05 2016
//
//
// Buffer Definitions: 
//
// cbuffer PerInstanceConstants
// {
//
//   row_major float4x4 WorldViewProjMatrix;// Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerInstanceConstants              cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float      w
// COLOR                    1   xyzw        2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   x z 
// TEXCOORD                 1   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.w
dcl_input v3.xz
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_temps 2
mul r0.x, v1.w, v3.x
mul r0.x, r0.x, v3.z
lt r0.y, r0.x, l(0.001000)
mul o1.z, r0.x, l(0.300000)
mul r1.xyzw, v0.yyyy, cb1[1].xyzw
mad r1.xyzw, v0.xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, v0.zzzz, cb1[2].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb1[3].xyzw
movc o0.xyzw, r0.yyyy, l(-1.000000,-1.000000,-1.000000,1.000000), r1.xyzw
mul o1.xy, v4.xyxx, l(1.999939, 1.999939, 0.000000, 0.000000)
mul r0.xyz, r1.xywx, l(0.500000, -0.500000, 0.500000, 0.000000)
mov o2.zw, r1.zzzw
add o2.xy, r0.zzzz, r0.xyxx
ret 
// Approximately 14 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
