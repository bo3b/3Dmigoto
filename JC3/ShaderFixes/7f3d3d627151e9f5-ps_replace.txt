// Sun Reflections on water
// VS 060e00b16069a06b

cbuffer cbInstanceConsts : register(b1)
{
  float4 InstanceConsts[2] : packoffset(c0);
}

SamplerState DiffuseTexture_s : register(s0);
SamplerState NormalTexture_s : register(s2);
Texture2D<float4> DiffuseTexture : register(t0);
Texture2D<float4> NormalTexture : register(t2);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float3 v6 : TEXCOORD5,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v3.xyz, v3.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = v3.xyz * r0.xxx;
  r1.xyz = NormalTexture.Sample(NormalTexture_s, v1.xy).xyz;
  r1.xyz = r1.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.xyz = r1.xyz * float3(0.100000001,0.100000001,0.100000001) + r0.xyz;
  r0.x = dot(r1.xyz, r0.xyz);
  r0.y = saturate(r1.z * 0.5 + 0.5);
  r0.x = 1 + -r0.x;
  r0.x = r0.x + r0.x;
  r0.z = saturate(dot(v4.xyz, r2.xyz));
  r0.w = r0.z * r0.z;
  r0.w = r0.w * r0.w;
  r0.z = r0.z * r0.w;
  r0.w = 5 * InstanceConsts[0].w;
  r0.z = r0.z * r0.w;
  r0.w = 1 + -v2.x;
  r0.x = saturate(r0.w * 3 + r0.x);
  r0.x = r0.z * r0.x;
  r1.xyzw = DiffuseTexture.Sample(DiffuseTexture_s, v1.xy).xyzw;
  r0.z = r1.w * r1.w;
  r0.z = -r0.z * v2.x + 1;
  r0.x = r0.x * r0.z + r0.y;
  r2.xy = v1.zw;
  r2.z = v3.w;
  r0.xyz = r0.xxx * v2.zzz + r2.xyz;
  r2.xyz = InstanceConsts[0].xyz * r0.xyz + InstanceConsts[1].xyz;
  r0.xyz = float3(1,1,1) + r0.xyz;
  r0.xyz = v6.xyz * r0.xyz;
  r1.xyz = float3(-0.583199978,-0.594399989,-0.655200005) + r1.xyz;
  o0.w = saturate(v2.w * r1.w);
  r1.xyz = v2.yyy * r1.xyz + float3(0.583199978,0.594399989,0.655200005);
  r1.xyz = r1.xyz * r2.xyz;
  o0.xyz = r1.xyz * r0.xyz + v5.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.39 on Sun Jun 05 09:45:34 2016
//
//
// Buffer Definitions: 
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts[2];          // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DiffuseTexture                    sampler      NA          NA    0        1
// NormalTexture                     sampler      NA          NA    2        1
// DiffuseTexture                    texture  float4          2d    0        1
// NormalTexture                     texture  float4          2d    2        1
// cbInstanceConsts                  cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 3
dp3 r0.x, v3.xyzx, v3.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v3.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t2.xyzw, s2
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r1.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r0.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
mad_sat r0.y, r1.z, l(0.500000), l(0.500000)
add r0.x, -r0.x, l(1.000000)
add r0.x, r0.x, r0.x
dp3_sat r0.z, v4.xyzx, r2.xyzx
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.w, r0.z
mul r0.w, cb1[0].w, l(5.000000)
mul r0.z, r0.w, r0.z
add r0.w, -v2.x, l(1.000000)
mad_sat r0.x, r0.w, l(3.000000), r0.x
mul r0.x, r0.x, r0.z
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.z, r1.w, r1.w
mad r0.z, -r0.z, v2.x, l(1.000000)
mad r0.x, r0.x, r0.z, r0.y
mov r2.xy, v1.zwzz
mov r2.z, v3.w
mad r0.xyz, r0.xxxx, v2.zzzz, r2.xyzx
mad r2.xyz, cb1[0].xyzx, r0.xyzx, cb1[1].xyzx
add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, v6.xyzx
add r1.xyz, r1.xyzx, l(-0.583200, -0.594400, -0.655200, 0.000000)
mul_sat o0.w, r1.w, v2.w
mad r1.xyz, v2.yyyy, r1.xyzx, l(0.583200, 0.594400, 0.655200, 0.000000)
mul r1.xyz, r2.xyzx, r1.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, v5.xyzx
ret 
// Approximately 35 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
