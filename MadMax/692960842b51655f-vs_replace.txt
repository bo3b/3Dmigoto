
cbuffer cbInstanceConsts : register(b1)
{
  float4 InstanceConsts[4] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = InstanceConsts[1].xyw * v0.yyy;
  r0.xyz = v0.xxx * InstanceConsts[0].xyw + r0.xyz;
  r0.xyz = v0.zzz * InstanceConsts[2].xyw + r0.xyz;
  o0.xyw = InstanceConsts[3].xyw + r0.xyz;
  o0.z = 0;
  o1.xy = v1.xy;
  
// Skybox, move to depth, allow for convergence
float4 stereo = StereoParams.Load(0);
o0.x += stereo.x * stereo.y;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.1 on Sat Sep 12 16:49:16 2015
//
//
// Buffer Definitions: 
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts[4];          // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbInstanceConsts                  cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 1
mul r0.xyz, v0.yyyy, cb1[1].xywx
mad r0.xyz, v0.xxxx, cb1[0].xywx, r0.xyzx
mad r0.xyz, v0.zzzz, cb1[2].xywx, r0.xyzx
add o0.xyw, r0.xyxz, cb1[3].xyxw
mov o0.z, l(0)
mov o1.xy, v1.xyxx
ret 
// Approximately 7 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
