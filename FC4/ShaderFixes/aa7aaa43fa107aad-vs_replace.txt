// Reflected object shader (unverified)

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer SUserClipPlaneParameterProvider : register(b1)
{
  float4 _UserClipPlane : packoffset(c0);
}

cbuffer CSceneGeometryParameterProvider : register(b2)
{
  float4 _MeshDecompression : packoffset(c0);
  float4 _NormalizedXYBBox : packoffset(c1);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  int4 v0 : position0,
  float4 v1 : normal0,
  float4 v2 : color0,
  float3 v3 : texcoord2,
  float2 v4 : texcoord3,
  float4 v5 : texcoord4,
  float4 v6 : texcoord5,
  float4 v7 : texcoord7,
  out float4 o0 : SV_Position0,
  out float o1 : SV_ClipDistance0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD1,
  out float3 o4 : TEXCOORD2,
  out float3 o5 : TEXCOORD3)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.w = v3.x;
  r1.xyz = v0.xyz;
  r1.xyz = r1.xyz * _MeshDecompression.yyy + _MeshDecompression.xxx;
  r0.x = v4.x;
  r0.y = v5.y;
  r0.z = v6.x;
  r1.w = 1.000000000e+000;
  r2.x = dot(r1.xyzw, r0.xyzw);
  r3.w = v3.y;
  r3.x = v4.y;
  r3.y = v5.z;
  r3.z = v6.y;
  r2.y = dot(r1.xyzw, r3.xyzw);
  r4.w = v3.z;
  r4.xy = v5.xw;
  r4.z = v6.z;
  r2.z = dot(r1.xyzw, r4.xyzw);
  r1.xyz = -_CameraPosition_DistanceScale.xyz + r2.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r1.xyz = r1.xyz * _CameraPositionFractions_ZOffsetWS.www + r2.xyz;
  r2.xyz = -_CameraPosition_DistanceScale.xyz + r1.xyz;
  r2.w = 1.000000000e+000;
  o0.x = dot(r2.xyzw, _ViewRotProjectionMatrix._m00_m10_m20_m30);
  o0.y = dot(r2.xyzw, _ViewRotProjectionMatrix._m01_m11_m21_m31);
  o0.z = dot(r2.xyzw, _ViewRotProjectionMatrix._m02_m12_m22_m32);
  o0.w = dot(r2.xyzw, _ViewRotProjectionMatrix._m03_m13_m23_m33);

if (_ViewportSize.x == 640 && _ViewportSize.y == 360 /* Low quality water */
 || _ViewportSize.x == _ViewportSize.y) { /* Medium - Ultra quality water */
	float4 stereo = StereoParams.Load(0);
	o0.x -= stereo.x * (o0.w - stereo.y) * 2;
}

  r1.w = 1.000000000e+000;
  o1.x = dot(_UserClipPlane.xyzw, r1.xyzw);
  o4.xyz = r1.xyz;
  r0.w = max(v2.w, _AmbientOcclusionRanges_SunOcclusionFactor.x);
  r0.w = min(r0.w, _AmbientOcclusionRanges_SunOcclusionFactor.y);
  r0.w = -_AmbientOcclusionRanges_SunOcclusionFactor.x + r0.w;
  o2.w = _AmbientOcclusionRanges_SunOcclusionFactor.z * r0.w;
  o2.xyz = v2.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r1.yzw = r2.yzx * r0.www;
  r1.x = 1.000000000e+000;
  r2.x = dot(_FogSHR.xyzw, r1.xyzw);
  r2.y = dot(_FogSHG.xyzw, r1.xyzw);
  r2.z = dot(_FogSHB.xyzw, r1.xyzw);
  o3.xyz = max(r2.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  o3.w = 0.000000000e+000;
  r1.xyz = v1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.x = dot(r1.xyz, r0.xyz);
  r0.y = dot(r1.xyz, r3.xyz);
  r0.z = dot(r1.xyz, r4.xyz);
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  o5.xyz = r0.xyz * r0.www;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer SUserClipPlaneParameterProvider
// {
//
//   float4 _UserClipPlane;             // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneGeometryParameterProvider
// {
//
//   float4 _MeshDecompression;         // Offset:    0 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   16 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// SUserClipPlaneParameterProvider    cbuffer      NA          NA    1        1
// CSceneGeometryParameterProvider    cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// normal                   0   xyzw        1     NONE   float   xyz 
// color                    0   xyzw        2     NONE   float   xyzw
// texcoord                 2   xyz         3     NONE   float   xyz 
// texcoord                 3   xy          4     NONE   float   xy  
// texcoord                 4   xyzw        5     NONE   float   xyzw
// texcoord                 5   xyzw        6     NONE   float   xyz 
// texcoord                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// SV_ClipDistance          0   x           1  CLIPDST   float   x   
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyz
dcl_input v4.xy
dcl_input v5.xyzw
dcl_input v6.xyz
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, clip_distance
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_temps 5
mov r0.w, v3.x
itof r1.xyz, v0.xyzx
mad r1.xyz, r1.xyzx, cb2[0].yyyy, cb2[0].xxxx
mov r0.x, v4.x
mov r0.y, v5.y
mov r0.z, v6.x
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, r0.xyzw
mov r3.w, v3.y
mov r3.x, v4.y
mov r3.y, v5.z
mov r3.z, v6.y
dp4 r2.y, r1.xyzw, r3.xyzw
mov r4.w, v3.z
mov r4.xy, v5.xwxx
mov r4.z, v6.z
dp4 r2.z, r1.xyzw, r4.xyzw
add r1.xyz, r2.xyzx, -cb0[8].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r1.xyzx, cb0[6].wwww, r2.xyzx
add r2.xyz, r1.xyzx, -cb0[8].xyzx
mov r2.w, l(1.000000)
dp4 o0.x, r2.xyzw, cb0[44].xyzw
dp4 o0.y, r2.xyzw, cb0[45].xyzw
dp4 o0.z, r2.xyzw, cb0[46].xyzw
dp4 o0.w, r2.xyzw, cb0[47].xyzw
mov r1.w, l(1.000000)
dp4 o1.x, cb1[0].xyzw, r1.xyzw
mov o4.xyz, r1.xyzx
max r0.w, v2.w, cb0[1].x
min r0.w, r0.w, cb0[1].y
add r0.w, r0.w, -cb0[1].x
mul o2.w, r0.w, cb0[1].z
mov o2.xyz, v2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, r2.yyzx
mov r1.x, l(1.000000)
dp4 r2.x, cb0[20].xyzw, r1.xyzw
dp4 r2.y, cb0[19].xyzw, r1.xyzw
dp4 r2.z, cb0[18].xyzw, r1.xyzw
max o3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o3.w, l(0)
mad r1.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r1.xyzx, r0.xyzx
dp3 r0.y, r1.xyzx, r3.xyzx
dp3 r0.z, r1.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o5.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 53 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer SUserClipPlaneParameterProvider
// {
//
//   float4 _UserClipPlane;             // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneGeometryParameterProvider
// {
//
//   float4 _MeshDecompression;         // Offset:    0 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   16 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// SUserClipPlaneParameterProvider    cbuffer      NA          NA    1        1
// CSceneGeometryParameterProvider    cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// normal                   0   xyzw        1     NONE   float   xyz 
// color                    0   xyzw        2     NONE   float   xyzw
// texcoord                 2   xyz         3     NONE   float   xyz 
// texcoord                 3   xy          4     NONE   float   xy  
// texcoord                 4   xyzw        5     NONE   float   xyzw
// texcoord                 5   xyzw        6     NONE   float   xyz 
// texcoord                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// SV_ClipDistance          0   x           1  CLIPDST   float   x   
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyz
dcl_input v4.xy
dcl_input v5.xyzw
dcl_input v6.xyz
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, clip_distance
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_temps 5
mov r0.w, v3.x
itof r1.xyz, v0.xyzx
mad r1.xyz, r1.xyzx, cb2[0].yyyy, cb2[0].xxxx
mov r0.x, v4.x
mov r0.y, v5.y
mov r0.z, v6.x
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, r0.xyzw
mov r3.w, v3.y
mov r3.x, v4.y
mov r3.y, v5.z
mov r3.z, v6.y
dp4 r2.y, r1.xyzw, r3.xyzw
mov r4.w, v3.z
mov r4.xy, v5.xwxx
mov r4.z, v6.z
dp4 r2.z, r1.xyzw, r4.xyzw
add r1.xyz, r2.xyzx, -cb0[8].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r1.xyzx, cb0[6].wwww, r2.xyzx
add r2.xyz, r1.xyzx, -cb0[8].xyzx
mov r2.w, l(1.000000)
dp4 o0.x, r2.xyzw, cb0[44].xyzw
dp4 o0.y, r2.xyzw, cb0[45].xyzw
dp4 o0.z, r2.xyzw, cb0[46].xyzw
dp4 o0.w, r2.xyzw, cb0[47].xyzw
mov r1.w, l(1.000000)
dp4 o1.x, cb1[0].xyzw, r1.xyzw
mov o4.xyz, r1.xyzx
max r0.w, v2.w, cb0[1].x
min r0.w, r0.w, cb0[1].y
add r0.w, r0.w, -cb0[1].x
mul o2.w, r0.w, cb0[1].z
mov o2.xyz, v2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, r2.yyzx
mov r1.x, l(1.000000)
dp4 r2.x, cb0[20].xyzw, r1.xyzw
dp4 r2.y, cb0[19].xyzw, r1.xyzw
dp4 r2.z, cb0[18].xyzw, r1.xyzw
max o3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o3.w, l(0)
mad r1.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r1.xyzx, r0.xyzx
dp3 r0.y, r1.xyzx, r3.xyzx
dp3 r0.z, r1.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o5.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 53 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
