// Reflected object shader (unverified)

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CGlobalShaderParameterProvider : register(b1)
{
  float4 _BurnColor : packoffset(c0);
  float4 _BurnParams : packoffset(c1);
  float4 _BurnParams2 : packoffset(c2);
  float4 _BurnParams3 : packoffset(c3);
  float4 _CascadedShadowScaleOffsetTile0 : packoffset(c4);
  float4 _CascadedShadowScaleOffsetTile1 : packoffset(c5);
  float4 _GlobalScalars : packoffset(c6);
  float4 _SSS_MiscParams : packoffset(c7);
  float4 _WindSimParamsX : packoffset(c8);
  float4 _WindSimParamsY : packoffset(c9);
  float2 _RangeDepthCompression : packoffset(c10);
  float3 _SSS_Color : packoffset(c11);
  int _BRDFHighQuality : packoffset(c11.w);
}

cbuffer SUserClipPlaneParameterProvider : register(b2)
{
  float4 _UserClipPlane : packoffset(c0);
}

cbuffer CSceneTransformParameterProvider : register(b3)
{
  float4x4 _WorldMatrix : packoffset(c0);
  float3 _WorldPositionFractions : packoffset(c4);
}

cbuffer CSceneGeometry : register(b4)
{
  float4 _GeometryPickingID : packoffset(c0);
  float4 _MeshDecompression : packoffset(c1);
  float4 _NormalizedXYBBox : packoffset(c2);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  int4 v0 : position0,
  int2 v1 : texcoord0,
  int2 v2 : texcoord1,
  float4 v3 : normal0,
  float4 v4 : color0,
  float4 v5 : fog0,
  float4 v6 : psize0,
  out float4 o0 : SV_Position0,
  out float o1 : SV_ClipDistance0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD1,
  out float3 o4 : TEXCOORD2,
  out float3 o5 : TEXCOORD3,
  out float3 o6 : TEXCOORD4,
  out float3 o7 : TEXCOORD5,
  out float3 o8 : TEXCOORD6)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v0.xyz;
  r0.xyz = r0.xyz * _MeshDecompression.yyy + _MeshDecompression.xxx;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, _WorldMatrix._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, _WorldMatrix._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, _WorldMatrix._m02_m12_m22_m32);
  r0.xyz = -_CameraPosition_DistanceScale.xyz + r1.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.xyz = r0.xyz * _CameraPositionFractions_ZOffsetWS.www + r1.xyz;
  r0.xyz = -_CameraPosition_DistanceScale.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r1.x = rsqrt(r0.w);
  r0.w = sqrt(r0.w);
  r0.xyz = r1.xxx * r0.xyz;
  r1.x = -_RangeDepthCompression.x + r0.w;
  r1.x = max(r1.x, 0.000000000e+000);
  r0.w = -r1.x + r0.w;
  r0.w = r1.x * _RangeDepthCompression.y + r0.w;
  r1.xyz = r0.xyz * r0.www;
  r0.xyz = r0.xyz * r0.www + _CameraPosition_DistanceScale.xyz;
  r1.w = 1.000000000e+000;
  o0.x = dot(r1.xyzw, _ViewRotProjectionMatrix._m00_m10_m20_m30);
  o0.y = dot(r1.xyzw, _ViewRotProjectionMatrix._m01_m11_m21_m31);
  o0.z = dot(r1.xyzw, _ViewRotProjectionMatrix._m02_m12_m22_m32);
  o0.w = dot(r1.xyzw, _ViewRotProjectionMatrix._m03_m13_m23_m33);

if (_ViewportSize.x == 640 && _ViewportSize.y == 360 /* Low quality water */
 || _ViewportSize.x == _ViewportSize.y) { /* Medium - Ultra quality water */
	float4 stereo = StereoParams.Load(0);
	o0.x -= stereo.x * (o0.w - stereo.y) * 2;
}

  r0.w = 1.000000000e+000;
  o1.x = dot(_UserClipPlane.xyzw, r0.xyzw);
  o5.xyz = r0.xyz;
  r0.xy = v1.xy;
  o2.xy = r0.xy * _MeshDecompression.ww + _MeshDecompression.zz;
  r0.xy = v2.xy;
  o2.zw = r0.xy * _MeshDecompression.ww + _MeshDecompression.zz;
  r0.x = max(v4.w, _AmbientOcclusionRanges_SunOcclusionFactor.x);
  r0.x = min(r0.x, _AmbientOcclusionRanges_SunOcclusionFactor.y);
  r0.x = -_AmbientOcclusionRanges_SunOcclusionFactor.x + r0.x;
  o3.w = saturate(_AmbientOcclusionRanges_SunOcclusionFactor.z * r0.x);
  o3.xyz = saturate(v4.xyz);
  r0.x = dot(r1.xyz, r1.xyz);
  r0.x = rsqrt(r0.x);
  r0.yzw = r1.yzx * r0.xxx;
  r0.x = 1.000000000e+000;
  r1.x = dot(_FogSHR.xyzw, r0.xyzw);
  r1.y = dot(_FogSHG.xyzw, r0.xyzw);
  r1.z = dot(_FogSHB.xyzw, r0.xyzw);
  o4.xyz = max(r1.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  r0.xyz = v3.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  o6.x = dot(r0.xyz, _WorldMatrix._m00_m10_m20);
  o6.y = dot(r0.xyz, _WorldMatrix._m01_m11_m21);
  o6.z = dot(r0.xyz, _WorldMatrix._m02_m12_m22);
  r0.xyz = v6.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  o7.x = dot(r0.xyz, _WorldMatrix._m00_m10_m20);
  o7.y = dot(r0.xyz, _WorldMatrix._m01_m11_m21);
  o7.z = dot(r0.xyz, _WorldMatrix._m02_m12_m22);
  r0.xyz = v5.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  o8.x = dot(r0.xyz, _WorldMatrix._m00_m10_m20);
  o8.y = dot(r0.xyz, _WorldMatrix._m01_m11_m21);
  o8.z = dot(r0.xyz, _WorldMatrix._m02_m12_m22);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16 [unused]
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer SUserClipPlaneParameterProvider
// {
//
//   float4 _UserClipPlane;             // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneTransformParameterProvider
// {
//
//   float4x4 _WorldMatrix;             // Offset:    0 Size:    64
//   float3 _WorldPositionFractions;    // Offset:   64 Size:    12 [unused]
//
// }
//
// cbuffer CSceneGeometry
// {
//
//   float4 _GeometryPickingID;         // Offset:    0 Size:    16 [unused]
//   float4 _MeshDecompression;         // Offset:   16 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   32 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// SUserClipPlaneParameterProvider    cbuffer      NA          NA    2        1
// CSceneTransformParameterProvider    cbuffer      NA          NA    3        1
// CSceneGeometry                    cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 0   xy          1     NONE     int   xy  
// texcoord                 1   xy          2     NONE     int   xy  
// normal                   0   xyzw        3     NONE   float   xyz 
// color                    0   xyzw        4     NONE   float   xyzw
// fog                      0   xyzw        5     NONE   float   xyz 
// psize                    0   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// SV_ClipDistance          0   x           1  CLIPDST   float   x   
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[11], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xy
dcl_input v3.xyz
dcl_input v4.xyzw
dcl_input v5.xyz
dcl_input v6.xyz
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, clip_distance
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyz
dcl_temps 2
itof r0.xyz, v0.xyzx
mad r0.xyz, r0.xyzx, cb4[1].yyyy, cb4[1].xxxx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb3[0].xyzw
dp4 r1.y, r0.xyzw, cb3[1].xyzw
dp4 r1.z, r0.xyzw, cb3[2].xyzw
add r0.xyz, r1.xyzx, -cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r0.xyzx, cb0[6].wwww, r1.xyzx
add r0.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
sqrt r0.w, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
add r1.x, r0.w, -cb1[10].x
max r1.x, r1.x, l(0.000000)
add r0.w, r0.w, -r1.x
mad r0.w, r1.x, cb1[10].y, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb0[8].xyzx
mov r1.w, l(1.000000)
dp4 o0.x, r1.xyzw, cb0[44].xyzw
dp4 o0.y, r1.xyzw, cb0[45].xyzw
dp4 o0.z, r1.xyzw, cb0[46].xyzw
dp4 o0.w, r1.xyzw, cb0[47].xyzw
mov r0.w, l(1.000000)
dp4 o1.x, cb2[0].xyzw, r0.xyzw
mov o5.xyz, r0.xyzx
itof r0.xy, v1.xyxx
mad o2.xy, r0.xyxx, cb4[1].wwww, cb4[1].zzzz
itof r0.xy, v2.xyxx
mad o2.zw, r0.xxxy, cb4[1].wwww, cb4[1].zzzz
max r0.x, v4.w, cb0[1].x
min r0.x, r0.x, cb0[1].y
add r0.x, r0.x, -cb0[1].x
mul_sat o3.w, r0.x, cb0[1].z
mov_sat o3.xyz, v4.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, r1.yyzx
mov r0.x, l(1.000000)
dp4 r1.x, cb0[20].xyzw, r0.xyzw
dp4 r1.y, cb0[19].xyzw, r0.xyzw
dp4 r1.z, cb0[18].xyzw, r0.xyzw
max o4.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.xyz, v3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 o6.x, r0.xyzx, cb3[0].xyzx
dp3 o6.y, r0.xyzx, cb3[1].xyzx
dp3 o6.z, r0.xyzx, cb3[2].xyzx
mad r0.xyz, v6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 o7.x, r0.xyzx, cb3[0].xyzx
dp3 o7.y, r0.xyzx, cb3[1].xyzx
dp3 o7.z, r0.xyzx, cb3[2].xyzx
mad r0.xyz, v5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 o8.x, r0.xyzx, cb3[0].xyzx
dp3 o8.y, r0.xyzx, cb3[1].xyzx
dp3 o8.z, r0.xyzx, cb3[2].xyzx
ret 
// Approximately 60 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16 [unused]
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer SUserClipPlaneParameterProvider
// {
//
//   float4 _UserClipPlane;             // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneTransformParameterProvider
// {
//
//   float4x4 _WorldMatrix;             // Offset:    0 Size:    64
//   float3 _WorldPositionFractions;    // Offset:   64 Size:    12 [unused]
//
// }
//
// cbuffer CSceneGeometry
// {
//
//   float4 _GeometryPickingID;         // Offset:    0 Size:    16 [unused]
//   float4 _MeshDecompression;         // Offset:   16 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   32 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// SUserClipPlaneParameterProvider    cbuffer      NA          NA    2        1
// CSceneTransformParameterProvider    cbuffer      NA          NA    3        1
// CSceneGeometry                    cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 0   xy          1     NONE     int   xy  
// texcoord                 1   xy          2     NONE     int   xy  
// normal                   0   xyzw        3     NONE   float   xyz 
// color                    0   xyzw        4     NONE   float   xyzw
// fog                      0   xyzw        5     NONE   float   xyz 
// psize                    0   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// SV_ClipDistance          0   x           1  CLIPDST   float   x   
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[11], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xy
dcl_input v3.xyz
dcl_input v4.xyzw
dcl_input v5.xyz
dcl_input v6.xyz
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, clip_distance
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyz
dcl_temps 2
itof r0.xyz, v0.xyzx
mad r0.xyz, r0.xyzx, cb4[1].yyyy, cb4[1].xxxx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb3[0].xyzw
dp4 r1.y, r0.xyzw, cb3[1].xyzw
dp4 r1.z, r0.xyzw, cb3[2].xyzw
add r0.xyz, r1.xyzx, -cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r0.xyzx, cb0[6].wwww, r1.xyzx
add r0.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
sqrt r0.w, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
add r1.x, r0.w, -cb1[10].x
max r1.x, r1.x, l(0.000000)
add r0.w, r0.w, -r1.x
mad r0.w, r1.x, cb1[10].y, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb0[8].xyzx
mov r1.w, l(1.000000)
dp4 o0.x, r1.xyzw, cb0[44].xyzw
dp4 o0.y, r1.xyzw, cb0[45].xyzw
dp4 o0.z, r1.xyzw, cb0[46].xyzw
dp4 o0.w, r1.xyzw, cb0[47].xyzw
mov r0.w, l(1.000000)
dp4 o1.x, cb2[0].xyzw, r0.xyzw
mov o5.xyz, r0.xyzx
itof r0.xy, v1.xyxx
mad o2.xy, r0.xyxx, cb4[1].wwww, cb4[1].zzzz
itof r0.xy, v2.xyxx
mad o2.zw, r0.xxxy, cb4[1].wwww, cb4[1].zzzz
max r0.x, v4.w, cb0[1].x
min r0.x, r0.x, cb0[1].y
add r0.x, r0.x, -cb0[1].x
mul_sat o3.w, r0.x, cb0[1].z
mov_sat o3.xyz, v4.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, r1.yyzx
mov r0.x, l(1.000000)
dp4 r1.x, cb0[20].xyzw, r0.xyzw
dp4 r1.y, cb0[19].xyzw, r0.xyzw
dp4 r1.z, cb0[18].xyzw, r0.xyzw
max o4.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.xyz, v3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 o6.x, r0.xyzx, cb3[0].xyzx
dp3 o6.y, r0.xyzx, cb3[1].xyzx
dp3 o6.z, r0.xyzx, cb3[2].xyzx
mad r0.xyz, v6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 o7.x, r0.xyzx, cb3[0].xyzx
dp3 o7.y, r0.xyzx, cb3[1].xyzx
dp3 o7.z, r0.xyzx, cb3[2].xyzx
mad r0.xyz, v5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 o8.x, r0.xyzx, cb3[0].xyzx
dp3 o8.y, r0.xyzx, cb3[1].xyzx
dp3 o8.z, r0.xyzx, cb3[2].xyzx
ret 
// Approximately 60 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
