// Water surface in Himalayan caves (MSAA2/4/8)

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CGlobalShaderParameterProvider : register(b1)
{
  float4 _BurnColor : packoffset(c0);
  float4 _BurnParams : packoffset(c1);
  float4 _BurnParams2 : packoffset(c2);
  float4 _BurnParams3 : packoffset(c3);
  float4 _CascadedShadowScaleOffsetTile0 : packoffset(c4);
  float4 _CascadedShadowScaleOffsetTile1 : packoffset(c5);
  float4 _GlobalScalars : packoffset(c6);
  float4 _SSS_MiscParams : packoffset(c7);
  float4 _WindSimParamsX : packoffset(c8);
  float4 _WindSimParamsY : packoffset(c9);
  float2 _RangeDepthCompression : packoffset(c10);
  float3 _SSS_Color : packoffset(c11);
  int _BRDFHighQuality : packoffset(c11.w);
}

cbuffer CSceneTransformParameterProvider : register(b2)
{
  float4x4 _WorldMatrix : packoffset(c0);
  float3 _WorldPositionFractions : packoffset(c4);
}

cbuffer CSceneGeometry : register(b3)
{
  float4 _GeometryPickingID : packoffset(c0);
  float4 _MeshDecompression : packoffset(c1);
  float4 _NormalizedXYBBox : packoffset(c2);
}

cbuffer CWaterReflectionParameterProvider : register(b4)
{
  float4 _WaterReflectionColor : packoffset(c0);
  float4 _WaterReflectionPlane : packoffset(c1);
  float4 _WaterReflectionTexCoordRange : packoffset(c2);
  float4x4 _WaterReflectionTransform : packoffset(c3);
  float _WaterLevelAdjustment : packoffset(c7);
}

cbuffer CWaterParameterProvider : register(b5)
{
  float4 _BorderAlphaMask : packoffset(c0);
  float _ReflectionInvSquareFadeDistance : packoffset(c1);
  float _ReflectionSquareFadeDistance : packoffset(c1.y);
  float _SunLightScale : packoffset(c1.z);
  bool _DisableThirdNormalUVs : packoffset(c1.w);
}

cbuffer Water : register(b6)
{
  float _NormalOffsetScale : packoffset(c0);
  float2 _Tiling1 : packoffset(c0.y);
  float2 _Tiling2 : packoffset(c1);
  float2 _Dir1 : packoffset(c1.z);
  float2 _Dir2 : packoffset(c2);
  float2 _Tiling3 : packoffset(c2.z);
  float2 _Dir3 : packoffset(c3);
  float _NormalTexture3Blend : packoffset(c3.z);
  float _CausticsIntensity : packoffset(c3.w);
  float _CausticsScale : packoffset(c4);
  float _ReflectionNormalOffsetScale : packoffset(c4.y);
  float _ReflectionColorOffset : packoffset(c4.z);
  float _ReflectionColorScale : packoffset(c4.w);
  float _ReflectionAnisotropicDistanceScale : packoffset(c5);
  float _ReflectionAnisotropicDistanceOffset : packoffset(c5.y);
  float2 _DiffuseTiling : packoffset(c5.z);
  float _DiffuseSpeedFactor : packoffset(c6);
  float4 _WaterColor : packoffset(c7);
  float4 _UnderwaterColor : packoffset(c8);
  float4 _Specular : packoffset(c9);
  float2 _BaseTiling : packoffset(c10);
  float4 _RefractionWaveInfo : packoffset(c11);
  float _NormalModifier : packoffset(c12);
  float4 _Extinctions : packoffset(c13);
  float4 _MaterialPickingID : packoffset(c14);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  int4 v0 : position0,
  int2 v1 : texcoord0,
  int2 v2 : texcoord1,
  float4 v3 : normal0,
  float4 v4 : color0,
  float4 v5 : fog0,
  float4 v6 : psize0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float3 o4 : TEXCOORD3,
  out float3 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.w = 1.000000000e+000;
  r1.w = _WaterLevelAdjustment + _WorldMatrix._m32;
  r1.xyz = _WorldMatrix._m02_m12_m22;
  r2.xyz = v0.xyz;
  r2.xyz = r2.xyz * _MeshDecompression.yyy + _MeshDecompression.xxx;
  r2.w = 1.000000000e+000;
  r1.z = dot(r2.xyzw, r1.xyzw);
  r1.x = dot(r2.xyzw, _WorldMatrix._m00_m10_m20_m30);
  r1.y = dot(r2.xyzw, _WorldMatrix._m01_m11_m21_m31);
  r0.xyz = -_CameraPosition_DistanceScale.xyz + r1.xyz;
  r2.x = dot(r0.xyzw, _ViewRotProjectionMatrix._m00_m10_m20_m30);
  r2.y = dot(r0.xyzw, _ViewRotProjectionMatrix._m01_m11_m21_m31);
  r2.w = dot(r0.xyzw, _ViewRotProjectionMatrix._m03_m13_m23_m33);
  o0.z = dot(r0.xyzw, _ViewRotProjectionMatrix._m02_m12_m22_m32);
  o0.xyw = r2.xyw;

float4 stereo = StereoParams.Load(0);
r2.x += stereo.x * (r2.w - stereo.y);

  r3.xyzw = _DepthTextureScaleOffset.xyzw * r2.xyww;
  o5.z = r2.w;
  o5.xy = r3.xy + r3.zw;
  r2.xy = _Dir1.xy * _GlobalScalars.yy + r1.xy;
  r2.xy = _BaseTiling.xy * r2.xy;
  r2.xy = _Tiling1.xy * r2.xy;
  r3.xy = _Dir2.xy * _GlobalScalars.yy + r1.xy;
  r3.xy = _BaseTiling.xy * r3.xy;
  r2.zw = _Tiling2.xy * r3.xy;
  o1.xyzw = -r2.xyzw;
  o2.w = 1.000000000e+000;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.yzw = r0.yzx * r0.www;
  r0.x = 1.000000000e+000;
  r2.x = dot(_FogSHR.xyzw, r0.xyzw);
  r2.y = dot(_FogSHG.xyzw, r0.xyzw);
  r2.z = dot(_FogSHB.xyzw, r0.xyzw);
  o2.xyz = max(r2.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  r1.w = 1.000000000e+000;
  o3.x = dot(r1.xyzw, _ViewMatrix._m00_m10_m20_m30);
  o3.y = dot(r1.xyzw, _ViewMatrix._m01_m11_m21_m31);
  o3.z = dot(r1.xyzw, _ViewMatrix._m02_m12_m22_m32);
  o4.xyz = r1.xyz;
  r0.xy = _DiffuseSpeedFactor * _Dir2.xy;
  r0.xy = r0.xy * _GlobalScalars.yy + r1.xy;
  r0.zw = _Dir3.xy * _GlobalScalars.yy + r1.xy;
  r0.xyzw = _BaseTiling.xyxy * r0.xyzw;
  r0.zw = _Tiling3.xy * r0.zw;
  o6.xy = _DisableThirdNormalUVs ? float2(0.000000e+000,0.000000e+000) : -r0.zw;
  o6.zw = _DiffuseTiling.xy * r0.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8 [unused]
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer CSceneTransformParameterProvider
// {
//
//   float4x4 _WorldMatrix;             // Offset:    0 Size:    64
//   float3 _WorldPositionFractions;    // Offset:   64 Size:    12 [unused]
//
// }
//
// cbuffer CSceneGeometry
// {
//
//   float4 _GeometryPickingID;         // Offset:    0 Size:    16 [unused]
//   float4 _MeshDecompression;         // Offset:   16 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   32 Size:    16 [unused]
//
// }
//
// cbuffer CWaterReflectionParameterProvider
// {
//
//   float4 _WaterReflectionColor;      // Offset:    0 Size:    16 [unused]
//   float4 _WaterReflectionPlane;      // Offset:   16 Size:    16 [unused]
//   float4 _WaterReflectionTexCoordRange;// Offset:   32 Size:    16 [unused]
//   float4x4 _WaterReflectionTransform;// Offset:   48 Size:    64 [unused]
//   float _WaterLevelAdjustment;       // Offset:  112 Size:     4
//
// }
//
// cbuffer CWaterParameterProvider
// {
//
//   float4 _BorderAlphaMask;           // Offset:    0 Size:    16 [unused]
//   float _ReflectionInvSquareFadeDistance;// Offset:   16 Size:     4 [unused]
//   float _ReflectionSquareFadeDistance;// Offset:   20 Size:     4 [unused]
//   float _SunLightScale;              // Offset:   24 Size:     4 [unused]
//   bool _DisableThirdNormalUVs;       // Offset:   28 Size:     4
//
// }
//
// cbuffer Water
// {
//
//   float _NormalOffsetScale;          // Offset:    0 Size:     4 [unused]
//   float2 _Tiling1;                   // Offset:    4 Size:     8
//   float2 _Tiling2;                   // Offset:   16 Size:     8
//   float2 _Dir1;                      // Offset:   24 Size:     8
//   float2 _Dir2;                      // Offset:   32 Size:     8
//   float2 _Tiling3;                   // Offset:   40 Size:     8
//   float2 _Dir3;                      // Offset:   48 Size:     8
//   float _NormalTexture3Blend;        // Offset:   56 Size:     4 [unused]
//   float _CausticsIntensity;          // Offset:   60 Size:     4 [unused]
//   float _CausticsScale;              // Offset:   64 Size:     4 [unused]
//   float _ReflectionNormalOffsetScale;// Offset:   68 Size:     4 [unused]
//   float _ReflectionColorOffset;      // Offset:   72 Size:     4 [unused]
//   float _ReflectionColorScale;       // Offset:   76 Size:     4 [unused]
//   float _ReflectionAnisotropicDistanceScale;// Offset:   80 Size:     4 [unused]
//   float _ReflectionAnisotropicDistanceOffset;// Offset:   84 Size:     4 [unused]
//   float2 _DiffuseTiling;             // Offset:   88 Size:     8
//   float _DiffuseSpeedFactor;         // Offset:   96 Size:     4
//   float4 _WaterColor;                // Offset:  112 Size:    16 [unused]
//   float4 _UnderwaterColor;           // Offset:  128 Size:    16 [unused]
//   float4 _Specular;                  // Offset:  144 Size:    16 [unused]
//   float2 _BaseTiling;                // Offset:  160 Size:     8
//   float4 _RefractionWaveInfo;        // Offset:  176 Size:    16 [unused]
//   float _NormalModifier;             // Offset:  192 Size:     4 [unused]
//   float4 _Extinctions;               // Offset:  208 Size:    16 [unused]
//   float4 _MaterialPickingID;         // Offset:  224 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// CSceneTransformParameterProvider    cbuffer      NA          NA    2        1
// CSceneGeometry                    cbuffer      NA          NA    3        1
// CWaterReflectionParameterProvider    cbuffer      NA          NA    4        1
// CWaterParameterProvider           cbuffer      NA          NA    5        1
// Water                             cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 0   xy          1     NONE     int       
// texcoord                 1   xy          2     NONE     int       
// normal                   0   xyzw        3     NONE   float       
// color                    0   xyzw        4     NONE   float       
// fog                      0   xyzw        5     NONE   float       
// psize                    0   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[11], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 4
mov r0.w, l(1.000000)
add r1.w, cb2[2].w, cb4[7].x
mov r1.xyz, cb2[2].xyzx
itof r2.xyz, v0.xyzx
mad r2.xyz, r2.xyzx, cb3[1].yyyy, cb3[1].xxxx
mov r2.w, l(1.000000)
dp4 r1.z, r2.xyzw, r1.xyzw
dp4 r1.x, r2.xyzw, cb2[0].xyzw
dp4 r1.y, r2.xyzw, cb2[1].xyzw
add r0.xyz, r1.xyzx, -cb0[8].xyzx
dp4 r2.x, r0.xyzw, cb0[44].xyzw
dp4 r2.y, r0.xyzw, cb0[45].xyzw
dp4 r2.w, r0.xyzw, cb0[47].xyzw
dp4 o0.z, r0.xyzw, cb0[46].xyzw
mov o0.xyw, r2.xyxw
mul r3.xyzw, r2.xyww, cb0[16].xyzw
mov o5.z, r2.w
add o5.xy, r3.zwzz, r3.xyxx
mad r2.xy, cb6[1].zwzz, cb1[6].yyyy, r1.xyxx
mul r2.xy, r2.xyxx, cb6[10].xyxx
mul r2.xy, r2.xyxx, cb6[0].yzyy
mad r3.xy, cb6[2].xyxx, cb1[6].yyyy, r1.xyxx
mul r3.xy, r3.xyxx, cb6[10].xyxx
mul r2.zw, r3.xxxy, cb6[1].xxxy
mov o1.xyzw, -r2.xyzw
mov o2.w, l(1.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.yzw, r0.wwww, r0.yyzx
mov r0.x, l(1.000000)
dp4 r2.x, cb0[20].xyzw, r0.xyzw
dp4 r2.y, cb0[19].xyzw, r0.xyzw
dp4 r2.z, cb0[18].xyzw, r0.xyzw
max o2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 o3.x, r1.xyzw, cb0[35].xyzw
dp4 o3.y, r1.xyzw, cb0[36].xyzw
dp4 o3.z, r1.xyzw, cb0[37].xyzw
mov o4.xyz, r1.xyzx
mul r0.xy, cb6[2].xyxx, cb6[6].xxxx
mad r0.xy, r0.xyxx, cb1[6].yyyy, r1.xyxx
mad r0.zw, cb6[3].xxxy, cb1[6].yyyy, r1.xxxy
mul r0.xyzw, r0.xyzw, cb6[10].xyxy
mul r0.zw, r0.zzzw, cb6[2].zzzw
movc o6.xy, cb5[1].wwww, l(0,0,0,0), -r0.zwzz
mul o6.zw, r0.xxxy, cb6[5].zzzw
ret 
// Approximately 47 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
