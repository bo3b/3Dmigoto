// Underwater fog volume (MSAA2, Himalayas, caustics fix unverified)

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CWaterCameraPlaneParameterProvider : register(b1)
{
  float4 _QuadParams : packoffset(c0);
  float4 _UnderwaterCaustics : packoffset(c1);
  float4 _UnderwaterExtinctions : packoffset(c2);
  float3 _UnderwaterColorDeep : packoffset(c3);
  float3 _UnderwaterColorShallow : packoffset(c4);
  float _CausticsIntensity : packoffset(c4.w);
  float _WaterLevel : packoffset(c5);
}
SamplerState CausticsTexture__SampObj___s : register(s0);
Texture2DMS<float4,2> DepthVPSampler_TextureObject : register(t0);
Texture2D<float4> CausticsTexture__TexObj__ : register(t1);
Texture2DMS<float4,2> GBufferT1_TextureObject : register(t2);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float v1 : SV_ClipDistance0,
  float3 v2 : TEXCOORD0,
  float3 v3 : TEXCOORD1,
  float2 v4 : TEXCOORD2,
  uint v5 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  GBufferT1_TextureObject.GetDimensions(uiDest.x, uiDest.y, uiDest.z);
  r0.xy = uiDest.xy;
  r0.xy = r0.xy;
  r0.xy = v4.xy * r0.xy;
  r0.xy = (int2)r0.xy;
  r0.zw = float2(0.000000e+000,0.000000e+000);
  r0.xyzw = GBufferT1_TextureObject.Load(r0.xy, 0.000000000e+000).xyzw;
  r0.w = 3.000000000e+000 * r0.w;
  r0.xyz = r0.xyz * float3(1.414214e+000,1.414214e+000,1.414214e+000) + float3(-7.071068e-001,-7.071068e-001,-7.071068e-001);
  r0.w = (uint)r0.w;
  r1.xy = (int)r0.ww == int2(1,2);
  r1.z = saturate(dot(r0.xyz, r0.xyz));
  r1.z = 1.000000000e+000 + -r1.z;
  r1.z = sqrt(r1.z);
  r1.w = r0.w ? r1.z : r0.x;
  r2.z = r0.w ? r0.x : r1.z;
  r3.xy = r1.xy ? r1.zz : r0.yz;
  r0.x = r1.x ? r0.y : r1.w;
  r3.z = r1.y ? r0.z : r0.x;
  r2.xy = float2(2.000000e+000,2.000000e+000);
  r0.xyz = r2.xyz * r2.zzz;
  r3.w = -2.000000000e+000;
  r0.xyz = r0.xyz * r3.yzw + float3(0.000000e+000,0.000000e+000,1.000000e+000);
  r1.xz = r3.zx;
  r2.xyz = r3.wyw * r3.xxx;
  r1.y = 2.000000000e+000;
  r0.xyz = r2.xyz * r1.xyz + r0.xyz;
  r0.xyz = float3(-2.000000e-001,-2.000000e-001,-2.000000e-001) + abs(r0.xyz);
  r0.xyz = float3(7.000000e+000,7.000000e+000,7.000000e+000) * r0.xyz;
  r0.xyz = max(r0.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  r0.w = r0.x + r0.y;
  r0.w = r0.w + r0.z;
  r0.xyz = r0.xyz / r0.www;
  DepthVPSampler_TextureObject.GetDimensions(uiDest.x, uiDest.y, uiDest.z);
  r1.xy = uiDest.xy;
  r1.xy = r1.xy;
  r2.xy = v2.xy / v2.zz;
  r1.xy = r2.xy * r1.xy;
  r1.xy = (int2)r1.xy;
  r1.zw = float2(0.000000e+000,0.000000e+000);
  r2.z = DepthVPSampler_TextureObject.Load(r1.xy, 0.000000000e+000).x;
  r2.w = 1.000000000e+000;
  r0.w = dot(r2.xyzw, _InvProjectionMatrix._m02_m12_m22_m32);
  r1.x = dot(r2.xyzw, _InvProjectionMatrix._m03_m13_m23_m33);
  r0.w = -r0.w / r1.x;
  r1.x = dot(v3.xyz, v3.xyz);
  r1.x = sqrt(r1.x);
  r0.w = r1.x * r0.w;
  r2.x = r0.w / v2.z;
  r1.yzw = v3.xyz / r1.xxx;
  r2.yzw = r1.yzw * r2.xxx + _CameraPosition_DistanceScale.xyz;
  r0.w = _WaterLevel + -_CameraPosition_DistanceScale.z;
  r3.x = r0.w / r1.w;
  r0.w = r3.x < r2.x;
  r3.yzw = r1.yzw * r3.xxx + _CameraPosition_DistanceScale.xyz;
  r3.xyzw = r0.wwww ? r3.xyzw : r2.xyzw;
  r0.w = 0.000000000e+000 < r1.w;
  r2.xyzw = r0.wwww ? r3.xyzw : r2.xyzw;

// Line up underwater caustics with ground:
// Unverified - caustics not visible when I encounted this
float4 stereo = StereoParams.Load(0);
float4 tmp = mul(float4(r2.yzw, 1), _ViewProjectionMatrix);
tmp.x -= stereo.x * (tmp.w - stereo.y);
r2.yzw = mul(mul(tmp, _InvProjectionMatrix), _InvViewMatrix);

  r3.xyzw = _UnderwaterCaustics.xxxx * r2.zwwy;
  r3.xyzw = float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) * r3.xyzw;
  r1.yzw = CausticsTexture__TexObj__.Sample(CausticsTexture__SampObj___s, r3.zw).xyz;
  r3.xyz = CausticsTexture__TexObj__.Sample(CausticsTexture__SampObj___s, r3.xy).xyz;
  r1.yzw = r1.yzw * r0.yyy;
  r0.xyw = r3.xyz * r0.xxx + r1.yzw;
  r1.yz = _UnderwaterCaustics.xx * r2.yz;
  r1.yz = float2(5.000000e-001,5.000000e-001) * r1.yz;
  r1.yzw = CausticsTexture__TexObj__.Sample(CausticsTexture__SampObj___s, r1.yz).xyz;
  r0.xyz = r1.yzw * r0.zzz + r0.xyw;
  r0.w = r2.x + -r1.x;
  r1.x = _WaterLevel + -r2.w;
  r1.xy = -_UnderwaterExtinctions.wx * r1.xx;
  r1.xy = exp2(r1.xy);
  r1.z = -4.328085110e-002 * r0.w;
  r0.w = -_UnderwaterExtinctions.z * r0.w;
  r0.w = exp2(r0.w);
  r1.z = exp2(r1.z);
  r1.yz = float2(1.000000e+000,1.000000e+000) + -r1.yz;
  r1.z = max(r1.z, 0.000000000e+000);
  r2.xyz = -_UnderwaterColorShallow.xyz + _UnderwaterColorDeep.xyz;
  r2.xyz = r1.zzz * r2.xyz + _UnderwaterColorShallow.xyz;
  r2.xyz = _AmbientColorMultiplier.xyz * r2.xyz;
  r1.x = saturate(r1.x);
  r1.z = _CausticsIntensity * r1.x;
  o0.w = -r0.w * r1.x + 1.000000000e+000;
  r1.x = r1.z * r1.y;
  r0.xyz = r0.xyz * r1.xxx + -r2.xyz;
  r0.xyz = r0.www * r0.xyz + r2.xyz;
  o0.xyz = _BloomAdaptationFactor.zzz * r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CWaterCameraPlaneParameterProvider
// {
//
//   float4 _QuadParams;                // Offset:    0 Size:    16 [unused]
//   float4 _UnderwaterCaustics;        // Offset:   16 Size:    16
//   float4 _UnderwaterExtinctions;     // Offset:   32 Size:    16
//   float3 _UnderwaterColorDeep;       // Offset:   48 Size:    12
//   float3 _UnderwaterColorShallow;    // Offset:   64 Size:    12
//   float _CausticsIntensity;          // Offset:   76 Size:     4
//   float _WaterLevel;                 // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CausticsTexture__SampObj__        sampler      NA          NA    0        1
// DepthVPSampler_TextureObject      texture  float4       2dMS2    0        1
// CausticsTexture__TexObj__         texture  float4          2d    1        1
// GBufferT1_TextureObject           texture  float4       2dMS2    2        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CWaterCameraPlaneParameterProvider    cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// SV_ClipDistance          0   x           1  CLIPDST   float       
// TEXCOORD                 0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xy          4     NONE   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2dms(2) (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2dms(2) (float,float,float,float) t2
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 4
resinfo_uint r0.xy, l(0), t2.xyzw
utof r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, v4.xyxx
ftoi r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ldms r0.xyzw, r0.xyzw, t2.xyzw, l(0)
mul r0.w, r0.w, l(3.000000)
mad r0.xyz, r0.xyzx, l(1.414214, 1.414214, 1.414214, 0.000000), l(-0.707107, -0.707107, -0.707107, 0.000000)
ftou r0.w, r0.w
ieq r1.xy, r0.wwww, l(1, 2, 0, 0)
dp3_sat r1.z, r0.xyzx, r0.xyzx
add r1.z, -r1.z, l(1.000000)
sqrt r1.z, r1.z
movc r1.w, r0.w, r1.z, r0.x
movc r2.z, r0.w, r0.x, r1.z
movc r3.xy, r1.xyxx, r1.zzzz, r0.yzyy
movc r0.x, r1.x, r0.y, r1.w
movc r3.z, r1.y, r0.z, r0.x
mov r2.xy, l(2.000000,2.000000,0,0)
mul r0.xyz, r2.zzzz, r2.xyzx
mov r3.w, l(-2.000000)
mad r0.xyz, r0.xyzx, r3.yzwy, l(0.000000, 0.000000, 1.000000, 0.000000)
mov r1.xz, r3.zzxz
mul r2.xyz, r3.xxxx, r3.wyww
mov r1.y, l(2.000000)
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
add r0.xyz, |r0.xyzx|, l(-0.200000, -0.200000, -0.200000, 0.000000)
mul r0.xyz, r0.xyzx, l(7.000000, 7.000000, 7.000000, 0.000000)
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.w, r0.y, r0.x
add r0.w, r0.z, r0.w
div r0.xyz, r0.xyzx, r0.wwww
resinfo_uint r1.xy, l(0), t0.xyzw
utof r1.xy, r1.xyxx
div r2.xy, v2.xyxx, v2.zzzz
mul r1.xy, r1.xyxx, r2.xyxx
ftoi r1.xy, r1.xyxx
mov r1.zw, l(0,0,0,0)
ldms r2.z, r1.xyzw, t0.yzxw, l(0)
mov r2.w, l(1.000000)
dp4 r0.w, r2.xyzw, cb0[24].xyzw
dp4 r1.x, r2.xyzw, cb0[25].xyzw
div r0.w, -r0.w, r1.x
dp3 r1.x, v3.xyzx, v3.xyzx
sqrt r1.x, r1.x
mul r0.w, r0.w, r1.x
div r2.x, r0.w, v2.z
div r1.yzw, v3.xxyz, r1.xxxx
mad r2.yzw, r1.yyzw, r2.xxxx, cb0[8].xxyz
add r0.w, -cb0[8].z, cb1[5].x
div r3.x, r0.w, r1.w
lt r0.w, r3.x, r2.x
mad r3.yzw, r1.yyzw, r3.xxxx, cb0[8].xxyz
movc r3.xyzw, r0.wwww, r3.xyzw, r2.xyzw
lt r0.w, l(0.000000), r1.w
movc r2.xyzw, r0.wwww, r3.xyzw, r2.xyzw
mul r3.xyzw, r2.zwwy, cb1[1].xxxx
mul r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
sample r1.yzw, r3.zwzz, t1.wxyz, s0
sample r3.xyz, r3.xyxx, t1.xyzw, s0
mul r1.yzw, r0.yyyy, r1.yyzw
mad r0.xyw, r3.xyxz, r0.xxxx, r1.yzyw
mul r1.yz, r2.yyzy, cb1[1].xxxx
mul r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
sample r1.yzw, r1.yzyy, t1.wxyz, s0
mad r0.xyz, r1.yzwy, r0.zzzz, r0.xywx
add r0.w, -r1.x, r2.x
add r1.x, -r2.w, cb1[5].x
mul r1.xy, r1.xxxx, -cb1[2].wxww
exp r1.xy, r1.xyxx
mul r1.z, r0.w, l(-0.043281)
mul r0.w, r0.w, -cb1[2].z
exp r0.w, r0.w
exp r1.z, r1.z
add r1.yz, -r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
max r1.z, r1.z, l(0.000000)
add r2.xyz, cb1[3].xyzx, -cb1[4].xyzx
mad r2.xyz, r1.zzzz, r2.xyzx, cb1[4].xyzx
mul r2.xyz, r2.xyzx, cb0[0].xyzx
mov_sat r1.x, r1.x
mul r1.z, r1.x, cb1[4].w
mad o0.w, -r0.w, r1.x, l(1.000000)
mul r1.x, r1.y, r1.z
mad r0.xyz, r0.xyzx, r1.xxxx, -r2.xyzx
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul o0.xyz, r0.xyzx, cb0[2].zzzz
ret 
// Approximately 87 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
