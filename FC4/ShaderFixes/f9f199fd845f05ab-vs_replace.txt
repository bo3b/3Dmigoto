// Reflected object shader

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CVistaParameterProvider : register(b1)
{
  float4 _CollectionShadowParams : packoffset(c0);
  float4 _DetailGlobalConfig : packoffset(c1);
  float4 _DetailLayerConfig[4] : packoffset(c2);
  float4 _DetailLayerIDsConfig : packoffset(c6);
  float4 _NeighborsFactor : packoffset(c7);
  float4 _VistaPositionAndFactor : packoffset(c8);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  int2 v0 : TEXCOORD0,
  int2 v1 : TEXCOORD1,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1,
  out float2 o3 : TEXCOORD2)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v0.xy;
  r1.xy = -r0.yx < float2(-1.638300e+004,-1.638300e+004);
  r1.zw = r0.yx < float2(-1.638300e+004,-1.638300e+004);

// Decompiler produced:
//  r2.xz = r1.xz ? 1.000000 : 0;
//  r0.zw = r1.yw ? float2(1.065353e+009,1.065353e+009) : 0;

// Assembly was:
// and r2.xz, r1.xxzx, l(0x3f800000, 0, 0x3f800000, 0)
// and r0.zw, r1.yyyw, l(0, 0, 0x3f800000, 0x3f800000)

// Manual fix:
r2.xz = int2(r1.xz) & 1;
r0.zw = int2(r1.yw) & 1;

  r1.x = dot(r2.xz, r2.xz);
  r1.x = r1.x != 0.000000;
  r2.yw = r1.xx ? float2(0.000000e+000,0.000000e+000) : r0.zw;
  r0.z = dot(r2.xyzw, r2.xyzw);
  r0.w = dot(r2.xyzw, _NeighborsFactor.xyzw);
  r0.z = r0.z != 0.000000;
  r0.z = r0.z ? r0.w : _VistaPositionAndFactor.w;
  r1.xy = v1.xy;
  r1.zw = float2(3.125095e-002,3.125095e-002);
  r1.xy = r1.zw * r1.xy;
  r0.w = r1.x + -r1.y;
  r1.z = r0.z * r0.w + r1.y;
  r0.zw = float2(6.103516e-005,6.103516e-005) * _VistaPositionAndFactor.xx;
  r1.xy = r0.zw * r0.xy + _VistaPositionAndFactor.yz;
  r0.xy = r0.xy * float2(3.051758e-005,-3.051758e-005) + float2(5.000000e-001,5.000000e-001);
  o3.xy = float2(9.687500e-001,9.687500e-001) * r0.xy;
  r0.xyz = -_CameraPosition_DistanceScale.xyz + r1.xyz;
  o1.xyz = r1.xyz;
  r0.w = 1.000000000e+000;
  o0.x = dot(r0.xyzw, _ViewRotProjectionMatrix._m00_m10_m20_m30);
  o0.y = dot(r0.xyzw, _ViewRotProjectionMatrix._m01_m11_m21_m31);
  o0.z = dot(r0.xyzw, _ViewRotProjectionMatrix._m02_m12_m22_m32);
  o0.w = dot(r0.xyzw, _ViewRotProjectionMatrix._m03_m13_m23_m33);

if (_ViewportSize.x == 640 && _ViewportSize.y == 360 /* Low quality water */
 || _ViewportSize.x == _ViewportSize.y) { /* Medium - Ultra quality water */
	float4 stereo = StereoParams.Load(0);
	o0.x -= stereo.x * (o0.w - stereo.y) * 2;
}

  r0.w = dot(r0.xy, r0.xy);
  o1.w = sqrt(r0.w);
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.yzw = r0.yzx * r0.www;
  r0.x = 1.000000000e+000;
  r1.x = dot(_FogSHR.xyzw, r0.xyzw);
  r1.y = dot(_FogSHG.xyzw, r0.xyzw);
  r1.z = dot(_FogSHB.xyzw, r0.xyzw);
  o2.xyz = max(r1.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CVistaParameterProvider
// {
//
//   float4 _CollectionShadowParams;    // Offset:    0 Size:    16 [unused]
//   float4 _DetailGlobalConfig;        // Offset:   16 Size:    16 [unused]
//   float4 _DetailLayerConfig[4];      // Offset:   32 Size:    64 [unused]
//   float4 _DetailLayerIDsConfig;      // Offset:   96 Size:    16 [unused]
//   float4 _NeighborsFactor;           // Offset:  112 Size:    16
//   float4 _VistaPositionAndFactor;    // Offset:  128 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CVistaParameterProvider           cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE     int   xy  
// TEXCOORD                 1   xy          1     NONE     int   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_input v0.xy
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xy
dcl_temps 3
itof r0.xy, v0.xyxx
lt r1.xy, -r0.yxyy, l(-16383.000000, -16383.000000, 0.000000, 0.000000)
lt r1.zw, r0.yyyx, l(0.000000, 0.000000, -16383.000000, -16383.000000)
and r2.xz, r1.xxzx, l(0x3f800000, 0, 0x3f800000, 0)
and r0.zw, r1.yyyw, l(0, 0, 0x3f800000, 0x3f800000)
dp2 r1.x, r2.xzxx, r2.xzxx
ne r1.x, r1.x, l(0.000000)
movc r2.yw, r1.xxxx, l(0,0,0,0), r0.zzzw
dp4 r0.z, r2.xyzw, r2.xyzw
dp4 r0.w, r2.xyzw, cb1[7].xyzw
ne r0.z, r0.z, l(0.000000)
movc r0.z, r0.z, r0.w, cb1[8].w
itof r1.xy, v1.xyxx
mov r1.zw, l(0,0,0.031251,0.031251)
mul r1.xy, r1.xyxx, r1.zwzz
add r0.w, -r1.y, r1.x
mad r1.z, r0.z, r0.w, r1.y
mul r0.zw, cb1[8].xxxx, l(0.000000, 0.000000, 0.000061, 0.000061)
mad r1.xy, r0.zwzz, r0.xyxx, cb1[8].yzyy
mad r0.xy, r0.xyxx, l(0.000031, -0.000031, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul o3.xy, r0.xyxx, l(0.968750, 0.968750, 0.000000, 0.000000)
add r0.xyz, r1.xyzx, -cb0[8].xyzx
mov o1.xyz, r1.xyzx
mov r0.w, l(1.000000)
dp4 o0.x, r0.xyzw, cb0[44].xyzw
dp4 o0.y, r0.xyzw, cb0[45].xyzw
dp4 o0.z, r0.xyzw, cb0[46].xyzw
dp4 o0.w, r0.xyzw, cb0[47].xyzw
dp2 r0.w, r0.xyxx, r0.xyxx
sqrt o1.w, r0.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.yzw, r0.wwww, r0.yyzx
mov r0.x, l(1.000000)
dp4 r1.x, cb0[20].xyzw, r0.xyzw
dp4 r1.y, cb0[19].xyzw, r0.xyzw
dp4 r1.z, cb0[18].xyzw, r0.xyzw
max o2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
ret 
// Approximately 39 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 
