
cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CGlobalShaderParameterProvider : register(b1)
{
  float4 _BurnColor : packoffset(c0);
  float4 _BurnParams : packoffset(c1);
  float4 _BurnParams2 : packoffset(c2);
  float4 _BurnParams3 : packoffset(c3);
  float4 _CascadedShadowScaleOffsetTile0 : packoffset(c4);
  float4 _CascadedShadowScaleOffsetTile1 : packoffset(c5);
  float4 _GlobalScalars : packoffset(c6);
  float4 _SSS_MiscParams : packoffset(c7);
  float4 _WindSimParamsX : packoffset(c8);
  float4 _WindSimParamsY : packoffset(c9);
  float2 _RangeDepthCompression : packoffset(c10);
  float3 _SSS_Color : packoffset(c11);
  int _BRDFHighQuality : packoffset(c11.w);
}

cbuffer SUserClipPlaneParameterProvider : register(b2)
{
  float4 _UserClipPlane : packoffset(c0);
}

cbuffer CSceneParticleEmitterRenderer_CShaderParameterProvider : register(b3)
{
  float4 _AlphaFadeParams : packoffset(c0);
  float4 _DebugColor : packoffset(c1);
  float4 _EmissiveColor : packoffset(c2);
  float4 _FarSoftDistanceRange_oneOverSoftRange : packoffset(c3);
  float4 _NearFadeDistanceParams : packoffset(c4);
  float4 _SHCoeffB : packoffset(c5);
  float4 _SHCoeffG : packoffset(c6);
  float4 _SHCoeffR : packoffset(c7);
  float4 _SHNodeB : packoffset(c8);
  float4 _SHNodeG : packoffset(c9);
  float4 _SHNodeR : packoffset(c10);
  float4 _SoftClipPlane : packoffset(c11);
  float4 _UniformFog : packoffset(c12);
  float2 _UVNormalScale : packoffset(c13);
  float3 _EmitterWorldPos : packoffset(c14);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

#include <crosshair.hlsl>

void main(
  float4 v0 : position0,
  float4 v1 : color0,
  float2 v2 : texcoord0,
  float4 v3 : normal0,
  out float4 o0 : SV_Position0,
  out float o1 : SV_ClipDistance0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD1,
  out float4 o4 : TEXCOORD2,
  out float4 o5 : TEXCOORD3,
  out float3 o6 : TEXCOORD4)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.xyz = _CameraPosition_DistanceScale.xyz + -v0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = sqrt(r0.w);
  r1.x = -2.000000000e+003 + r0.w;
  r1.yzw = r0.xyz / r0.www;
  r0.x = dot(r0.xyz, -_CameraDirection_FOVDeg.xyz);
  r0.x = -_CameraDistances.x + r0.x;
  r0.xy = -_NearFadeDistanceParams.xz + r0.xx;
  r0.xy = saturate(r0.xy / _NearFadeDistanceParams.yw);
  r0.z = saturate(3.333333298e-004 * r1.x);
  r0.z = 2.500000000e+002 * r0.z;
  r1.xyz = r1.yzw * r0.zzz + v0.xyz;
  r2.xyz = -_CameraPosition_DistanceScale.xyz + r1.xyz;
  r0.z = dot(r2.xyz, r2.xyz);
  r0.z = rsqrt(r0.z);
  r2.xyz = r2.xyz * r0.zzz;
  r1.xyz = r2.xyz * _CameraPositionFractions_ZOffsetWS.www + r1.xyz;
  r1.xyz = -_CameraPosition_DistanceScale.xyz + r1.xyz;
  r0.z = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.z);
  r0.z = sqrt(r0.z);
  r1.xyz = r1.xyz * r0.www;
  r0.w = -_RangeDepthCompression.x + r0.z;
  r0.w = max(r0.w, 0.000000000e+000);
  r0.z = r0.z + -r0.w;
  r0.z = r0.w * _RangeDepthCompression.y + r0.z;
  r2.xyz = r1.xyz * r0.zzz;
  r1.xyz = r1.xyz * r0.zzz + _CameraPosition_DistanceScale.xyz;
  r2.w = 1.000000000e+000;
  r3.x = dot(r2.xyzw, _ViewRotProjectionMatrix._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, _ViewRotProjectionMatrix._m01_m11_m21_m31);
  r3.w = dot(r2.xyzw, _ViewRotProjectionMatrix._m03_m13_m23_m33);
  o0.z = dot(r2.xyzw, _ViewRotProjectionMatrix._m02_m12_m22_m32);

float4 stereo = StereoParams.Load(0);
float4 filter = IniParams.Load(int2(3,0));

// Depth of the sparks when repairing vehicles is wrong. Use the depth buffer
// to correct the depth, but since this shader is also responsible for other
// things (like some candles), only correct it if the repair tool is active in
// the frame, the fire button is currently being held and the texture matches
// the sparks or glow.
if (all(filter.xyz == 1)) {
	r3.x -= stereo.x * (r3.w - stereo.y);
	r3.x += adjust_from_stereo2mono_depth_buffer(0,0) * r3.w;
}

o0.xyw = r3.xyw;

// Halo fix for candles:
r3.x += stereo.x * (r3.w - stereo.y);


  r4.xyzw = _DepthTextureScaleOffset.xyzw * r3.xyww;
  o5.z = r3.w;
  o5.xy = r4.xy + r4.zw;
  r1.w = 1.000000000e+000;
  o1.x = dot(_UserClipPlane.xyzw, r1.xyzw);
  o4.xyz = r1.xyz;
  r0.z = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.z);
  r0.z = sqrt(r0.z);
  r0.z = saturate(r0.z * _FogParams.y + _FogParams.x);
  r1.yzw = r2.yzx * r0.www;
  r1.x = 1.000000000e+000;
  r3.x = dot(_FogSHR.xyzw, r1.xyzw);
  r3.y = dot(_FogSHG.xyzw, r1.xyzw);
  r3.z = dot(_FogSHB.xyzw, r1.xyzw);
  r1.xyz = max(r3.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  r0.w = _HeightFogParams.y * r2.z;
  r1.w = dot(_CameraDirection_FOVDeg.xyz, r2.xyz);
  o6.z = _CameraDistances.w * r1.w;
  r0.w = max(r0.w, -1.250000000e+002);
  r1.w = exp2(-r0.w);
  r1.w = 1.000000000e+000 + -r1.w;
  r1.w = r1.w / r0.w;
  r0.w = 9.999999975e-007 < abs(r0.w);
  r0.w = r0.w ? r1.w : 1.000000000e+000;
  r0.w = r0.w * _HeightFogParams.x + _FogParams.w;
  r0.z = r0.z * r0.w;
  r0.z = -_FogParams.z * r0.z;
  r0.z = exp2(r0.z);
  o2.xyz = -r1.xyz * r0.zzz + r1.xyz;
  o2.w = r0.z;
  r1.xyz = v1.xyz * v1.www;
  r1.xyz = _AlphaFadeParams.xxx * r1.xyz;
  o3.xyz = v3.www * r1.xyz;
  o3.w = v3.w * v1.w;
  o4.w = r0.x;
  o5.w = 1.000000000e+000 + -r0.y;
  o6.xy = v2.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16 [unused]
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer SUserClipPlaneParameterProvider
// {
//
//   float4 _UserClipPlane;             // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneParticleEmitterRenderer_CShaderParameterProvider
// {
//
//   float4 _AlphaFadeParams;           // Offset:    0 Size:    16
//   float4 _DebugColor;                // Offset:   16 Size:    16 [unused]
//   float4 _EmissiveColor;             // Offset:   32 Size:    16 [unused]
//   float4 _FarSoftDistanceRange_oneOverSoftRange;// Offset:   48 Size:    16 [unused]
//   float4 _NearFadeDistanceParams;    // Offset:   64 Size:    16
//   float4 _SHCoeffB;                  // Offset:   80 Size:    16 [unused]
//   float4 _SHCoeffG;                  // Offset:   96 Size:    16 [unused]
//   float4 _SHCoeffR;                  // Offset:  112 Size:    16 [unused]
//   float4 _SHNodeB;                   // Offset:  128 Size:    16 [unused]
//   float4 _SHNodeG;                   // Offset:  144 Size:    16 [unused]
//   float4 _SHNodeR;                   // Offset:  160 Size:    16 [unused]
//   float4 _SoftClipPlane;             // Offset:  176 Size:    16 [unused]
//   float4 _UniformFog;                // Offset:  192 Size:    16 [unused]
//   float2 _UVNormalScale;             // Offset:  208 Size:     8 [unused]
//   float3 _EmitterWorldPos;           // Offset:  224 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// SUserClipPlaneParameterProvider    cbuffer      NA          NA    2        1
// CSceneParticleEmitterRenderer_CShaderParameterProvider    cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyz 
// color                    0   xyzw        1     NONE   float   xyzw
// texcoord                 0   xy          2     NONE   float   xy  
// normal                   0   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// SV_ClipDistance          0   x           1  CLIPDST   float   x   
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[11], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[5], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.w
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, clip_distance
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_temps 5
add r0.xyz, -v0.xyzx, cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
add r1.x, r0.w, l(-2000.000000)
div r1.yzw, r0.xxyz, r0.wwww
dp3 r0.x, r0.xyzx, -cb0[3].xyzx
add r0.x, r0.x, -cb0[4].x
add r0.xy, r0.xxxx, -cb3[4].xzxx
div_sat r0.xy, r0.xyxx, cb3[4].ywyy
mul_sat r0.z, r1.x, l(0.000333)
mul r0.z, r0.z, l(250.000000)
mad r1.xyz, r1.yzwy, r0.zzzz, v0.xyzx
add r2.xyz, r1.xyzx, -cb0[8].xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mad r1.xyz, r2.xyzx, cb0[6].wwww, r1.xyzx
add r1.xyz, r1.xyzx, -cb0[8].xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.w, r0.z
sqrt r0.z, r0.z
mul r1.xyz, r0.wwww, r1.xyzx
add r0.w, r0.z, -cb1[10].x
max r0.w, r0.w, l(0.000000)
add r0.z, -r0.w, r0.z
mad r0.z, r0.w, cb1[10].y, r0.z
mul r2.xyz, r0.zzzz, r1.xyzx
mad r1.xyz, r1.xyzx, r0.zzzz, cb0[8].xyzx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb0[44].xyzw
dp4 r3.y, r2.xyzw, cb0[45].xyzw
dp4 r3.w, r2.xyzw, cb0[47].xyzw
dp4 o0.z, r2.xyzw, cb0[46].xyzw
mov o0.xyw, r3.xyxw
mul r4.xyzw, r3.xyww, cb0[16].xyzw
mov o5.z, r3.w
add o5.xy, r4.zwzz, r4.xyxx
mov r1.w, l(1.000000)
dp4 o1.x, cb2[0].xyzw, r1.xyzw
mov o4.xyz, r1.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.w, r0.z
sqrt r0.z, r0.z
mad_sat r0.z, r0.z, cb0[17].y, cb0[17].x
mul r1.yzw, r0.wwww, r2.yyzx
mov r1.x, l(1.000000)
dp4 r3.x, cb0[20].xyzw, r1.xyzw
dp4 r3.y, cb0[19].xyzw, r1.xyzw
dp4 r3.z, cb0[18].xyzw, r1.xyzw
max r1.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.w, r2.z, cb0[21].y
dp3 r1.w, cb0[3].xyzx, r2.xyzx
mul o6.z, r1.w, cb0[4].w
max r0.w, r0.w, l(-125.000000)
exp r1.w, -r0.w
add r1.w, -r1.w, l(1.000000)
div r1.w, r1.w, r0.w
lt r0.w, l(0.000001), |r0.w|
movc r0.w, r0.w, r1.w, l(1.000000)
mad r0.w, r0.w, cb0[21].x, cb0[17].w
mul r0.z, r0.w, r0.z
mul r0.z, r0.z, -cb0[17].z
exp r0.z, r0.z
mad o2.xyz, -r1.xyzx, r0.zzzz, r1.xyzx
mov o2.w, r0.z
mul r1.xyz, v1.wwww, v1.xyzx
mul r1.xyz, r1.xyzx, cb3[0].xxxx
mul o3.xyz, r1.xyzx, v3.wwww
mul o3.w, v1.w, v3.w
mov o4.w, r0.x
add o5.w, -r0.y, l(1.000000)
mov o6.xy, v2.xyxx
ret 
// Approximately 73 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16 [unused]
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer SUserClipPlaneParameterProvider
// {
//
//   float4 _UserClipPlane;             // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneParticleEmitterRenderer_CShaderParameterProvider
// {
//
//   float4 _AlphaFadeParams;           // Offset:    0 Size:    16
//   float4 _DebugColor;                // Offset:   16 Size:    16 [unused]
//   float4 _EmissiveColor;             // Offset:   32 Size:    16 [unused]
//   float4 _FarSoftDistanceRange_oneOverSoftRange;// Offset:   48 Size:    16 [unused]
//   float4 _NearFadeDistanceParams;    // Offset:   64 Size:    16
//   float4 _SHCoeffB;                  // Offset:   80 Size:    16 [unused]
//   float4 _SHCoeffG;                  // Offset:   96 Size:    16 [unused]
//   float4 _SHCoeffR;                  // Offset:  112 Size:    16 [unused]
//   float4 _SHNodeB;                   // Offset:  128 Size:    16 [unused]
//   float4 _SHNodeG;                   // Offset:  144 Size:    16 [unused]
//   float4 _SHNodeR;                   // Offset:  160 Size:    16 [unused]
//   float4 _SoftClipPlane;             // Offset:  176 Size:    16 [unused]
//   float4 _UniformFog;                // Offset:  192 Size:    16 [unused]
//   float2 _UVNormalScale;             // Offset:  208 Size:     8 [unused]
//   float3 _EmitterWorldPos;           // Offset:  224 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// SUserClipPlaneParameterProvider    cbuffer      NA          NA    2        1
// CSceneParticleEmitterRenderer_CShaderParameterProvider    cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyz 
// color                    0   xyzw        1     NONE   float   xyzw
// texcoord                 0   xy          2     NONE   float   xy  
// normal                   0   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// SV_ClipDistance          0   x           1  CLIPDST   float   x   
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[11], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[5], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.w
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, clip_distance
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_temps 5
add r0.xyz, -v0.xyzx, cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
add r1.x, r0.w, l(-2000.000000)
div r1.yzw, r0.xxyz, r0.wwww
dp3 r0.x, r0.xyzx, -cb0[3].xyzx
add r0.x, r0.x, -cb0[4].x
add r0.xy, r0.xxxx, -cb3[4].xzxx
div_sat r0.xy, r0.xyxx, cb3[4].ywyy
mul_sat r0.z, r1.x, l(0.000333)
mul r0.z, r0.z, l(250.000000)
mad r1.xyz, r1.yzwy, r0.zzzz, v0.xyzx
add r2.xyz, r1.xyzx, -cb0[8].xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mad r1.xyz, r2.xyzx, cb0[6].wwww, r1.xyzx
add r1.xyz, r1.xyzx, -cb0[8].xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.w, r0.z
sqrt r0.z, r0.z
mul r1.xyz, r0.wwww, r1.xyzx
add r0.w, r0.z, -cb1[10].x
max r0.w, r0.w, l(0.000000)
add r0.z, -r0.w, r0.z
mad r0.z, r0.w, cb1[10].y, r0.z
mul r2.xyz, r0.zzzz, r1.xyzx
mad r1.xyz, r1.xyzx, r0.zzzz, cb0[8].xyzx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb0[44].xyzw
dp4 r3.y, r2.xyzw, cb0[45].xyzw
dp4 r3.w, r2.xyzw, cb0[47].xyzw
dp4 o0.z, r2.xyzw, cb0[46].xyzw
mov o0.xyw, r3.xyxw
mul r4.xyzw, r3.xyww, cb0[16].xyzw
mov o5.z, r3.w
add o5.xy, r4.zwzz, r4.xyxx
mov r1.w, l(1.000000)
dp4 o1.x, cb2[0].xyzw, r1.xyzw
mov o4.xyz, r1.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.w, r0.z
sqrt r0.z, r0.z
mad_sat r0.z, r0.z, cb0[17].y, cb0[17].x
mul r1.yzw, r0.wwww, r2.yyzx
mov r1.x, l(1.000000)
dp4 r3.x, cb0[20].xyzw, r1.xyzw
dp4 r3.y, cb0[19].xyzw, r1.xyzw
dp4 r3.z, cb0[18].xyzw, r1.xyzw
max r1.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.w, r2.z, cb0[21].y
dp3 r1.w, cb0[3].xyzx, r2.xyzx
mul o6.z, r1.w, cb0[4].w
max r0.w, r0.w, l(-125.000000)
exp r1.w, -r0.w
add r1.w, -r1.w, l(1.000000)
div r1.w, r1.w, r0.w
lt r0.w, l(0.000001), |r0.w|
movc r0.w, r0.w, r1.w, l(1.000000)
mad r0.w, r0.w, cb0[21].x, cb0[17].w
mul r0.z, r0.w, r0.z
mul r0.z, r0.z, -cb0[17].z
exp r0.z, r0.z
mad o2.xyz, -r1.xyzx, r0.zzzz, r1.xyzx
mov o2.w, r0.z
mul r1.xyz, v1.wwww, v1.xyzx
mul r1.xyz, r1.xyzx, cb3[0].xxxx
mul o3.xyz, r1.xyzx, v3.wwww
mul o3.w, v1.w, v3.w
mov o4.w, r0.x
add o5.w, -r0.y, l(1.000000)
mov o6.xy, v2.xyxx
ret 
// Approximately 73 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
