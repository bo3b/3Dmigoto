// atmosphere glow around sun/moon

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0)
{
  float4 r0;
  uint4 bitmask;
  r0.xyzw = v0.xyzw;
  r0.xyzw = r0.xyzw;
  r0.xyzw = r0.xyzw;
  r0.xyzw = r0.xyzw;
  r0.xyzw = r0.xyzw;
  o0.xyzw = r0.xyzw;
  o1.xyzw = r0.xyzw;

// Push glow around moon to sky box depth (infinity). This shader is used for
// both the glow in the sky and the reflection, which need opposite
// adjustments. Unlike other reflection shaders it doesn't have access to
// _ViewportSize for filtering, so we pass the render target size & screen
// resolution in from 3DMigoto instead

float4 stereo = StereoParams.Load(0);
float separation = stereo.x; float convergence = stereo.y;

float4 rt_filter = IniParams.Load(int2(1, 0));
if (rt_filter.x == rt_filter.z && rt_filter.y == rt_filter.w) {
	// Matches screen resolution means sun/moon glow in sky
	o1.x -= separation;
} else {
	// No match means it's the reflection of sun/moon glow
	o1.x += separation;
}

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 1
mov r0.xyzw, v0.xyzw
mov r0.xyzw, r0.xyzw
mov r0.xyzw, r0.xyzw
mov r0.xyzw, r0.xyzw
mov r0.xyzw, r0.xyzw
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r0.xyzw
ret 
// Approximately 8 instruction slots used
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
