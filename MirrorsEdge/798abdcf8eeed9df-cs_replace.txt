// ---- Created with 3Dmigoto v1.2.44 on Mon Sep 26 22:19:36 2016

cbuffer cbPunctualLightInfo : register(b1)
{

  struct
  {

    struct
    {
      float3 pos;
      float invSqrAttenuationRadius;
      float3 color;
      float attenuationOffset;
      float3 matrixForward;
      float diffuseScale;
      float3 matrixUp;
      float specularScale;
      float3 matrixLeft;
      float shadowDimmer;
      float angleScale;
      float angleOffset;
      float2 unused;
    } baseLight;


    struct
    {
      float enable;
      float volumeShadowMapIndex;
      float invAttenuationRadius;
      float tanAngle;
    } vShadow;

  } g_lightInfoPunctual[128] : packoffset(c0);

}

cbuffer cbPunctualShadowLightInfo : register(b2)
{

  struct
  {

    struct
    {
      float3 pos;
      float invSqrAttenuationRadius;
      float3 color;
      float attenuationOffset;
      float3 matrixForward;
      float diffuseScale;
      float3 matrixUp;
      float specularScale;
      float3 matrixLeft;
      float shadowDimmer;
      float angleScale;
      float angleOffset;
      float2 unused;
    } baseLight;


    struct
    {
      float enable;
      float textureIndex;
      float2 unused;
    } iesShadow;


    struct
    {
      float4 shadowMatrix1;
      float4 shadowMatrix2;
      float4 shadowMatrix3;
      float4 shadowMatrix4;
      float4 shadowMapAtlasParam[6];
      float4 shadowMapIndex[2];
      float shadowType;
      float quality;
      float shadowAngleScale;
      float shadowAngleOffset;
    } shadow;


    struct
    {
      float enable;
      float volumeShadowMapIndex;
      float invAttenuationRadius;
      float tanAngle;
    } vShadow;

  } g_lightInfoPunctualShadow[128] : packoffset(c0);

}

cbuffer cbAreaLightInfo : register(b3)
{

  struct
  {

    struct
    {
      float3 pos;
      float invSqrAttenuationRadius;
      float3 color;
      float attenuationOffset;
      float3 matrixForward;
      float diffuseScale;
      float3 matrixUp;
      float specularScale;
      float3 matrixLeft;
      float shadowDimmer;
      float angleScale;
      float angleOffset;
      float2 unused;
    } baseLight;


    struct
    {
      float3 virtualPos;
      float occluderHeight;
      float areaLightType;
      float lightRadius0;
      float lightRadius1;
      float unused;
    } areaLight;


    struct
    {
      float enable;
      float volumeShadowMapIndex;
      float invAttenuationRadius;
      float tanAngle;
    } vShadow;

  } g_lightInfoArea[128] : packoffset(c0);

}

cbuffer cbAreaShadowLightInfo : register(b4)
{

  struct
  {

    struct
    {
      float3 pos;
      float invSqrAttenuationRadius;
      float3 color;
      float attenuationOffset;
      float3 matrixForward;
      float diffuseScale;
      float3 matrixUp;
      float specularScale;
      float3 matrixLeft;
      float shadowDimmer;
      float angleScale;
      float angleOffset;
      float2 unused;
    } baseLight;


    struct
    {
      float3 virtualPos;
      float occluderHeight;
      float areaLightType;
      float lightRadius0;
      float lightRadius1;
      float unused;
    } areaLight;


    struct
    {
      float enable;
      float textureIndex;
      float2 unused;
    } iesShadow;


    struct
    {
      float4 shadowMatrix1;
      float4 shadowMatrix2;
      float4 shadowMatrix3;
      float4 shadowMatrix4;
      float4 shadowMapAtlasParam[6];
      float4 shadowMapIndex[2];
      float shadowType;
      float quality;
      float shadowAngleScale;
      float shadowAngleOffset;
    } shadow;


    struct
    {
      float enable;
      float volumeShadowMapIndex;
      float invAttenuationRadius;
      float tanAngle;
    } vShadow;

  } g_lightInfoAreaShadow[128] : packoffset(c0);

}

cbuffer cb0 : register(b0)
{
  float4x4 invViewProjectionMatrix : packoffset(c0);
  float4 g_exposureMultipliers : packoffset(c4);
  float localIblMipmapBias : packoffset(c5);
  float screenAspectRatio : packoffset(c5.y);
  float2 invResolution : packoffset(c5.z);
  float4 shadowMapSizeAndInvSize : packoffset(c6);
  uint forceSplitLighting : packoffset(c7);
  uint sssScatteringEnables : packoffset(c7.y);
  float volumetricShadowmapHalfTexelOffset : packoffset(c7.z);
  float volumetricShadowmapOneMinusHalfTexelOffset : packoffset(c7.w);
  float volumetricShadowmapInvMaxCount : packoffset(c8);
  float dynamicAOFactor : packoffset(c8.y);
  uint tileCountX : packoffset(c8.z);
  uint pad1 : packoffset(c8.w);
  float4x3 g_normalBasisTransforms[6] : packoffset(c9);
}

SamplerState g_linearSampler_s : register(s0);
SamplerState g_linearLongitudeWrapSampler_s : register(s2);
SamplerComparisonState g_shadowmapSampler_s : register(s3);
Texture2D<float4> g_gbufferTexture0 : register(t0);
Texture2D<float4> g_gbufferTexture1 : register(t1);
Texture2D<float4> g_gbufferTexture2 : register(t2);
Texture2D<float> g_depthTexture : register(t6);
Texture2DArray<float> g_iesTextureArray : register(t9);
Texture2D<float> g_diffuseOcclusionTexture : register(t10);
Texture2DArray<float4> g_shadowmapTexture : register(t21);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


// Hand fixed for structured buffers. 

// Needs manual fix for instruction: 
// unknown dcl_: dcl_resource_structured t19, 16 
// Needs manual fix for instruction: 
// unknown dcl_: dcl_resource_structured t20, 4 
// Needs manual fix for instruction: 
// unknown dcl_: dcl_resource_structured t24, 4 

//StructuredBuffer<g_lightCullInput> g_lightCullInput : register(t19);
// Resource bind info for g_lightCullInput
// {
//
//   uint4 $Element;                    // Offset:    0 Size:    16
//
// }
struct g_lightCullInput_res
{
	uint4 g_lightCullInput_uint4;
};
StructuredBuffer<g_lightCullInput_res> g_lightCullInput : register(t19);

//StructuredBuffer<g_lightIndexInput> g_lightIndexInput : register(t20);
// Resource bind info for g_lightIndexInput
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
struct g_lightIndexInput_res
{
	uint g_lightIndexInput_uint;
};
StructuredBuffer<g_lightIndexInput_res> g_lightIndexInput : register(t20);

//StructuredBuffer<g_compactTileGridBuffer> g_compactTileGridBuffer : register(t24);
// Resource bind info for g_compactTileGridBuffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
struct g_compactTileGridBuffer_res
{
	uint g_compactTileGridBuffer_uint;
};
StructuredBuffer<g_compactTileGridBuffer_res> g_compactTileGridBuffer : register(t24);


// Manual fix for
// unknown dcl_: dcl_uav_typed_texture2d (float,float,float,float) u0
RWTexture2D<float4> g_outputTexture0 : register(u0); 


// Manual fix for group shared registers
// unknown dcl_: dcl_tgsm_raw g0, 4
// unknown dcl_: dcl_tgsm_raw g1, 4
// unknown dcl_: dcl_tgsm_raw g2, 4
// unknown dcl_: dcl_tgsm_raw g3, 4
// unknown dcl_: dcl_tgsm_raw g4, 4
groupshared uint g0;
groupshared uint g1;
groupshared uint g2;
groupshared uint g3;
groupshared uint g4;


// Manual fix for
// unknown dcl_: dcl_thread_group 16, 16, 1
[numthreads(16, 16, 1)]  

void main(
uint3 vThreadGroupID : SV_GroupID,
uint3 vThreadIDInGroup : SV_GroupThreadID,
uint vThreadIDInGroupFlattened : SV_GroupIndex
)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26,r27,r28,r29,r30,r31,r32,r33,r34,r35,r36;
  uint4 bitmask, uiDest;
  float4 fDest;

// Known bad code for instruction (needs manual fix):
// ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, vThreadGroupID.x, l(0), t24.xxxx
// r0.x = g_linearSampler[]..swiz;
r0.x = g_compactTileGridBuffer[vThreadGroupID.x].g_compactTileGridBuffer_uint;

  r1.x = (uint)r0.x >> 16;
  
  // r1.yzw = (int3)r0.xxx & int3(0,0,0);
r1.yzw = (int3)r0.xxx & int3(0x0000ffff, 0x0000ffff, 0x0000ffff);
  
  r0.xyzw = mad((int4)r1.xyzw, int4(16,16,16,16), (int4)vThreadIDInGroup.xyyy);
  if (vThreadIDInGroupFlattened.x == 0) {
    r1.x = mad((int)r1.w, tileCountX, (int)r1.x);
    
    // Known bad code for instruction (needs manual fix):
    // ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyz, r1.x, l(0), t19.xyzx
    // r1.x = g_linearSampler[]..swiz;
    // r1.y = g_linearSampler[]..swiz;
    // r1.z = g_linearSampler[]..swiz;
r1.xyz = g_lightCullInput[r1.x].g_lightCullInput_uint4.xyz;
  
    r2.xy = (uint2)r1.yz >> int2(16,16);
    
    // r1.yz = (int2)r1.yz & int2(0,0);
r1.yz = (int2)r1.yz & int2(0x0000ffff, 0x0000ffff);
    
    // No code for instruction (needs manual fix):
    // store_raw g0.x, l(0), r1.x
g0.x = r1.x;
    
    // No code for instruction (needs manual fix):
    // store_raw g1.x, l(0), r1.y
g1.x = r1.y;

    // No code for instruction (needs manual fix):
    // store_raw g2.x, l(0), r2.x
g2.x = r2.x;

    // No code for instruction (needs manual fix):
    // store_raw g3.x, l(0), r1.z
g3.x = r1.z;

    // No code for instruction (needs manual fix):
    // store_raw g4.x, l(0), r2.y
g4.x = r2.y;

    
  }
  GroupMemoryBarrierWithGroupSync();
  r1.xy = (uint2)r0.xw;
  r1.zw = float2(0.5,0.5) + r1.xy;
  r1.zw = invResolution.xy * r1.zw;
  r2.xy = (int2)r1.xy;
  r2.zw = float2(0,0);
  r3.xyzw = g_gbufferTexture0.Load(r2.xyw).xyzw;
  r4.xyzw = g_gbufferTexture1.Load(r2.xyw).xyzw;
  r1.xy = g_gbufferTexture2.Load(r2.xyw).yz;
  r2.z = g_depthTexture.Load(r2.xyz).x;
  r4.w = 6 * r4.w;
  r4.w = round(r4.w);
  r4.w = (uint)r4.w;
  r5.xy = r3.xy * float2(2,2) + float2(-1,-1);
  r3.x = dot(r5.xy, r5.xy);
  r3.x = min(1, r3.x);
  r3.x = 1 + -r3.x;
  r5.z = sqrt(r3.x);
  r3.x = (int)r4.w * 3;
  r6.x = dot(r5.xyz, g_normalBasisTransforms[r4.w]._m00_m10_m20);
  r6.y = dot(r5.xyz, g_normalBasisTransforms[r4.w]._m01_m11_m21);
  r6.z = dot(r5.xyz, g_normalBasisTransforms[r4.w]._m02_m12_m22);
  r3.x = 1 + -r3.z;
  r3.y = 3 * r3.w;
  r3.y = round(r3.y);
  r3.y = (int)r3.y;
  r3.y = cmp((int)r3.y == 1);
  r1.x = r3.y ? 0 : r1.x;
  r3.y = 1 + -r1.x;
  r3.yzw = r4.xyz * r3.yyy;
  r1.y = r1.y * r1.y;
  r4.w = 0.159999996 * r1.y;
  r4.xyz = -r1.yyy * float3(0.159999996,0.159999996,0.159999996) + r4.xyz;
  r4.xyz = r1.xxx * r4.xyz + r4.www;
  r1.x = dot(r4.xyz, float3(0.330000013,0.330000013,0.330000013));
  r1.x = saturate(50 * r1.x);
  r1.y = r3.x * r3.x;
  r5.xy = r1.zw * float2(2,2) + float2(-1,-1);
  r2.xy = float2(1,-1) * r5.xy;
  r2.w = 1;
  r5.x = dot(r2.xyzw, invViewProjectionMatrix._m00_m10_m20_m30);
  r5.y = dot(r2.xyzw, invViewProjectionMatrix._m01_m11_m21_m31);
  r5.z = dot(r2.xyzw, invViewProjectionMatrix._m02_m12_m22_m32);
  r2.x = dot(r2.xyzw, invViewProjectionMatrix._m03_m13_m23_m33);
  r2.x = 1 / r2.x;
  r7.xyz = r5.xyz * r2.xxx;
  r2.y = dot(-r7.xyz, -r7.xyz);
  r2.y = rsqrt(r2.y);
  r8.xyz = -r7.xyz * r2.yyy;
  r2.z = dot(-r8.xyz, r6.xyz);
  r2.z = r2.z + r2.z;
  r9.xyz = r6.xyz * -r2.zzz + -r8.xyz;
  r2.z = dot(r6.xyz, r8.xyz);
  r2.w = saturate(r2.z);
  r1.z = g_diffuseOcclusionTexture.SampleLevel(g_linearSampler_s, r1.zw, 0).x;
  
  // No code for instruction (needs manual fix):
  // ld_raw r1.w, l(0), g0.xxxx
r1.w = g0.x;
  
  // No code for instruction (needs manual fix):
  // ld_raw r4.w, l(0), g1.xxxx
r4.w = g1.x;

  r5.w = (int)r1.w + (int)r4.w;
  r2.z = 9.99999975e-006 + abs(r2.z);
  r8.xyz = r1.xxx + -r4.xyz;
  r1.x = max(0.00200000009, r1.y);
  r6.w = r1.x * r1.x;
  r8.w = -r2.z * r6.w + r2.z;
  r8.w = r8.w * r2.z + r6.w;
  r8.w = sqrt(r8.w);
  r9.w = r3.x * -0.337748349 + 1;
  r10.x = 1 + -r2.z;
  r10.y = r10.x * r10.x;
  r10.y = r10.y * r10.y;
  r10.x = r10.y * r10.x;
  r10.yzw = float3(0,0,0);
  r11.xyz = float3(0,0,0);
  r11.w = r1.w;
  while (true) {
    r12.x = cmp((uint)r11.w >= (uint)r5.w);
    if (r12.x != 0) break;
    
    // Known bad code for instruction (needs manual fix):
    // ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.x, r11.w, l(0), t20.xxxx
    // r12.x = g_linearSampler[]..swiz;
r12.x = g_lightIndexInput[r11.w].g_lightIndexInput_uint;
  
    // Skip as struct size is autogenerated.
    // r12.x = (int)r12.x * 7;
    
    r12.yzw = -r5.xyz * r2.xxx + g_lightInfoPunctual[r12.x].baseLight.pos.xyz;
    r13.x = dot(r12.yzw, r12.yzw);
    r13.y = rsqrt(r13.x);
    r12.yzw = r13.yyy * r12.yzw;
    r13.y = g_lightInfoPunctual[r12.x].baseLight.attenuationOffset + r13.x;
    r13.y = max(9.99999975e-005, r13.y);
    r13.y = 1 / r13.y;
    r13.x = g_lightInfoPunctual[r12.x].baseLight.invSqrAttenuationRadius * r13.x;
    r13.x = -r13.x * r13.x + 1;
    r13.x = max(0, r13.x);
    r13.x = r13.x * r13.x;
    r13.x = r13.y * r13.x;
    r13.y = dot(g_lightInfoPunctual[r12.x].baseLight.matrixForward.xyz, r12.yzw);
    r13.y = saturate(r13.y * g_lightInfoPunctual[r12.x].baseLight.angleScale + g_lightInfoPunctual[r12.x].baseLight.angleOffset);
    r13.y = r13.y * r13.y;
    r13.x = r13.x * r13.y;
    r13.y = saturate(dot(r6.xyz, r12.yzw));
    r13.x = r13.y * r13.x;
    r13.z = cmp(0 < r13.x);
    if (r13.z != 0) {
      r14.xyz = -r7.xyz * r2.yyy + r12.yzw;
      r13.z = dot(r14.xyz, r14.xyz);
      r13.z = rsqrt(r13.z);
      r14.xyz = r14.xyz * r13.zzz;
      r12.y = saturate(dot(r12.yzw, r14.xyz));
      r12.z = saturate(dot(r6.xyz, r14.xyz));
      r12.w = 1 + -r12.y;
      r13.z = r12.w * r12.w;
      r13.z = r13.z * r13.z;
      r12.w = r13.z * r12.w;
      r14.xyz = r8.xyz * r12.www + r4.xyz;
      r12.w = -r13.y * r6.w + r13.y;
      r12.w = r12.w * r13.y + r6.w;
      r12.w = sqrt(r12.w);
      r12.w = r12.w * r2.z;
      r12.w = r13.y * r8.w + r12.w;
      r12.w = 0.5 / r12.w;
      r13.z = r12.z * r6.w + -r12.z;
      r12.z = r13.z * r12.z + 1;
      r12.z = r12.z * r12.z;
      r12.z = r6.w / r12.z;
      r12.z = r12.w * r12.z;
      r14.xyz = r14.xyz * r12.zzz;
      r12.y = r12.y * r12.y;
      r12.y = dot(r12.yy, r3.xx);
      r12.y = r3.x * 0.5 + r12.y;
      r12.z = 1 + -r13.y;
      r12.w = r12.z * r12.z;
      r12.w = r12.w * r12.w;
      r12.z = r12.w * r12.z;
      r12.y = -1 + r12.y;
      r12.z = r12.y * r12.z + 1;
      r12.y = r12.y * r10.x + 1;
      r12.y = r12.z * r12.y;
      r12.y = r12.y * r9.w;
      r12.z = g_lightInfoPunctual[r12.x].baseLight.diffuseScale * r13.x;
      r13.yzw = g_lightInfoPunctual[r12.x].baseLight.color.xyz * r12.zzz;
      r12.yzw = r13.yzw * r12.yyy;
      r13.x = g_lightInfoPunctual[r12.x].baseLight.specularScale * r13.x;
      r13.xyz = g_lightInfoPunctual[r12.x].baseLight.color.xyz * r13.xxx;
      r13.xyz = r14.xyz * r13.xyz;
    } else {
      r12.yzw = float3(0,0,0);
      r13.xyz = float3(0,0,0);
    }
    r11.xyz = r12.yzw + r11.xyz;
    r10.yzw = r13.xyz + r10.yzw;
    r11.w = (int)r11.w + 1;
  }
  
  // No code for instruction (needs manual fix):
  // ld_raw r4.w, l(0), g1.xxxx
r4.w = g1.x;

  r1.w = (int)r1.w + (int)r4.w;
  
  // No code for instruction (needs manual fix):
  // ld_raw r4.w, l(0), g2.xxxx
r4.w = g2.x;
  
  r5.w = (int)r1.w + (int)r4.w;
  r7.w = 1;
  r12.xyz = r10.yzw;
  r13.xyz = r11.xyz;
  r11.w = r1.w;
  while (true) {
    r12.w = cmp((uint)r11.w >= (uint)r5.w);
    if (r12.w != 0) break;
    
    // Known bad code for instruction (needs manual fix):
    // ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(0), t20.xxxx
    // r12.w = g_linearSampler[]..swiz;
r12.w = g_lightIndexInput[r11.w].g_lightIndexInput_uint;
  
    // Skipped as autogenerated
    // r13.w = (int)r12.w * 21;

    r14.xyz = -r5.xyz * r2.xxx + g_lightInfoPunctualShadow[r13.w].baseLight.pos.xyz;
    r14.w = dot(r14.xyz, r14.xyz);
    r15.x = rsqrt(r14.w);
    r15.xyz = r15.xxx * r14.xyz;
    r15.w = g_lightInfoPunctualShadow[r13.w].baseLight.attenuationOffset + r14.w;
    r15.w = max(9.99999975e-005, r15.w);
    r15.w = 1 / r15.w;
    r14.w = g_lightInfoPunctualShadow[r13.w].baseLight.invSqrAttenuationRadius * r14.w;
    r14.w = -r14.w * r14.w + 1;
    r14.w = max(0, r14.w);
    r14.w = r14.w * r14.w;
    r14.w = r15.w * r14.w;
    r15.w = dot(g_lightInfoPunctualShadow[r13.w].baseLight.matrixForward.xyz, r15.xyz);
    r16.x = saturate(r15.w * g_lightInfoPunctualShadow[r13.w].baseLight.angleScale + g_lightInfoPunctualShadow[r13.w].baseLight.angleOffset);
    r16.x = r16.x * r16.x;
    r14.w = r16.x * r14.w;
    r16.x = saturate(dot(r6.xyz, r15.xyz));
    r14.w = r16.x * r14.w;
    r16.y = cmp(0 < r14.w);
    if (r16.y != 0) {
      r17.xyz = -r7.xyz * r2.yyy + r15.xyz;
      r16.z = dot(r17.xyz, r17.xyz);
      r16.z = rsqrt(r16.z);
      r17.xyz = r17.xyz * r16.zzz;
      r16.z = saturate(dot(r15.xyz, r17.xyz));
      r16.w = saturate(dot(r6.xyz, r17.xyz));
      r17.x = 1 + -r16.z;
      r17.y = r17.x * r17.x;
      r17.y = r17.y * r17.y;
      r17.x = r17.y * r17.x;
      r17.xyz = r8.xyz * r17.xxx + r4.xyz;
      r17.w = -r16.x * r6.w + r16.x;
      r17.w = r17.w * r16.x + r6.w;
      r17.w = sqrt(r17.w);
      r17.w = r17.w * r2.z;
      r17.w = r16.x * r8.w + r17.w;
      r17.w = 0.5 / r17.w;
      r18.x = r16.w * r6.w + -r16.w;
      r16.w = r18.x * r16.w + 1;
      r16.w = r16.w * r16.w;
      r16.w = r6.w / r16.w;
      r16.w = r17.w * r16.w;
      r17.xyz = r17.xyz * r16.www;
      r16.z = r16.z * r16.z;
      r16.z = dot(r16.zz, r3.xx);
      r16.z = r3.x * 0.5 + r16.z;
      r16.x = 1 + -r16.x;
      r16.w = r16.x * r16.x;
      r16.w = r16.w * r16.w;
      r16.x = r16.w * r16.x;
      r16.z = -1 + r16.z;
      r16.x = r16.z * r16.x + 1;
      r16.z = r16.z * r10.x + 1;
      r16.x = r16.x * r16.z;
      r16.x = r16.x * r9.w;
      r16.z = g_lightInfoPunctualShadow[r13.w].baseLight.diffuseScale * r14.w;
      r18.xyz = g_lightInfoPunctualShadow[r13.w].baseLight.color.xyz * r16.zzz;
      r16.xzw = r18.xyz * r16.xxx;
      r14.w = g_lightInfoPunctualShadow[r13.w].baseLight.specularScale * r14.w;
      r18.xyz = g_lightInfoPunctualShadow[r13.w].baseLight.color.xyz * r14.www;
      r17.xyz = r18.xyz * r17.xyz;
    } else {
      r16.xzw = float3(0,0,0);
      r17.xyz = float3(0,0,0);
    }
    r14.w = cmp(0 < g_lightInfoPunctualShadow[r13.w].iesShadow.enable);
    r14.w = r14.w ? r16.y : 0;
    if (r14.w != 0) {
      r14.w = dot(g_lightInfoPunctualShadow[r13.w].baseLight.matrixLeft.xyz, -r15.xyz);
      r17.w = dot(g_lightInfoPunctualShadow[r13.w].baseLight.matrixUp.xyz, -r15.xyz);
      r15.x = dot(g_lightInfoPunctualShadow[r13.w].baseLight.matrixForward.xyz, -r15.xyz);
      r15.y = r15.x * 0.5 + 0.5;
      r18.x = min(abs(r17.w), abs(r14.w));
      r18.y = max(abs(r17.w), abs(r14.w));
      r18.y = 1 / r18.y;
      r18.x = r18.x * r18.y;
      r18.y = r18.x * r18.x;
      r18.z = r18.y * 0.0208350997 + -0.0851330012;
      r18.z = r18.y * r18.z + 0.180141002;
      r18.z = r18.y * r18.z + -0.330299497;
      r18.y = r18.y * r18.z + 0.999866009;
      r18.z = r18.x * r18.y;
      r18.w = cmp(abs(r14.w) < abs(r17.w));
      r18.z = r18.z * -2 + 1.57079637;
      r18.z = r18.w ? r18.z : 0;
      r18.x = r18.x * r18.y + r18.z;
      r18.y = cmp(r14.w < -r14.w);
      r18.y = r18.y ? -3.141593 : 0;
      r18.x = r18.x + r18.y;
      r18.y = min(r17.w, r14.w);
      r14.w = max(r17.w, r14.w);
      r17.w = cmp(r18.y < -r18.y);
      r14.w = cmp(r14.w >= -r14.w);
      r14.w = r14.w ? r17.w : 0;
      r14.w = r14.w ? -r18.x : r18.x;
      r15.x = 0.159154937 * r14.w;
      r15.z = g_lightInfoPunctualShadow[r13.w].iesShadow.textureIndex;
      r14.w = g_iesTextureArray.SampleLevel(g_linearLongitudeWrapSampler_s, r15.xyz, 0).x;
    } else {
      r14.w = 1;
    }
    r15.x = cmp(0.000000 != g_lightInfoPunctualShadow[r13.w].shadow.shadowType);
    r15.x = r15.x ? r16.y : 0;
    if (r15.x != 0) {
      r15.x = saturate(r15.w * g_lightInfoPunctualShadow[r13.w].shadow.shadowAngleScale + g_lightInfoPunctualShadow[r13.w].shadow.shadowAngleOffset);
      r15.x = r15.x * r15.x;
      r15.y = cmp(0 < r15.x);
      if (r15.y != 0) {
        r15.y = cmp(2.000000 == g_lightInfoPunctualShadow[r13.w].shadow.shadowType);
        if (r15.y != 0) {
          r18.xyz = -r14.xyz;
          r15.y = max(abs(r14.x), abs(r14.y));
          r15.y = max(r15.y, abs(r14.z));
          r15.zw = cmp(abs(r14.yz) < abs(r14.xx));
          r15.z = r15.w ? r15.z : 0;
          if (r15.z != 0) {
            r15.z = cmp(0 < r18.x);
            r18.x = r15.z ? r18.z : r14.z;
            r15.z = r15.z ? 1.000000 : 0;
          } else {
            r19.xy = cmp(abs(r14.xz) < abs(r14.yy));
            r14.y = r19.y ? r19.x : 0;
            if (r14.y != 0) {
              r14.y = cmp(0 < r18.y);
              r18.w = r14.y ? r18.z : r14.z;
              r15.z = r14.y ? 3 : 2;
              r18.xy = r18.xw;
            } else {
              r14.y = cmp(0 < r18.z);
              r18.x = r14.y ? r14.x : r18.x;
              r15.z = r14.y ? 5 : 4;
            }
          }
          r14.xy = r18.xy / r15.yy;
          r14.xy = r14.xy * float2(0.5,-0.5) + float2(0.5,0.5);
          r15.w = -r15.y * g_lightInfoPunctualShadow[r13.w].shadow.shadowMatrix3.z + g_lightInfoPunctualShadow[r13.w].shadow.shadowMatrix3.w;
          r15.y = r15.w / r15.y;
          r15.w = -1;
        } else {
          r18.x = dot(r7.xyzw, g_lightInfoPunctualShadow[r13.w].shadow.shadowMatrix1.xyzw);
          r18.y = dot(r7.xyzw, g_lightInfoPunctualShadow[r13.w].shadow.shadowMatrix2.xyzw);
          r16.y = dot(r7.xyzw, g_lightInfoPunctualShadow[r13.w].shadow.shadowMatrix3.xyzw);
          r17.w = dot(r7.xyzw, g_lightInfoPunctualShadow[r13.w].shadow.shadowMatrix4.xyzw);
          r17.w = 1 / r17.w;
          r18.xy = r18.xy * r17.ww;
          r15.y = r17.w * r16.y;
          r14.xy = r18.xy * float2(0.5,-0.5) + float2(0.5,0.5);
          r16.y = -r16.y * r17.w + 1;
          r17.w = max(abs(r18.x), abs(r18.y));
          r16.y = max(r17.w, r16.y);
          r15.w = cmp(1 >= r16.y);
          r15.z = 0;
        }
        r15.z = (uint)r15.z;
        r16.y = (int)r15.z & 3;
        r15.z = (uint)r15.z >> 2;
        r12.w = mad((int)r12.w, 21, (int)r15.z);
        r12.w = dot(g_lightInfoPunctualShadow[r12.w].shadow.shadowMapIndex[0].xyzw, icb[r16.y+0].xyzw);
        r15.z = cmp(r12.w >= 0);
        r15.z = r15.w ? r15.z : 0;
        r12.w = (uint)r12.w;
        
        // r15.w = (uint7)g_lightInfoPunctualShadow[r13.w].shadow.quality;
r15.w = (uint)g_lightInfoPunctualShadow[r13.w].shadow.quality;        

        r15.w = cmp((int)r15.w == 1);
        if (r15.w != 0) {
          r18.z = (uint)r12.w;
          r19.xy = shadowMapSizeAndInvSize.xx * r14.xy + float2(0.5,0.5);
          r19.zw = floor(r19.xy);
          r19.xy = r19.xy + -r19.zw;
          r18.xy = shadowMapSizeAndInvSize.zz * r19.zw;
          r20.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(-2,-2)).xyzw;
          r21.xyzw = float4(1,2,3,5) + -r19.xxxx;
          r22.xyzw = r21.xyxy * r20.wzxy;
          r19.zw = r22.xz + r22.yw;
          r22.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(0,-2)).xyzw;
          r19.zw = r22.zy * float2(2,2) + r19.zw;
          r19.zw = r22.wx * float2(2,2) + r19.zw;
          r23.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(2,-2)).xyzw;
          r24.xyzw = float4(1,4,3,2) + r19.xxxx;
          r15.w = r23.y * r19.x;
          r19.zw = r23.zy * r19.xx + r19.zw;
          r19.zw = r23.wx * r24.xx + r19.zw;
          r25.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(-2,0)).xyzw;
          r16.y = -r19.x * 2 + 2;
          r20.zw = r25.wx * r16.yy;
          r17.w = r19.x * -2 + 4;
          r20.zw = r25.zy * r17.ww + r20.zw;
          r17.w = r20.y * r21.z + r20.z;
          r17.w = r20.x * r16.y + r17.w;
          r18.w = r25.z * r21.z + r20.w;
          r18.w = r25.w * r16.y + r18.w;
          r20.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y).xyzw;
          r17.w = r20.z * r24.y + r17.w;
          r17.w = r20.w * r21.w + r17.w;
          r18.w = r20.y * r24.y + r18.w;
          r18.w = r20.x * r21.w + r18.w;
          r22.zw = float2(4,1) + -r19.xy;
          r17.w = r22.y * r24.z + r17.w;
          r17.w = r22.x * r22.z + r17.w;
          r18.w = r20.z * r24.z + r18.w;
          r18.w = r20.w * r22.z + r18.w;
          r26.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(2,0)).xyzw;
          r20.z = r19.x * 2 + 2;
          r20.w = dot(r26.zz, r19.xx);
          r17.w = r20.w + r17.w;
          r17.w = r26.w * r20.z + r17.w;
          r21.w = dot(r26.yy, r19.xx);
          r18.w = r21.w + r18.w;
          r18.w = r26.x * r20.z + r18.w;
          r15.w = r15.w * 2 + r17.w;
          r22.x = r23.x * r24.w + r15.w;
          r15.w = r20.w + r18.w;
          r22.y = r26.w * r24.w + r15.w;
          r19.zw = r22.xy + r19.zw;
          r23.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(-2,2)).xyzw;
          r27.xyzw = r23.wzxy * r21.xyxy;
          r20.zw = r27.xz + r27.yw;
          r15.w = r25.y * r21.z + r20.z;
          r15.w = r25.x * r16.y + r15.w;
          r17.w = r23.z * r21.z + r20.w;
          r16.y = r23.w * r16.y + r17.w;
          r23.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(0,2)).xyzw;
          r15.w = r23.z * 2 + r15.w;
          r15.w = r23.w * 2 + r15.w;
          r16.y = r23.y * 2 + r16.y;
          r16.y = r23.x * 2 + r16.y;
          r15.w = r20.y * r24.z + r15.w;
          r15.w = r20.x * r22.z + r15.w;
          r16.y = r23.z * r24.z + r16.y;
          r16.y = r23.w * r22.z + r16.y;
          r18.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r18.xyz, r15.y, int2(2,2)).xyzw;
          r17.w = r18.z * r19.x;
          r15.w = r18.z * r19.x + r15.w;
          r15.w = r18.w * r24.x + r15.w;
          r16.y = r18.y * r19.x + r16.y;
          r16.y = r18.x * r24.x + r16.y;
          r15.w = r21.w + r15.w;
          r18.x = r26.x * r24.w + r15.w;
          r15.w = r17.w * 2 + r16.y;
          r18.y = r18.w * r24.w + r15.w;
          r18.xy = r19.zw + r18.xy;
          r15.w = r18.y * r19.y;
          r15.w = r18.x * r22.w + r15.w;
          r15.w = saturate(0.0163934417 * r15.w);
        } else {
          r14.z = (uint)r12.w;
          r12.w = g_shadowmapTexture.SampleCmpLevelZero(g_shadowmapSampler_s, r14.xyz, r15.y).x;
          r14.x = cmp(r15.y < 1);
          r15.w = r14.x ? r12.w : 1;
        }
        r12.w = -1 + r15.w;
        r12.w = g_lightInfoPunctualShadow[r13.w].baseLight.shadowDimmer * r12.w;
        r12.w = r15.x * r12.w + 1;
        r12.w = r15.z ? r12.w : 1;
        r14.w = r14.w * r12.w;
      }
    }
    r13.xyz = r16.xzw * r14.www + r13.xyz;
    r12.xyz = r17.xyz * r14.www + r12.xyz;
    r11.w = (int)r11.w + 1;
  }
  
  // No code for instruction (needs manual fix):
  // ld_raw r4.w, l(0), g2.xxxx
r4.w = g2.x;

  r1.w = (int)r1.w + (int)r4.w;
  
  // No code for instruction (needs manual fix):
  // ld_raw r4.w, l(0), g3.xxxx
r4.w = g3.x;

  r5.w = (int)r1.w + (int)r4.w;
  r10.y = 1.5 * r1.x;
  r10.y = min(1, r10.y);
  r10.y = -r10.y * 7 + 8;
  r11.z = 0;
  r14.z = 0;
  r15.zw = float2(1,-1);
  r16.yz = float2(0,0);
  r17.yz = float2(0,0);
  r18.zw = float2(1,-1);
  r19.xz = float2(0,0);
  r20.xz = float2(0,0);
  r21.xyz = r12.xyz;
  r22.xyz = r13.xyz;
  r10.z = r1.w;
  while (true) {
    r10.w = cmp((uint)r10.z >= (uint)r5.w);
    if (r10.w != 0) break;
    
    // Known bad code for instruction (needs manual fix):
    // ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(0), t20.xxxx
    // r10.w = g_linearSampler[]..swiz;
r10.w = g_lightIndexInput[r10.z].g_lightIndexInput_uint;

    // Skipped as autogenerated
    // r10.w = (int)r10.w * 9;
    
    // r11.w = (uint13)g_lightInfoArea[r10.w].areaLight.areaLightType;
r11.w = (uint)g_lightInfoArea[r10.w].areaLight.areaLightType;
    
    r12.w = cmp((int)r11.w == 2);
    if (r12.w != 0) {
      r23.xyz = g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz * float3(0.5,0.5,0.5);
      r24.xyz = -r23.xyz * g_lightInfoArea[r10.w].areaLight.lightRadius1 + g_lightInfoArea[r10.w].baseLight.pos.xyz;
      r23.xyz = r23.xyz * g_lightInfoArea[r10.w].areaLight.lightRadius1 + g_lightInfoArea[r10.w].baseLight.pos.xyz;
      r25.xyz = r23.xyz + -r24.xyz;
      r26.xyz = r5.xyz * r2.xxx + -r24.xyz;
      r12.w = dot(r26.xyz, r25.xyz);
      r13.w = dot(r25.xyz, r25.xyz);
      r12.w = r12.w / r13.w;
      r26.xyz = r12.www * r25.yzx + r24.yzx;
      r26.xyz = -r5.yzx * r2.xxx + r26.xyz;
      r13.w = dot(r26.xyz, r26.xyz);
      r13.w = rsqrt(r13.w);
      r26.xyz = r26.xyz * r13.www;
      r27.xyz = g_lightInfoArea[r10.w].baseLight.matrixLeft.zxy * r26.xyz;
      r26.xyz = g_lightInfoArea[r10.w].baseLight.matrixLeft.yzx * r26.yzx + -r27.xyz;
      r13.w = g_lightInfoArea[r10.w].areaLight.lightRadius1 * 0.5;
      r27.xyz = -g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz * r13.www + g_lightInfoArea[r10.w].baseLight.pos.xyz;
      r28.xyz = g_lightInfoArea[r10.w].areaLight.lightRadius0 * r26.xyz + r27.xyz;
      r27.xyz = -g_lightInfoArea[r10.w].areaLight.lightRadius0 * r26.xyz + r27.xyz;
      r29.xyz = g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz * r13.www + g_lightInfoArea[r10.w].baseLight.pos.xyz;
      r30.xyz = -g_lightInfoArea[r10.w].areaLight.lightRadius0 * r26.xyz + r29.xyz;
      r26.xyz = g_lightInfoArea[r10.w].areaLight.lightRadius0 * r26.xyz + r29.xyz;
      r28.xyz = -r5.xyz * r2.xxx + r28.xyz;
      r27.xyz = -r5.xyz * r2.xxx + r27.xyz;
      r29.xyz = -r5.xyz * r2.xxx + r30.xyz;
      r26.xyz = -r5.xyz * r2.xxx + r26.xyz;
      r30.xyz = r28.zxy * r27.yzx;
      r30.xyz = r28.yzx * r27.zxy + -r30.xyz;
      r13.w = dot(r30.xyz, r30.xyz);
      r13.w = rsqrt(r13.w);
      r30.xyz = r30.xyz * r13.www;
      r31.xyz = r29.yzx * r27.zxy;
      r31.xyz = r27.yzx * r29.zxy + -r31.xyz;
      r13.w = dot(r31.xyz, r31.xyz);
      r13.w = rsqrt(r13.w);
      r31.xyz = r31.xyz * r13.www;
      r32.xyz = r29.zxy * r26.yzx;
      r32.xyz = r29.yzx * r26.zxy + -r32.xyz;
      r13.w = dot(r32.xyz, r32.xyz);
      r13.w = rsqrt(r13.w);
      r32.xyz = r32.xyz * r13.www;
      r33.xyz = r26.zxy * r28.yzx;
      r33.xyz = r26.yzx * r28.zxy + -r33.xyz;
      r13.w = dot(r33.xyz, r33.xyz);
      r13.w = rsqrt(r13.w);
      r33.xyz = r33.xyz * r13.www;
      r13.w = dot(-r30.xyz, r31.xyz);
      r14.w = abs(r13.w) * abs(r13.w);
      r16.w = r14.w * abs(r13.w);
      r17.w = abs(r13.w) * -0.212114394 + 1.57072878;
      r14.w = r14.w * 0.0742610022 + r17.w;
      r14.w = r16.w * -0.0187292993 + r14.w;
      r16.w = 1 + -abs(r13.w);
      r16.w = sqrt(r16.w);
      r17.w = r16.w * r14.w;
      r13.w = cmp(r13.w >= 0);
      r14.w = -r16.w * r14.w + 3.14159274;
      r13.w = r13.w ? r17.w : r14.w;
      r14.w = dot(-r31.xyz, r32.xyz);
      r16.w = abs(r14.w) * abs(r14.w);
      r17.w = r16.w * abs(r14.w);
      r19.w = abs(r14.w) * -0.212114394 + 1.57072878;
      r16.w = r16.w * 0.0742610022 + r19.w;
      r16.w = r17.w * -0.0187292993 + r16.w;
      r17.w = 1 + -abs(r14.w);
      r17.w = sqrt(r17.w);
      r19.w = r17.w * r16.w;
      r14.w = cmp(r14.w >= 0);
      r16.w = -r17.w * r16.w + 3.14159274;
      r14.w = r14.w ? r19.w : r16.w;
      r16.w = dot(-r32.xyz, r33.xyz);
      r17.w = abs(r16.w) * abs(r16.w);
      r19.w = r17.w * abs(r16.w);
      r20.w = abs(r16.w) * -0.212114394 + 1.57072878;
      r17.w = r17.w * 0.0742610022 + r20.w;
      r17.w = r19.w * -0.0187292993 + r17.w;
      r19.w = 1 + -abs(r16.w);
      r19.w = sqrt(r19.w);
      r20.w = r19.w * r17.w;
      r16.w = cmp(r16.w >= 0);
      r17.w = -r19.w * r17.w + 3.14159274;
      r16.w = r16.w ? r20.w : r17.w;
      r17.w = dot(-r33.xyz, r30.xyz);
      r19.w = abs(r17.w) * abs(r17.w);
      r20.w = r19.w * abs(r17.w);
      r21.w = abs(r17.w) * -0.212114394 + 1.57072878;
      r19.w = r19.w * 0.0742610022 + r21.w;
      r19.w = r20.w * -0.0187292993 + r19.w;
      r20.w = 1 + -abs(r17.w);
      r20.w = sqrt(r20.w);
      r21.w = r20.w * r19.w;
      r17.w = cmp(r17.w >= 0);
      r19.w = -r20.w * r19.w + 3.14159274;
      r17.w = r17.w ? r21.w : r19.w;
      r13.w = r14.w + r13.w;
      r13.w = r13.w + r16.w;
      r13.w = r13.w + r17.w;
      r13.w = -6.28318548 + r13.w;
      r13.w = 0.200000003 * r13.w;
      r14.w = dot(r28.xyz, r28.xyz);
      r14.w = rsqrt(r14.w);
      r28.xyz = r28.xyz * r14.www;
      r14.w = saturate(dot(r28.xyz, r6.xyz));
      r16.w = dot(r27.xyz, r27.xyz);
      r16.w = rsqrt(r16.w);
      r27.xyz = r27.xyz * r16.www;
      r16.w = saturate(dot(r27.xyz, r6.xyz));
      r14.w = r16.w + r14.w;
      r16.w = dot(r29.xyz, r29.xyz);
      r16.w = rsqrt(r16.w);
      r27.xyz = r29.xyz * r16.www;
      r16.w = saturate(dot(r27.xyz, r6.xyz));
      r14.w = r16.w + r14.w;
      r16.w = dot(r26.xyz, r26.xyz);
      r16.w = rsqrt(r16.w);
      r26.xyz = r26.xyz * r16.www;
      r16.w = saturate(dot(r26.xyz, r6.xyz));
      r14.w = r16.w + r14.w;
      r26.xyz = -r5.xyz * r2.xxx + g_lightInfoArea[r10.w].baseLight.pos.xyz;
      r16.w = dot(r26.xyz, r26.xyz);
      r17.w = rsqrt(r16.w);
      r26.xyz = r26.xyz * r17.www;
      r17.w = saturate(dot(r26.xyz, r6.xyz));
      r14.w = r17.w + r14.w;
      r12.w = saturate(r12.w);
      r25.xyz = r12.www * r25.xyz + r24.xyz;
      r25.xyz = -r5.xyz * r2.xxx + r25.xyz;
      r12.w = dot(r25.xyz, r25.xyz);
      r17.w = rsqrt(r12.w);
      r25.xyz = r25.xyz * r17.www;
      r17.w = g_lightInfoArea[r10.w].areaLight.lightRadius0 * g_lightInfoArea[r10.w].areaLight.lightRadius0;
      r19.w = saturate(dot(r25.xyz, r6.xyz));
      r20.w = 3.14159274 * r19.w;
      r12.w = max(r17.w, r12.w);
      r12.w = r17.w / r12.w;
      r12.w = r20.w * r12.w;
      r12.w = r13.w * r14.w + r12.w;
      r13.w = g_lightInfoArea[r10.w].baseLight.invSqrAttenuationRadius * r16.w;
      r13.w = -r13.w * r13.w + 1;
      r13.w = max(0, r13.w);
      r13.w = r13.w * r13.w;
      r12.w = r13.w * r12.w;
      r13.w = cmp(0 < r12.w);
      if (r13.w != 0) {
        r24.xyz = -r5.xyz * r2.xxx + r24.xyz;
        r23.xyz = -r5.xyz * r2.xxx + r23.xyz;
        r23.xyz = r23.xyz + -r24.xyz;
        r13.w = dot(r23.xyz, r23.xyz);
        r14.w = dot(r9.xyz, r23.xyz);
        r16.w = dot(r9.xyz, r24.xyz);
        r17.w = dot(r24.xyz, r23.xyz);
        r16.w = r16.w * r14.w + -r17.w;
        r13.w = -r14.w * r14.w + r13.w;
        r13.w = saturate(r16.w / r13.w);
        r23.xyz = r13.www * r23.xyz + r24.xyz;
        r13.w = dot(r23.xyz, r9.xyz);
        r24.xyz = r13.www * r9.xyz + -r23.xyz;
        r13.w = dot(r24.xyz, r24.xyz);
        r13.w = sqrt(r13.w);
        r13.w = saturate(g_lightInfoArea[r10.w].areaLight.lightRadius0 / r13.w);
        r23.xyz = r24.xyz * r13.www + r23.xyz;
        r13.w = dot(r23.xyz, r23.xyz);
        r14.w = sqrt(r13.w);
        r13.w = rsqrt(r13.w);
        r23.xyz = r23.xyz * r13.www;
        r13.w = r14.w + r14.w;
        r13.w = g_lightInfoArea[r10.w].areaLight.lightRadius0 / r13.w;
        r13.w = saturate(r13.w + r1.x);
        r13.w = r1.x / r13.w;
        r24.xyz = -r7.xyz * r2.yyy + r23.xyz;
        r14.w = dot(r24.xyz, r24.xyz);
        r14.w = rsqrt(r14.w);
        r24.xyz = r24.xyz * r14.www;
        r26.xyz = -r7.xyz * r2.yyy + r25.xyz;
        r14.w = dot(r26.xyz, r26.xyz);
        r14.w = rsqrt(r14.w);
        r26.xyz = r26.xyz * r14.www;
        r14.w = saturate(dot(r23.xyz, r24.xyz));
        r16.w = saturate(dot(r25.xyz, r26.xyz));
        r17.w = saturate(dot(r6.xyz, r24.xyz));
        r20.w = saturate(dot(r6.xyz, r23.xyz));
        r14.w = 1 + -r14.w;
        r21.w = r14.w * r14.w;
        r21.w = r21.w * r21.w;
        r14.w = r21.w * r14.w;
        r23.xyz = r8.xyz * r14.www + r4.xyz;
        r14.w = -r20.w * r6.w + r20.w;
        r14.w = r14.w * r20.w + r6.w;
        r14.w = sqrt(r14.w);
        r14.w = r14.w * r2.z;
        r14.w = r20.w * r8.w + r14.w;
        r14.w = 0.5 / r14.w;
        r20.w = r17.w * r6.w + -r17.w;
        r17.w = r20.w * r17.w + 1;
        r17.w = r17.w * r17.w;
        r17.w = r6.w / r17.w;
        r14.w = r17.w * r14.w;
        r13.w = r14.w * r13.w;
        r23.xyz = r23.xyz * r13.www;
        r13.w = r16.w * r16.w;
        r13.w = dot(r13.ww, r3.xx);
        r13.w = r3.x * 0.5 + r13.w;
        r14.w = 1 + -r19.w;
        r16.w = r14.w * r14.w;
        r16.w = r16.w * r16.w;
        r14.w = r16.w * r14.w;
        r13.w = -1 + r13.w;
        r14.w = r13.w * r14.w + 1;
        r13.w = r13.w * r10.x + 1;
        r13.w = r14.w * r13.w;
        r13.w = r13.w * r9.w;
        r14.w = g_lightInfoArea[r10.w].baseLight.diffuseScale * r12.w;
        r24.xyz = g_lightInfoArea[r10.w].baseLight.color.xyz * r14.www;
        r24.xyz = r24.xyz * r13.www;
        r12.w = g_lightInfoArea[r10.w].baseLight.specularScale * r12.w;
        r25.xyz = g_lightInfoArea[r10.w].baseLight.color.xyz * r12.www;
        r23.xyz = r25.xyz * r23.xyz;
      } else {
        r24.xyz = float3(0,0,0);
        r23.xyz = float3(0,0,0);
      }
    } else {
      r12.w = cmp((int)r11.w == 5);
      if (r12.w != 0) {
        r25.xyz = r5.xyz * r2.xxx + -g_lightInfoArea[r10.w].baseLight.pos.xyz;
        r12.w = dot(r25.xyz, -g_lightInfoArea[r10.w].baseLight.matrixForward.xyz);
        r12.w = cmp(0 < r12.w);
        if (r12.w != 0) {
          r25.xy = g_lightInfoArea[r10.w].areaLight.lightRadius0 * float2(0.5,0.5);
          r26.xyz = g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz * -r25.xxx + g_lightInfoArea[r10.w].baseLight.pos.xyz;
          r27.xyz = g_lightInfoArea[r10.w].baseLight.matrixUp.xyz * r25.yyy + r26.xyz;
          r26.xyz = g_lightInfoArea[r10.w].baseLight.matrixUp.xyz * -r25.yyy + r26.xyz;
          r28.xyz = g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz * r25.xxx + g_lightInfoArea[r10.w].baseLight.pos.xyz;
          r29.xyz = g_lightInfoArea[r10.w].baseLight.matrixUp.xyz * -r25.yyy + r28.xyz;
          r28.xyz = g_lightInfoArea[r10.w].baseLight.matrixUp.xyz * r25.yyy + r28.xyz;
          r27.xyz = -r5.xyz * r2.xxx + r27.xyz;
          r26.xyz = -r5.xyz * r2.xxx + r26.xyz;
          r29.xyz = -r5.xyz * r2.xxx + r29.xyz;
          r28.xyz = -r5.xyz * r2.xxx + r28.xyz;
          r30.xyz = r27.zxy * r26.yzx;
          r30.xyz = r27.yzx * r26.zxy + -r30.xyz;
          r12.w = dot(r30.xyz, r30.xyz);
          r12.w = rsqrt(r12.w);
          r30.xyz = r30.xyz * r12.www;
          r31.xyz = r29.yzx * r26.zxy;
          r31.xyz = r26.yzx * r29.zxy + -r31.xyz;
          r12.w = dot(r31.xyz, r31.xyz);
          r12.w = rsqrt(r12.w);
          r31.xyz = r31.xyz * r12.www;
          r32.xyz = r29.zxy * r28.yzx;
          r32.xyz = r29.yzx * r28.zxy + -r32.xyz;
          r12.w = dot(r32.xyz, r32.xyz);
          r12.w = rsqrt(r12.w);
          r32.xyz = r32.xyz * r12.www;
          r33.xyz = r28.zxy * r27.yzx;
          r33.xyz = r28.yzx * r27.zxy + -r33.xyz;
          r12.w = dot(r33.xyz, r33.xyz);
          r12.w = rsqrt(r12.w);
          r33.xyz = r33.xyz * r12.www;
          r12.w = dot(-r30.xyz, r31.xyz);
          r13.w = abs(r12.w) * abs(r12.w);
          r14.w = r13.w * abs(r12.w);
          r16.w = abs(r12.w) * -0.212114394 + 1.57072878;
          r13.w = r13.w * 0.0742610022 + r16.w;
          r13.w = r14.w * -0.0187292993 + r13.w;
          r14.w = 1 + -abs(r12.w);
          r14.w = sqrt(r14.w);
          r16.w = r14.w * r13.w;
          r12.w = cmp(r12.w >= 0);
          r13.w = -r14.w * r13.w + 3.14159274;
          r12.w = r12.w ? r16.w : r13.w;
          r13.w = dot(-r31.xyz, r32.xyz);
          r14.w = abs(r13.w) * abs(r13.w);
          r16.w = r14.w * abs(r13.w);
          r17.w = abs(r13.w) * -0.212114394 + 1.57072878;
          r14.w = r14.w * 0.0742610022 + r17.w;
          r14.w = r16.w * -0.0187292993 + r14.w;
          r16.w = 1 + -abs(r13.w);
          r16.w = sqrt(r16.w);
          r17.w = r16.w * r14.w;
          r13.w = cmp(r13.w >= 0);
          r14.w = -r16.w * r14.w + 3.14159274;
          r13.w = r13.w ? r17.w : r14.w;
          r14.w = dot(-r32.xyz, r33.xyz);
          r16.w = abs(r14.w) * abs(r14.w);
          r17.w = r16.w * abs(r14.w);
          r19.w = abs(r14.w) * -0.212114394 + 1.57072878;
          r16.w = r16.w * 0.0742610022 + r19.w;
          r16.w = r17.w * -0.0187292993 + r16.w;
          r17.w = 1 + -abs(r14.w);
          r17.w = sqrt(r17.w);
          r19.w = r17.w * r16.w;
          r14.w = cmp(r14.w >= 0);
          r16.w = -r17.w * r16.w + 3.14159274;
          r14.w = r14.w ? r19.w : r16.w;
          r16.w = dot(-r33.xyz, r30.xyz);
          r17.w = abs(r16.w) * abs(r16.w);
          r19.w = r17.w * abs(r16.w);
          r20.w = abs(r16.w) * -0.212114394 + 1.57072878;
          r17.w = r17.w * 0.0742610022 + r20.w;
          r17.w = r19.w * -0.0187292993 + r17.w;
          r19.w = 1 + -abs(r16.w);
          r19.w = sqrt(r19.w);
          r20.w = r19.w * r17.w;
          r16.w = cmp(r16.w >= 0);
          r17.w = -r19.w * r17.w + 3.14159274;
          r16.w = r16.w ? r20.w : r17.w;
          r12.w = r13.w + r12.w;
          r12.w = r12.w + r14.w;
          r12.w = r12.w + r16.w;
          r12.w = -6.28318548 + r12.w;
          r12.w = 0.200000003 * r12.w;
          r13.w = dot(r27.xyz, r27.xyz);
          r13.w = rsqrt(r13.w);
          r27.xyz = r27.xyz * r13.www;
          r13.w = saturate(dot(r27.xyz, r6.xyz));
          r14.w = dot(r26.xyz, r26.xyz);
          r14.w = rsqrt(r14.w);
          r26.xyz = r26.xyz * r14.www;
          r14.w = saturate(dot(r26.xyz, r6.xyz));
          r13.w = r14.w + r13.w;
          r14.w = dot(r29.xyz, r29.xyz);
          r14.w = rsqrt(r14.w);
          r26.xyz = r29.xyz * r14.www;
          r14.w = saturate(dot(r26.xyz, r6.xyz));
          r13.w = r14.w + r13.w;
          r14.w = dot(r28.xyz, r28.xyz);
          r14.w = rsqrt(r14.w);
          r26.xyz = r28.xyz * r14.www;
          r14.w = saturate(dot(r26.xyz, r6.xyz));
          r13.w = r14.w + r13.w;
          r26.xyz = -r5.xyz * r2.xxx + g_lightInfoArea[r10.w].baseLight.pos.xyz;
          r14.w = dot(r26.xyz, r26.xyz);
          r14.w = rsqrt(r14.w);
          r27.xyz = r26.xyz * r14.www;
          r14.w = saturate(dot(r27.xyz, r6.xyz));
          r13.w = r14.w + r13.w;
          r12.w = r13.w * r12.w;
          r13.w = saturate(dot(r6.xyz, g_lightInfoArea[r10.w].baseLight.matrixForward.xyz));
          r13.w = 9.99999975e-006 + r13.w;
          r27.xyz = r6.xyz * r13.www + g_lightInfoArea[r10.w].baseLight.matrixForward.xyz;
          r14.w = dot(r27.xyz, r27.xyz);
          r14.w = rsqrt(r14.w);
          r28.xyz = g_lightInfoArea[r10.w].baseLight.matrixForward.xyz * r13.www + r6.xyz;
          r13.w = dot(r28.xyz, r28.xyz);
          r13.w = rsqrt(r13.w);
          r28.xyz = r28.xyz * r13.www;
          r27.xyz = r27.xyz * r14.www + r28.xyz;
          r27.xyz = float3(0.5,0.5,0.5) * r27.xyz;
          r13.w = dot(-g_lightInfoArea[r10.w].baseLight.matrixForward.xyz, r26.xyz);
          r14.w = dot(-g_lightInfoArea[r10.w].baseLight.matrixForward.xyz, r27.xyz);
          r13.w = r13.w / r14.w;
          r26.xyz = r27.xyz * r13.www + r7.xyz;
          r26.xyz = -g_lightInfoArea[r10.w].baseLight.pos.xyz + r26.xyz;
          r27.x = dot(r26.xyz, g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz);
          r27.y = dot(r26.xyz, g_lightInfoArea[r10.w].baseLight.matrixUp.xyz);
          r25.zw = max(r27.xy, -r25.xy);
          r25.xy = min(r25.zw, r25.xy);
          r25.xzw = r25.xxx * g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz + g_lightInfoArea[r10.w].baseLight.pos.xyz;
          r25.xyz = r25.yyy * g_lightInfoArea[r10.w].baseLight.matrixUp.xyz + r25.xzw;
          r25.xyz = -r5.xyz * r2.xxx + r25.xyz;
          r13.w = dot(r25.xyz, r25.xyz);
          r13.w = rsqrt(r13.w);
          r25.xyz = r25.xyz * r13.www;
        } else {
          r25.xyz = float3(1,0,0);
          r12.w = 0;
        }
        r26.xyz = -r5.xyz * r2.xxx + g_lightInfoArea[r10.w].baseLight.pos.xyz;
        r13.w = dot(r26.xyz, r26.xyz);
        r13.w = g_lightInfoArea[r10.w].baseLight.invSqrAttenuationRadius * r13.w;
        r13.w = -r13.w * r13.w + 1;
        r13.w = max(0, r13.w);
        r13.w = r13.w * r13.w;
        r12.w = r13.w * r12.w;
        r13.w = cmp(0 < r12.w);
        if (r13.w != 0) {
          r27.xy = g_lightInfoArea[r10.w].areaLight.lightRadius0 * float2(0.5,0.5);
          r28.x = dot(r9.xyz, g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz);
          r28.y = dot(r9.xyz, g_lightInfoArea[r10.w].baseLight.matrixUp.xyz);
          r28.z = dot(r9.xyz, -g_lightInfoArea[r10.w].baseLight.matrixForward.xyz);
          r29.x = dot(r26.xyz, g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz);
          r29.y = dot(r26.xyz, g_lightInfoArea[r10.w].baseLight.matrixUp.xyz);
          r29.z = dot(r26.xyz, -g_lightInfoArea[r10.w].baseLight.matrixForward.xyz);
          r13.w = r29.z / r28.z;
          r30.xyz = r28.xyz * r13.www;
          r27.zw = r28.xy * r13.ww + -r29.xy;
          r13.w = cmp(0 < r13.w);
          r27.yz = cmp(r27.xy >= abs(r27.zw));
          r13.w = r13.w ? r27.y : 0;
          r13.w = r27.z ? r13.w : 0;
          if (r13.w == 0) {
            r11.xy = g_lightInfoArea[r10.w].areaLight.lightRadius0 * float2(-0.5,-0.5);
            r31.xyz = r29.xyz + r11.xyz;
            r14.xy = g_lightInfoArea[r10.w].areaLight.lightRadius0 * float2(0.5,0.5);
            r32.xyz = r29.xyz + r14.xyz;
            r31.w = r32.x;
            r11.xy = r31.xw * r28.xx;
            r32.w = r31.y;
            r14.xy = r32.wy * r28.yy;
            r27.yz = r29.zz * r28.zz;
            r33.xy = r31.xw * r31.xw;
            r33.zw = r29.zz * r29.zz;
            r34.xy = r32.wy * r32.wy + r33.zw;
            r34.zw = r34.xy * r28.xx;
            r14.xy = -r14.xy * r31.xw + r34.zw;
            r14.xy = -r27.yz * r31.xw + r14.xy;
            r34.zw = r28.yy * r32.wy + r27.yz;
            r27.xw = r34.zw * r27.xx;
            r27.xw = r27.xw + r27.xw;
            r35.xy = r14.xy / r27.xw;
            r35.z = -r35.y;
            r15.xy = saturate(r35.xz);
            r14.xy = g_lightInfoArea[r10.w].areaLight.lightRadius0 * r15.zy;
            r14.xy = r14.xy * r15.xw + r31.xw;
            r27.xw = r28.xx * r14.xy + r34.zw;
            r14.xy = r14.xy * r14.xy + r34.xy;
            r14.xy = sqrt(r14.xy);
            r14.xy = r27.xw / r14.xy;
            r13.w = cmp(r14.x < r14.y);
            if (r13.w != 0) {
              r16.x = g_lightInfoArea[r10.w].areaLight.lightRadius0;
              r30.xyz = -r16.xyz * r15.yyy + r32.xyz;
              r14.x = r14.y;
            } else {
              r17.x = g_lightInfoArea[r10.w].areaLight.lightRadius0;
              r30.xyz = r17.xyz * r15.xxx + r31.xyz;
            }
            r11.xy = r11.xy * r32.wy;
            r11.xy = r28.yy * r33.xy + -r11.xy;
            r11.xy = -r27.yz * r32.wy + r11.xy;
            r11.xy = r28.yy * r33.zw + r11.xy;
            r14.yw = r28.xx * r31.xw + r27.yz;
            r15.xy = g_lightInfoArea[r10.w].areaLight.lightRadius1 * r14.yw;
            r27.xy = r11.xy / r15.xy;
            r27.z = -r27.y;
            r18.xy = saturate(r27.xz);
            r11.xy = g_lightInfoArea[r10.w].areaLight.lightRadius1 * r18.zy;
            r11.xy = r11.xy * r18.xw + r32.wy;
            r14.yw = r28.yy * r11.xy + r14.yw;
            r15.xy = r31.xw * r31.xw + r33.zw;
            r11.xy = r11.xy * r11.xy + r15.xy;
            r11.xy = sqrt(r11.xy);
            r11.xy = r14.yw / r11.xy;
            r11.x = cmp(r14.x < r11.x);
            if (r11.x != 0) {
              r19.y = g_lightInfoArea[r10.w].areaLight.lightRadius1;
              r30.xyz = r19.xyz * r18.xxx + r31.xyz;
            } else {
              r11.x = cmp(r14.x < r11.y);
              if (r11.x != 0) {
                r20.y = g_lightInfoArea[r10.w].areaLight.lightRadius1;
                r30.xyz = -r20.xyz * r18.yyy + r32.xyz;
              }
            }
          }
          r11.x = dot(r30.xyz, r30.xyz);
          r11.x = rsqrt(r11.x);
          r14.xyw = r30.xyz * r11.xxx;
          r11.x = dot(r28.xyz, r28.xyz);
          r11.x = rsqrt(r11.x);
          r27.xyz = r28.xyz * r11.xxx;
          r11.x = dot(r14.xyw, r27.xyz);
          r11.x = saturate(r11.x * 1.66600001 + -0.5);
          r14.xyw = r30.xyz + -r29.xyz;
          r26.xyz = r14.xxx * g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz + r26.xyz;
          r26.xyz = r14.yyy * g_lightInfoArea[r10.w].baseLight.matrixUp.xyz + r26.xyz;
          r14.xyw = r14.www * -g_lightInfoArea[r10.w].baseLight.matrixForward.xyz + r26.xyz;
          r14.xyw = r14.xyw + -r25.xyz;
          r14.xyw = r11.xxx * r14.xyw + r25.xyz;
          r11.x = dot(r14.xyw, r14.xyw);
          r11.y = sqrt(r11.x);
          r11.y = 1 / r11.y;
          r11.x = rsqrt(r11.x);
          r14.xyw = r14.xyw * r11.xxx;
          r11.x = g_lightInfoArea[r10.w].areaLight.lightRadius0 + g_lightInfoArea[r10.w].areaLight.lightRadius1;
          r11.x = saturate(r11.x * r11.y + r1.x);
          r11.x = r1.x / r11.x;
          r11.x = r11.x * r11.x;
          r11.x = r11.x * r10.y;
          r26.xyz = -r7.xyz * r2.yyy + r14.xyw;
          r11.y = dot(r26.xyz, r26.xyz);
          r11.y = rsqrt(r11.y);
          r26.xyz = r26.xyz * r11.yyy;
          r27.xyz = -r7.xyz * r2.yyy + r25.xyz;
          r11.y = dot(r27.xyz, r27.xyz);
          r11.y = rsqrt(r11.y);
          r27.xyz = r27.xyz * r11.yyy;
          r11.y = saturate(dot(r14.xyw, r26.xyz));
          r13.w = saturate(dot(r25.xyz, r27.xyz));
          r15.x = saturate(dot(r6.xyz, r26.xyz));
          r14.x = saturate(dot(r6.xyz, r14.xyw));
          r14.y = saturate(dot(r6.xyz, r25.xyz));
          r11.y = 1 + -r11.y;
          r14.w = r11.y * r11.y;
          r14.w = r14.w * r14.w;
          r11.y = r14.w * r11.y;
          r25.xyz = r8.xyz * r11.yyy + r4.xyz;
          r11.y = -r14.x * r6.w + r14.x;
          r11.y = r11.y * r14.x + r6.w;
          r11.y = sqrt(r11.y);
          r11.y = r11.y * r2.z;
          r11.y = r14.x * r8.w + r11.y;
          r11.y = 0.5 / r11.y;
          r14.x = r15.x * r6.w + -r15.x;
          r14.x = r14.x * r15.x + 1;
          r14.x = r14.x * r14.x;
          r14.x = r6.w / r14.x;
          r11.y = r14.x * r11.y;
          r11.x = r11.y * r11.x;
          r25.xyz = r25.xyz * r11.xxx;
          r11.x = r13.w * r13.w;
          r11.x = dot(r11.xx, r3.xx);
          r11.x = r3.x * 0.5 + r11.x;
          r11.y = 1 + -r14.y;
          r13.w = r11.y * r11.y;
          r13.w = r13.w * r13.w;
          r11.y = r13.w * r11.y;
          r11.x = -1 + r11.x;
          r11.y = r11.x * r11.y + 1;
          r11.x = r11.x * r10.x + 1;
          r11.x = r11.y * r11.x;
          r11.x = r11.x * r9.w;
          r11.y = g_lightInfoArea[r10.w].baseLight.diffuseScale * r12.w;
          r14.xyw = g_lightInfoArea[r10.w].baseLight.color.xyz * r11.yyy;
          r24.xyz = r14.xyw * r11.xxx;
          r11.x = g_lightInfoArea[r10.w].baseLight.specularScale * r12.w;
          r14.xyw = g_lightInfoArea[r10.w].baseLight.color.xyz * r11.xxx;
          r23.xyz = r25.xyz * r14.xyw;
        } else {
          r24.xyz = float3(0,0,0);
          r23.xyz = float3(0,0,0);
        }
      } else {
        r11.x = cmp((int)r11.w == 4);
        if (r11.x != 0) {
          r11.xyw = -r5.xyz * r2.xxx + g_lightInfoArea[r10.w].baseLight.pos.xyz;
          r12.w = dot(r11.xyw, r11.xyw);
          r13.w = rsqrt(r12.w);
          r14.xyw = r13.www * r11.xyw;
          r13.w = dot(r6.xyz, r14.xyw);
          r15.x = g_lightInfoArea[r10.w].areaLight.lightRadius0 * g_lightInfoArea[r10.w].areaLight.lightRadius0;
          r15.y = max(r15.x, r12.w);
          r15.y = g_lightInfoArea[r10.w].areaLight.lightRadius0 * g_lightInfoArea[r10.w].areaLight.lightRadius0 + r15.y;
          r15.x = r15.x / r15.y;
          r16.xw = r15.xx * float2(-0.690576434,-10.4827538) + float2(0.559636116,18.2588902);
          r15.y = r16.w * r15.x + -11.7109194;
          r15.y = r15.y * r15.x + 4.99786425;
          r16.w = r13.w * 0.5 + 0.5;
          r17.x = log2(r16.w);
          r15.y = r17.x * r15.y;
          r15.y = exp2(r15.y);
          r17.x = saturate(r13.w);
          r13.w = r16.x * r13.w;
          r16.x = r16.w + -r15.y;
          r13.w = r13.w * r16.x + r15.y;
          r13.w = max(r17.x, r13.w);
          r13.w = r13.w * r15.x;
          r13.w = 3.14159274 * r13.w;
          r15.x = saturate(dot(-g_lightInfoArea[r10.w].baseLight.matrixForward.xyz, -r14.xyw));
          r13.w = r15.x * r13.w;
          r25.xyz = -r5.xyz * r2.xxx + g_lightInfoArea[r10.w].areaLight.virtualPos.xyz;
          r15.x = dot(r25.xyz, r25.xyz);
          r15.x = rsqrt(r15.x);
          r25.xyz = r25.xyz * r15.xxx;
          r15.x = dot(g_lightInfoArea[r10.w].baseLight.matrixForward.xyz, r25.xyz);
          r15.x = saturate(r15.x * g_lightInfoArea[r10.w].baseLight.angleScale + g_lightInfoArea[r10.w].baseLight.angleOffset);
          r15.x = r15.x * r15.x;
          r13.w = r15.x * r13.w;
          r12.w = g_lightInfoArea[r10.w].baseLight.invSqrAttenuationRadius * r12.w;
          r12.w = -r12.w * r12.w + 1;
          r12.w = max(0, r12.w);
          r12.w = r12.w * r12.w;
          r12.w = r13.w * r12.w;
          r13.w = cmp(0 < r12.w);
          if (r13.w != 0) {
            r13.w = saturate(dot(r9.xyz, -g_lightInfoArea[r10.w].baseLight.matrixForward.xyz));
            r13.w = 9.99999975e-006 + r13.w;
            r25.xyz = g_lightInfoArea[r10.w].baseLight.matrixForward.xyz * r13.www + r9.xyz;
            r13.w = dot(r25.xyz, r25.xyz);
            r13.w = rsqrt(r13.w);
            r25.xyz = r25.xyz * r13.www;
            r11.x = dot(-g_lightInfoArea[r10.w].baseLight.matrixForward.xyz, r11.xyw);
            r11.y = dot(-g_lightInfoArea[r10.w].baseLight.matrixForward.xyz, r25.xyz);
            r11.x = r11.x / r11.y;
            r11.xyw = r25.xyz * r11.xxx + r7.xyz;
            r11.xyw = -g_lightInfoArea[r10.w].baseLight.pos.xyz + r11.xyw;
            r15.x = dot(r11.xyw, g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz);
            r15.y = dot(r11.xyw, g_lightInfoArea[r10.w].baseLight.matrixUp.xyz);
            r11.x = dot(r15.xy, r15.xy);
            r11.x = sqrt(r11.x);
            r11.yw = r15.xy / r11.xx;
            r11.yw = g_lightInfoArea[r10.w].areaLight.lightRadius0 * r11.yw;
            r11.x = cmp(r11.x < g_lightInfoArea[r10.w].areaLight.lightRadius0);
            r11.xy = r11.xx ? r15.xy : r11.yw;
            r25.xyz = r11.xxx * g_lightInfoArea[r10.w].baseLight.matrixLeft.xyz + g_lightInfoArea[r10.w].baseLight.pos.xyz;
            r11.xyw = r11.yyy * g_lightInfoArea[r10.w].baseLight.matrixUp.xyz + r25.xyz;
            r11.xyw = -r5.xyz * r2.xxx + r11.xyw;
            r13.w = dot(r11.xyw, r11.xyw);
            r13.w = sqrt(r13.w);
            r11.xyw = r11.xyw / r13.www;
            r13.w = r13.w + r13.w;
            r13.w = g_lightInfoArea[r10.w].areaLight.lightRadius0 / r13.w;
            r13.w = saturate(r13.w + r1.x);
            r13.w = r1.x / r13.w;
            r13.w = r13.w * r13.w;
            r25.xyz = -r7.xyz * r2.yyy + r11.xyw;
            r15.x = dot(r25.xyz, r25.xyz);
            r15.x = rsqrt(r15.x);
            r25.xyz = r25.xyz * r15.xxx;
            r26.xyz = -r7.xyz * r2.yyy + r14.xyw;
            r15.x = dot(r26.xyz, r26.xyz);
            r15.x = rsqrt(r15.x);
            r26.xyz = r26.xyz * r15.xxx;
            r15.x = saturate(dot(r11.xyw, r25.xyz));
            r14.x = saturate(dot(r14.xyw, r26.xyz));
            r14.y = saturate(dot(r6.xyz, r25.xyz));
            r11.x = saturate(dot(r6.xyz, r11.xyw));
            r11.y = 1 + -r15.x;
            r11.w = r11.y * r11.y;
            r11.w = r11.w * r11.w;
            r11.y = r11.w * r11.y;
            r25.xyz = r8.xyz * r11.yyy + r4.xyz;
            r11.y = -r11.x * r6.w + r11.x;
            r11.y = r11.y * r11.x + r6.w;
            r11.y = sqrt(r11.y);
            r11.y = r11.y * r2.z;
            r11.x = r11.x * r8.w + r11.y;
            r11.x = 0.5 / r11.x;
            r11.y = r14.y * r6.w + -r14.y;
            r11.y = r11.y * r14.y + 1;
            r11.y = r11.y * r11.y;
            r11.y = r6.w / r11.y;
            r11.x = r11.x * r11.y;
            r11.x = r11.x * r13.w;
            r11.xyw = r25.xyz * r11.xxx;
            r13.w = r14.x * r14.x;
            r13.w = dot(r13.ww, r3.xx);
            r13.w = r3.x * 0.5 + r13.w;
            r14.x = 1 + -r17.x;
            r14.y = r14.x * r14.x;
            r14.y = r14.y * r14.y;
            r14.x = r14.y * r14.x;
            r13.w = -1 + r13.w;
            r14.x = r13.w * r14.x + 1;
            r13.w = r13.w * r10.x + 1;
            r13.w = r14.x * r13.w;
            r13.w = r13.w * r9.w;
            r14.x = g_lightInfoArea[r10.w].baseLight.diffuseScale * r12.w;
            r14.xyw = g_lightInfoArea[r10.w].baseLight.color.xyz * r14.xxx;
            r24.xyz = r14.xyw * r13.www;
            r12.w = g_lightInfoArea[r10.w].baseLight.specularScale * r12.w;
            r14.xyw = g_lightInfoArea[r10.w].baseLight.color.xyz * r12.www;
            r23.xyz = r14.xyw * r11.xyw;
          } else {
            r24.xyz = float3(0,0,0);
            r23.xyz = float3(0,0,0);
          }
        } else {
          r11.xyw = -r5.xyz * r2.xxx + g_lightInfoArea[r10.w].baseLight.pos.xyz;
          r12.w = dot(r11.xyw, r11.xyw);
          r13.w = rsqrt(r12.w);
          r14.xyw = r13.www * r11.xyw;
          r13.w = dot(r6.xyz, r14.xyw);
          r15.x = g_lightInfoArea[r10.w].areaLight.lightRadius0 * g_lightInfoArea[r10.w].areaLight.lightRadius0;
          r15.y = max(r15.x, r12.w);
          r15.x = r15.x / r15.y;
          r16.xw = r15.xx * float2(-0.690576434,-10.4827538) + float2(0.559636116,18.2588902);
          r15.y = r16.w * r15.x + -11.7109194;
          r15.y = r15.y * r15.x + 4.99786425;
          r16.w = r13.w * 0.5 + 0.5;
          r17.x = log2(r16.w);
          r15.y = r17.x * r15.y;
          r15.y = exp2(r15.y);
          r17.x = saturate(r13.w);
          r13.w = r16.x * r13.w;
          r16.x = r16.w + -r15.y;
          r13.w = r13.w * r16.x + r15.y;
          r13.w = max(r17.x, r13.w);
          r13.w = r13.w * r15.x;
          r13.w = 3.14159274 * r13.w;
          r12.w = g_lightInfoArea[r10.w].baseLight.invSqrAttenuationRadius * r12.w;
          r12.w = -r12.w * r12.w + 1;
          r12.w = max(0, r12.w);
          r12.w = r12.w * r12.w;
          r12.w = r13.w * r12.w;
          r13.w = cmp(0 < r12.w);
          if (r13.w != 0) {
            r13.w = dot(r11.xyw, r9.xyz);
            r25.xyz = r13.www * r9.xyz + -r11.xyw;
            r13.w = dot(r25.xyz, r25.xyz);
            r13.w = sqrt(r13.w);
            r13.w = saturate(g_lightInfoArea[r10.w].areaLight.lightRadius0 / r13.w);
            r11.xyw = r25.xyz * r13.www + r11.xyw;
            r13.w = dot(r11.xyw, r11.xyw);
            r13.w = sqrt(r13.w);
            r11.xyw = r11.xyw / r13.www;
            r13.w = r13.w + r13.w;
            r13.w = g_lightInfoArea[r10.w].areaLight.lightRadius0 / r13.w;
            r13.w = saturate(r13.w + r1.x);
            r13.w = r1.x / r13.w;
            r13.w = r13.w * r13.w;
            r25.xyz = -r7.xyz * r2.yyy + r11.xyw;
            r15.x = dot(r25.xyz, r25.xyz);
            r15.x = rsqrt(r15.x);
            r25.xyz = r25.xyz * r15.xxx;
            r26.xyz = -r7.xyz * r2.yyy + r14.xyw;
            r15.x = dot(r26.xyz, r26.xyz);
            r15.x = rsqrt(r15.x);
            r26.xyz = r26.xyz * r15.xxx;
            r15.x = saturate(dot(r11.xyw, r25.xyz));
            r14.x = saturate(dot(r14.xyw, r26.xyz));
            r14.y = saturate(dot(r6.xyz, r25.xyz));
            r11.x = saturate(dot(r6.xyz, r11.xyw));
            r11.y = 1 + -r15.x;
            r11.w = r11.y * r11.y;
            r11.w = r11.w * r11.w;
            r11.y = r11.w * r11.y;
            r25.xyz = r8.xyz * r11.yyy + r4.xyz;
            r11.y = -r11.x * r6.w + r11.x;
            r11.y = r11.y * r11.x + r6.w;
            r11.y = sqrt(r11.y);
            r11.y = r11.y * r2.z;
            r11.x = r11.x * r8.w + r11.y;
            r11.x = 0.5 / r11.x;
            r11.y = r14.y * r6.w + -r14.y;
            r11.y = r11.y * r14.y + 1;
            r11.y = r11.y * r11.y;
            r11.y = r6.w / r11.y;
            r11.x = r11.x * r11.y;
            r11.x = r11.x * r13.w;
            r11.xyw = r25.xyz * r11.xxx;
            r13.w = r14.x * r14.x;
            r13.w = dot(r13.ww, r3.xx);
            r13.w = r3.x * 0.5 + r13.w;
            r14.x = 1 + -r17.x;
            r14.y = r14.x * r14.x;
            r14.y = r14.y * r14.y;
            r14.x = r14.y * r14.x;
            r13.w = -1 + r13.w;
            r14.x = r13.w * r14.x + 1;
            r13.w = r13.w * r10.x + 1;
            r13.w = r14.x * r13.w;
            r13.w = r13.w * r9.w;
            r14.x = g_lightInfoArea[r10.w].baseLight.diffuseScale * r12.w;
            r14.xyw = g_lightInfoArea[r10.w].baseLight.color.xyz * r14.xxx;
            r24.xyz = r14.xyw * r13.www;
            r12.w = g_lightInfoArea[r10.w].baseLight.specularScale * r12.w;
            r14.xyw = g_lightInfoArea[r10.w].baseLight.color.xyz * r12.www;
            r23.xyz = r14.xyw * r11.xyw;
          } else {
            r24.xyz = float3(0,0,0);
            r23.xyz = float3(0,0,0);
          }
        }
      }
    }
    r22.xyz = r24.xyz + r22.xyz;
    r21.xyz = r23.xyz + r21.xyz;
    r10.z = (int)r10.z + 1;
  }
  
  // No code for instruction (needs manual fix):
  // ld_raw r4.w, l(0), g3.xxxx
r4.w = g3.x;

  r1.w = (int)r1.w + (int)r4.w;
  
  // No code for instruction (needs manual fix):
  // ld_raw r4.w, l(0), g4.xxxx
r4.w = g4.x;

  r4.w = (int)r1.w + (int)r4.w;
  r11.z = 0;
  r12.z = 0;
  r13.zw = float2(1,-1);
  r14.yz = float2(0,0);
  r15.yz = float2(0,0);
  r16.zw = float2(1,-1);
  r7.w = 1;
  r17.xz = float2(0,0);
  r18.xz = float2(0,0);
  r19.xyz = r21.xyz;
  r20.xyz = r22.xyz;
  r5.w = r1.w;
  while (true) {
    r10.z = cmp((uint)r5.w >= (uint)r4.w);
    if (r10.z != 0) break;
    
    // Known bad code for instruction (needs manual fix):
    // ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.z, r5.w, l(0), t20.xxxx
    // r10.z = g_linearSampler[]..swiz;
r10.z = g_lightIndexInput[r5.w].g_lightIndexInput_uint;
  
    // skipped as autogenerated
    // r10.w = (int)r10.z * 23;
    
    // r11.w = (uint13)g_lightInfoAreaShadow[r10.w].areaLight.areaLightType;
r11.w = (uint)g_lightInfoAreaShadow[r10.w].areaLight.areaLightType;
    
    r12.w = cmp((int)r11.w == 2);
    if (r12.w != 0) {
      r23.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz * float3(0.5,0.5,0.5);
      r24.xyz = -r23.xyz * g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1 + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
      r23.xyz = r23.xyz * g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1 + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
      r25.xyz = r23.xyz + -r24.xyz;
      r26.xyz = r5.xyz * r2.xxx + -r24.xyz;
      r12.w = dot(r26.xyz, r25.xyz);
      r14.w = dot(r25.xyz, r25.xyz);
      r12.w = r12.w / r14.w;
      r26.xyz = r12.www * r25.yzx + r24.yzx;
      r26.xyz = -r5.yzx * r2.xxx + r26.xyz;
      r14.w = dot(r26.xyz, r26.xyz);
      r14.w = rsqrt(r14.w);
      r26.xyz = r26.xyz * r14.www;
      r27.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.zxy * r26.xyz;
      r26.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.yzx * r26.yzx + -r27.xyz;
      r14.w = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1 * 0.5;
      r27.xyz = -g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz * r14.www + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
      r28.xyz = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * r26.xyz + r27.xyz;
      r27.xyz = -g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * r26.xyz + r27.xyz;
      r29.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz * r14.www + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
      r30.xyz = -g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * r26.xyz + r29.xyz;
      r26.xyz = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * r26.xyz + r29.xyz;
      r28.xyz = -r5.xyz * r2.xxx + r28.xyz;
      r27.xyz = -r5.xyz * r2.xxx + r27.xyz;
      r29.xyz = -r5.xyz * r2.xxx + r30.xyz;
      r26.xyz = -r5.xyz * r2.xxx + r26.xyz;
      r30.xyz = r28.zxy * r27.yzx;
      r30.xyz = r28.yzx * r27.zxy + -r30.xyz;
      r14.w = dot(r30.xyz, r30.xyz);
      r14.w = rsqrt(r14.w);
      r30.xyz = r30.xyz * r14.www;
      r31.xyz = r29.yzx * r27.zxy;
      r31.xyz = r27.yzx * r29.zxy + -r31.xyz;
      r14.w = dot(r31.xyz, r31.xyz);
      r14.w = rsqrt(r14.w);
      r31.xyz = r31.xyz * r14.www;
      r32.xyz = r29.zxy * r26.yzx;
      r32.xyz = r29.yzx * r26.zxy + -r32.xyz;
      r14.w = dot(r32.xyz, r32.xyz);
      r14.w = rsqrt(r14.w);
      r32.xyz = r32.xyz * r14.www;
      r33.xyz = r26.zxy * r28.yzx;
      r33.xyz = r26.yzx * r28.zxy + -r33.xyz;
      r14.w = dot(r33.xyz, r33.xyz);
      r14.w = rsqrt(r14.w);
      r33.xyz = r33.xyz * r14.www;
      r14.w = dot(-r30.xyz, r31.xyz);
      r15.w = abs(r14.w) * abs(r14.w);
      r17.w = r15.w * abs(r14.w);
      r18.w = abs(r14.w) * -0.212114394 + 1.57072878;
      r15.w = r15.w * 0.0742610022 + r18.w;
      r15.w = r17.w * -0.0187292993 + r15.w;
      r17.w = 1 + -abs(r14.w);
      r17.w = sqrt(r17.w);
      r18.w = r17.w * r15.w;
      r14.w = cmp(r14.w >= 0);
      r15.w = -r17.w * r15.w + 3.14159274;
      r14.w = r14.w ? r18.w : r15.w;
      r15.w = dot(-r31.xyz, r32.xyz);
      r17.w = abs(r15.w) * abs(r15.w);
      r18.w = r17.w * abs(r15.w);
      r19.w = abs(r15.w) * -0.212114394 + 1.57072878;
      r17.w = r17.w * 0.0742610022 + r19.w;
      r17.w = r18.w * -0.0187292993 + r17.w;
      r18.w = 1 + -abs(r15.w);
      r18.w = sqrt(r18.w);
      r19.w = r18.w * r17.w;
      r15.w = cmp(r15.w >= 0);
      r17.w = -r18.w * r17.w + 3.14159274;
      r15.w = r15.w ? r19.w : r17.w;
      r17.w = dot(-r32.xyz, r33.xyz);
      r18.w = abs(r17.w) * abs(r17.w);
      r19.w = r18.w * abs(r17.w);
      r20.w = abs(r17.w) * -0.212114394 + 1.57072878;
      r18.w = r18.w * 0.0742610022 + r20.w;
      r18.w = r19.w * -0.0187292993 + r18.w;
      r19.w = 1 + -abs(r17.w);
      r19.w = sqrt(r19.w);
      r20.w = r19.w * r18.w;
      r17.w = cmp(r17.w >= 0);
      r18.w = -r19.w * r18.w + 3.14159274;
      r17.w = r17.w ? r20.w : r18.w;
      r18.w = dot(-r33.xyz, r30.xyz);
      r19.w = abs(r18.w) * abs(r18.w);
      r20.w = r19.w * abs(r18.w);
      r21.w = abs(r18.w) * -0.212114394 + 1.57072878;
      r19.w = r19.w * 0.0742610022 + r21.w;
      r19.w = r20.w * -0.0187292993 + r19.w;
      r20.w = 1 + -abs(r18.w);
      r20.w = sqrt(r20.w);
      r21.w = r20.w * r19.w;
      r18.w = cmp(r18.w >= 0);
      r19.w = -r20.w * r19.w + 3.14159274;
      r18.w = r18.w ? r21.w : r19.w;
      r14.w = r15.w + r14.w;
      r14.w = r14.w + r17.w;
      r14.w = r14.w + r18.w;
      r14.w = -6.28318548 + r14.w;
      r14.w = 0.200000003 * r14.w;
      r15.w = dot(r28.xyz, r28.xyz);
      r15.w = rsqrt(r15.w);
      r28.xyz = r28.xyz * r15.www;
      r15.w = saturate(dot(r28.xyz, r6.xyz));
      r17.w = dot(r27.xyz, r27.xyz);
      r17.w = rsqrt(r17.w);
      r27.xyz = r27.xyz * r17.www;
      r17.w = saturate(dot(r27.xyz, r6.xyz));
      r15.w = r17.w + r15.w;
      r17.w = dot(r29.xyz, r29.xyz);
      r17.w = rsqrt(r17.w);
      r27.xyz = r29.xyz * r17.www;
      r17.w = saturate(dot(r27.xyz, r6.xyz));
      r15.w = r17.w + r15.w;
      r17.w = dot(r26.xyz, r26.xyz);
      r17.w = rsqrt(r17.w);
      r26.xyz = r26.xyz * r17.www;
      r17.w = saturate(dot(r26.xyz, r6.xyz));
      r15.w = r17.w + r15.w;
      r26.xyz = -r5.xyz * r2.xxx + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
      r17.w = dot(r26.xyz, r26.xyz);
      r18.w = rsqrt(r17.w);
      r26.xyz = r26.xyz * r18.www;
      r18.w = saturate(dot(r26.xyz, r6.xyz));
      r15.w = r18.w + r15.w;
      r12.w = saturate(r12.w);
      r25.xyz = r12.www * r25.xyz + r24.xyz;
      r25.xyz = -r5.xyz * r2.xxx + r25.xyz;
      r12.w = dot(r25.xyz, r25.xyz);
      r18.w = rsqrt(r12.w);
      r25.xyz = r25.xyz * r18.www;
      r18.w = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0;
      r19.w = saturate(dot(r25.xyz, r6.xyz));
      r20.w = 3.14159274 * r19.w;
      r12.w = max(r18.w, r12.w);
      r12.w = r18.w / r12.w;
      r12.w = r20.w * r12.w;
      r12.w = r14.w * r15.w + r12.w;
      r14.w = g_lightInfoAreaShadow[r10.w].baseLight.invSqrAttenuationRadius * r17.w;
      r14.w = -r14.w * r14.w + 1;
      r14.w = max(0, r14.w);
      r14.w = r14.w * r14.w;
      r12.w = r14.w * r12.w;
      r14.w = cmp(0 < r12.w);
      if (r14.w != 0) {
        r24.xyz = -r5.xyz * r2.xxx + r24.xyz;
        r23.xyz = -r5.xyz * r2.xxx + r23.xyz;
        r23.xyz = r23.xyz + -r24.xyz;
        r15.w = dot(r23.xyz, r23.xyz);
        r17.w = dot(r9.xyz, r23.xyz);
        r18.w = dot(r9.xyz, r24.xyz);
        r20.w = dot(r24.xyz, r23.xyz);
        r18.w = r18.w * r17.w + -r20.w;
        r15.w = -r17.w * r17.w + r15.w;
        r15.w = saturate(r18.w / r15.w);
        r23.xyz = r15.www * r23.xyz + r24.xyz;
        r15.w = dot(r23.xyz, r9.xyz);
        r24.xyz = r15.www * r9.xyz + -r23.xyz;
        r15.w = dot(r24.xyz, r24.xyz);
        r15.w = sqrt(r15.w);
        r15.w = saturate(g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 / r15.w);
        r23.xyz = r24.xyz * r15.www + r23.xyz;
        r15.w = dot(r23.xyz, r23.xyz);
        r17.w = sqrt(r15.w);
        r15.w = rsqrt(r15.w);
        r24.xyz = r23.xyz * r15.www;
        r15.w = r17.w + r17.w;
        r15.w = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 / r15.w;
        r15.w = saturate(r15.w + r1.x);
        r15.w = r1.x / r15.w;
        r26.xyz = -r7.xyz * r2.yyy + r24.xyz;
        r17.w = dot(r26.xyz, r26.xyz);
        r17.w = rsqrt(r17.w);
        r26.xyz = r26.xyz * r17.www;
        r27.xyz = -r7.xyz * r2.yyy + r25.xyz;
        r17.w = dot(r27.xyz, r27.xyz);
        r17.w = rsqrt(r17.w);
        r27.xyz = r27.xyz * r17.www;
        r17.w = saturate(dot(r24.xyz, r26.xyz));
        r18.w = saturate(dot(r25.xyz, r27.xyz));
        r20.w = saturate(dot(r6.xyz, r26.xyz));
        r21.w = saturate(dot(r6.xyz, r24.xyz));
        r17.w = 1 + -r17.w;
        r22.w = r17.w * r17.w;
        r22.w = r22.w * r22.w;
        r17.w = r22.w * r17.w;
        r25.xyz = r8.xyz * r17.www + r4.xyz;
        r17.w = -r21.w * r6.w + r21.w;
        r17.w = r17.w * r21.w + r6.w;
        r17.w = sqrt(r17.w);
        r17.w = r17.w * r2.z;
        r17.w = r21.w * r8.w + r17.w;
        r17.w = 0.5 / r17.w;
        r21.w = r20.w * r6.w + -r20.w;
        r20.w = r21.w * r20.w + 1;
        r20.w = r20.w * r20.w;
        r20.w = r6.w / r20.w;
        r17.w = r20.w * r17.w;
        r15.w = r17.w * r15.w;
        r25.xyz = r25.xyz * r15.www;
        r15.w = r18.w * r18.w;
        r15.w = dot(r15.ww, r3.xx);
        r15.w = r3.x * 0.5 + r15.w;
        r17.w = 1 + -r19.w;
        r18.w = r17.w * r17.w;
        r18.w = r18.w * r18.w;
        r17.w = r18.w * r17.w;
        r15.w = -1 + r15.w;
        r17.w = r15.w * r17.w + 1;
        r15.w = r15.w * r10.x + 1;
        r15.w = r17.w * r15.w;
        r15.w = r15.w * r9.w;
        r17.w = g_lightInfoAreaShadow[r10.w].baseLight.diffuseScale * r12.w;
        r26.xyz = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r17.www;
        r26.xyz = r26.xyz * r15.www;
        r12.w = g_lightInfoAreaShadow[r10.w].baseLight.specularScale * r12.w;
        r27.xyz = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r12.www;
        r25.xyz = r27.xyz * r25.xyz;
      } else {
        r23.xyz = float3(1,0,0);
        r24.xyz = float3(1,0,0);
        r26.xyz = float3(0,0,0);
        r25.xyz = float3(0,0,0);
      }
    } else {
      r12.w = cmp((int)r11.w == 5);
      if (r12.w != 0) {
        r27.xyz = r5.xyz * r2.xxx + -g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
        r12.w = dot(r27.xyz, -g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz);
        r12.w = cmp(0 < r12.w);
        if (r12.w != 0) {
          r27.xy = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * float2(0.5,0.5);
          r28.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz * -r27.xxx + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
          r29.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz * r27.yyy + r28.xyz;
          r28.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz * -r27.yyy + r28.xyz;
          r30.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz * r27.xxx + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
          r31.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz * -r27.yyy + r30.xyz;
          r30.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz * r27.yyy + r30.xyz;
          r29.xyz = -r5.xyz * r2.xxx + r29.xyz;
          r28.xyz = -r5.xyz * r2.xxx + r28.xyz;
          r31.xyz = -r5.xyz * r2.xxx + r31.xyz;
          r30.xyz = -r5.xyz * r2.xxx + r30.xyz;
          r32.xyz = r29.zxy * r28.yzx;
          r32.xyz = r29.yzx * r28.zxy + -r32.xyz;
          r12.w = dot(r32.xyz, r32.xyz);
          r12.w = rsqrt(r12.w);
          r32.xyz = r32.xyz * r12.www;
          r33.xyz = r31.yzx * r28.zxy;
          r33.xyz = r28.yzx * r31.zxy + -r33.xyz;
          r12.w = dot(r33.xyz, r33.xyz);
          r12.w = rsqrt(r12.w);
          r33.xyz = r33.xyz * r12.www;
          r34.xyz = r31.zxy * r30.yzx;
          r34.xyz = r31.yzx * r30.zxy + -r34.xyz;
          r12.w = dot(r34.xyz, r34.xyz);
          r12.w = rsqrt(r12.w);
          r34.xyz = r34.xyz * r12.www;
          r35.xyz = r30.zxy * r29.yzx;
          r35.xyz = r30.yzx * r29.zxy + -r35.xyz;
          r12.w = dot(r35.xyz, r35.xyz);
          r12.w = rsqrt(r12.w);
          r35.xyz = r35.xyz * r12.www;
          r12.w = dot(-r32.xyz, r33.xyz);
          r15.w = abs(r12.w) * abs(r12.w);
          r17.w = r15.w * abs(r12.w);
          r18.w = abs(r12.w) * -0.212114394 + 1.57072878;
          r15.w = r15.w * 0.0742610022 + r18.w;
          r15.w = r17.w * -0.0187292993 + r15.w;
          r17.w = 1 + -abs(r12.w);
          r17.w = sqrt(r17.w);
          r18.w = r17.w * r15.w;
          r12.w = cmp(r12.w >= 0);
          r15.w = -r17.w * r15.w + 3.14159274;
          r12.w = r12.w ? r18.w : r15.w;
          r15.w = dot(-r33.xyz, r34.xyz);
          r17.w = abs(r15.w) * abs(r15.w);
          r18.w = r17.w * abs(r15.w);
          r19.w = abs(r15.w) * -0.212114394 + 1.57072878;
          r17.w = r17.w * 0.0742610022 + r19.w;
          r17.w = r18.w * -0.0187292993 + r17.w;
          r18.w = 1 + -abs(r15.w);
          r18.w = sqrt(r18.w);
          r19.w = r18.w * r17.w;
          r15.w = cmp(r15.w >= 0);
          r17.w = -r18.w * r17.w + 3.14159274;
          r15.w = r15.w ? r19.w : r17.w;
          r17.w = dot(-r34.xyz, r35.xyz);
          r18.w = abs(r17.w) * abs(r17.w);
          r19.w = r18.w * abs(r17.w);
          r20.w = abs(r17.w) * -0.212114394 + 1.57072878;
          r18.w = r18.w * 0.0742610022 + r20.w;
          r18.w = r19.w * -0.0187292993 + r18.w;
          r19.w = 1 + -abs(r17.w);
          r19.w = sqrt(r19.w);
          r20.w = r19.w * r18.w;
          r17.w = cmp(r17.w >= 0);
          r18.w = -r19.w * r18.w + 3.14159274;
          r17.w = r17.w ? r20.w : r18.w;
          r18.w = dot(-r35.xyz, r32.xyz);
          r19.w = abs(r18.w) * abs(r18.w);
          r20.w = r19.w * abs(r18.w);
          r21.w = abs(r18.w) * -0.212114394 + 1.57072878;
          r19.w = r19.w * 0.0742610022 + r21.w;
          r19.w = r20.w * -0.0187292993 + r19.w;
          r20.w = 1 + -abs(r18.w);
          r20.w = sqrt(r20.w);
          r21.w = r20.w * r19.w;
          r18.w = cmp(r18.w >= 0);
          r19.w = -r20.w * r19.w + 3.14159274;
          r18.w = r18.w ? r21.w : r19.w;
          r12.w = r15.w + r12.w;
          r12.w = r12.w + r17.w;
          r12.w = r12.w + r18.w;
          r12.w = -6.28318548 + r12.w;
          r12.w = 0.200000003 * r12.w;
          r15.w = dot(r29.xyz, r29.xyz);
          r15.w = rsqrt(r15.w);
          r29.xyz = r29.xyz * r15.www;
          r15.w = saturate(dot(r29.xyz, r6.xyz));
          r17.w = dot(r28.xyz, r28.xyz);
          r17.w = rsqrt(r17.w);
          r28.xyz = r28.xyz * r17.www;
          r17.w = saturate(dot(r28.xyz, r6.xyz));
          r15.w = r17.w + r15.w;
          r17.w = dot(r31.xyz, r31.xyz);
          r17.w = rsqrt(r17.w);
          r28.xyz = r31.xyz * r17.www;
          r17.w = saturate(dot(r28.xyz, r6.xyz));
          r15.w = r17.w + r15.w;
          r17.w = dot(r30.xyz, r30.xyz);
          r17.w = rsqrt(r17.w);
          r28.xyz = r30.xyz * r17.www;
          r17.w = saturate(dot(r28.xyz, r6.xyz));
          r15.w = r17.w + r15.w;
          r28.xyz = -r5.xyz * r2.xxx + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
          r17.w = dot(r28.xyz, r28.xyz);
          r17.w = rsqrt(r17.w);
          r29.xyz = r28.xyz * r17.www;
          r17.w = saturate(dot(r29.xyz, r6.xyz));
          r15.w = r17.w + r15.w;
          r12.w = r15.w * r12.w;
          r15.w = saturate(dot(r6.xyz, g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz));
          r15.w = 9.99999975e-006 + r15.w;
          r29.xyz = r6.xyz * r15.www + g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz;
          r17.w = dot(r29.xyz, r29.xyz);
          r17.w = rsqrt(r17.w);
          r30.xyz = g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz * r15.www + r6.xyz;
          r15.w = dot(r30.xyz, r30.xyz);
          r15.w = rsqrt(r15.w);
          r30.xyz = r30.xyz * r15.www;
          r29.xyz = r29.xyz * r17.www + r30.xyz;
          r29.xyz = float3(0.5,0.5,0.5) * r29.xyz;
          r15.w = dot(-g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, r28.xyz);
          r17.w = dot(-g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, r29.xyz);
          r15.w = r15.w / r17.w;
          r28.xyz = r29.xyz * r15.www + r7.xyz;
          r28.xyz = -g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz + r28.xyz;
          r29.x = dot(r28.xyz, g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz);
          r29.y = dot(r28.xyz, g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz);
          r27.zw = max(r29.xy, -r27.xy);
          r27.xy = min(r27.zw, r27.xy);
          r27.xzw = r27.xxx * g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
          r27.xyz = r27.yyy * g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz + r27.xzw;
          r23.xyz = -r5.xyz * r2.xxx + r27.xyz;
          r15.w = dot(r23.xyz, r23.xyz);
          r15.w = rsqrt(r15.w);
          r24.xyz = r23.xyz * r15.www;
        } else {
          r23.xyz = float3(1,0,0);
          r24.xyz = float3(1,0,0);
          r12.w = 0;
        }
        r27.xyz = -r5.xyz * r2.xxx + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
        r15.w = dot(r27.xyz, r27.xyz);
        r15.w = g_lightInfoAreaShadow[r10.w].baseLight.invSqrAttenuationRadius * r15.w;
        r15.w = -r15.w * r15.w + 1;
        r15.w = max(0, r15.w);
        r15.w = r15.w * r15.w;
        r12.w = r15.w * r12.w;
        r14.w = cmp(0 < r12.w);
        if (r14.w != 0) {
          r28.xy = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * float2(0.5,0.5);
          r29.x = dot(r9.xyz, g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz);
          r29.y = dot(r9.xyz, g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz);
          r29.z = dot(r9.xyz, -g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz);
          r30.x = dot(r27.xyz, g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz);
          r30.y = dot(r27.xyz, g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz);
          r30.z = dot(r27.xyz, -g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz);
          r15.w = r30.z / r29.z;
          r31.xyz = r29.xyz * r15.www;
          r28.zw = r29.xy * r15.ww + -r30.xy;
          r15.w = cmp(0 < r15.w);
          r28.yz = cmp(r28.xy >= abs(r28.zw));
          r15.w = r15.w ? r28.y : 0;
          r15.w = r28.z ? r15.w : 0;
          if (r15.w == 0) {
            r11.xy = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * float2(-0.5,-0.5);
            r32.xyz = r30.xyz + r11.xyz;
            r12.xy = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * float2(0.5,0.5);
            r33.xyz = r30.xyz + r12.xyz;
            r32.w = r33.x;
            r11.xy = r32.xw * r29.xx;
            r33.w = r32.y;
            r12.xy = r33.wy * r29.yy;
            r28.yz = r30.zz * r29.zz;
            r34.xy = r32.xw * r32.xw;
            r34.zw = r30.zz * r30.zz;
            r35.xy = r33.wy * r33.wy + r34.zw;
            r35.zw = r35.xy * r29.xx;
            r12.xy = -r12.xy * r32.xw + r35.zw;
            r12.xy = -r28.yz * r32.xw + r12.xy;
            r35.zw = r29.yy * r33.wy + r28.yz;
            r28.xw = r35.zw * r28.xx;
            r28.xw = r28.xw + r28.xw;
            r36.xy = r12.xy / r28.xw;
            r36.z = -r36.y;
            r13.xy = saturate(r36.xz);
            r12.xy = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * r13.zy;
            r12.xy = r12.xy * r13.xw + r32.xw;
            r28.xw = r29.xx * r12.xy + r35.zw;
            r12.xy = r12.xy * r12.xy + r35.xy;
            r12.xy = sqrt(r12.xy);
            r12.xy = r28.xw / r12.xy;
            r15.w = cmp(r12.x < r12.y);
            if (r15.w != 0) {
              r14.x = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0;
              r31.xyz = -r14.xyz * r13.yyy + r33.xyz;
              r12.x = r12.y;
            } else {
              r15.x = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0;
              r31.xyz = r15.xyz * r13.xxx + r32.xyz;
            }
            r11.xy = r11.xy * r33.wy;
            r11.xy = r29.yy * r34.xy + -r11.xy;
            r11.xy = -r28.yz * r33.wy + r11.xy;
            r11.xy = r29.yy * r34.zw + r11.xy;
            r13.xy = r29.xx * r32.xw + r28.yz;
            r15.xw = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1 * r13.xy;
            r28.xy = r11.xy / r15.xw;
            r28.z = -r28.y;
            r16.xy = saturate(r28.xz);
            r11.xy = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1 * r16.zy;
            r11.xy = r11.xy * r16.xw + r33.wy;
            r13.xy = r29.yy * r11.xy + r13.xy;
            r15.xw = r32.xw * r32.xw + r34.zw;
            r11.xy = r11.xy * r11.xy + r15.xw;
            r11.xy = sqrt(r11.xy);
            r11.xy = r13.xy / r11.xy;
            r11.x = cmp(r12.x < r11.x);
            if (r11.x != 0) {
              r17.y = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1;
              r31.xyz = r17.xyz * r16.xxx + r32.xyz;
            } else {
              r11.x = cmp(r12.x < r11.y);
              if (r11.x != 0) {
                r18.y = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1;
                r31.xyz = -r18.xyz * r16.yyy + r33.xyz;
              }
            }
          }
          r11.x = dot(r31.xyz, r31.xyz);
          r11.x = rsqrt(r11.x);
          r28.xyz = r31.xyz * r11.xxx;
          r11.x = dot(r29.xyz, r29.xyz);
          r11.x = rsqrt(r11.x);
          r29.xyz = r29.xyz * r11.xxx;
          r11.x = dot(r28.xyz, r29.xyz);
          r11.x = saturate(r11.x * 1.66600001 + -0.5);
          r28.xyz = r31.xyz + -r30.xyz;
          r27.xyz = r28.xxx * g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz + r27.xyz;
          r27.xyz = r28.yyy * g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz + r27.xyz;
          r27.xyz = r28.zzz * -g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz + r27.xyz;
          r27.xyz = r27.xyz + -r24.xyz;
          r27.xyz = r11.xxx * r27.xyz + r24.xyz;
          r11.x = dot(r27.xyz, r27.xyz);
          r11.y = sqrt(r11.x);
          r11.y = 1 / r11.y;
          r11.x = rsqrt(r11.x);
          r27.xyz = r27.xyz * r11.xxx;
          r11.x = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 + g_lightInfoAreaShadow[r10.w].areaLight.lightRadius1;
          r11.x = saturate(r11.x * r11.y + r1.x);
          r11.x = r1.x / r11.x;
          r11.x = r11.x * r11.x;
          r11.x = r11.x * r10.y;
          r28.xyz = -r7.xyz * r2.yyy + r27.xyz;
          r11.y = dot(r28.xyz, r28.xyz);
          r11.y = rsqrt(r11.y);
          r28.xyz = r28.xyz * r11.yyy;
          r29.xyz = -r7.xyz * r2.yyy + r24.xyz;
          r11.y = dot(r29.xyz, r29.xyz);
          r11.y = rsqrt(r11.y);
          r29.xyz = r29.xyz * r11.yyy;
          r11.y = saturate(dot(r27.xyz, r28.xyz));
          r12.x = saturate(dot(r24.xyz, r29.xyz));
          r12.y = saturate(dot(r6.xyz, r28.xyz));
          r13.x = saturate(dot(r6.xyz, r27.xyz));
          r13.y = saturate(dot(r6.xyz, r24.xyz));
          r11.y = 1 + -r11.y;
          r14.x = r11.y * r11.y;
          r14.x = r14.x * r14.x;
          r11.y = r14.x * r11.y;
          r27.xyz = r8.xyz * r11.yyy + r4.xyz;
          r11.y = -r13.x * r6.w + r13.x;
          r11.y = r11.y * r13.x + r6.w;
          r11.y = sqrt(r11.y);
          r11.y = r11.y * r2.z;
          r11.y = r13.x * r8.w + r11.y;
          r11.y = 0.5 / r11.y;
          r13.x = r12.y * r6.w + -r12.y;
          r12.y = r13.x * r12.y + 1;
          r12.y = r12.y * r12.y;
          r12.y = r6.w / r12.y;
          r11.y = r12.y * r11.y;
          r11.x = r11.y * r11.x;
          r27.xyz = r27.xyz * r11.xxx;
          r11.x = r12.x * r12.x;
          r11.x = dot(r11.xx, r3.xx);
          r11.x = r3.x * 0.5 + r11.x;
          r11.y = 1 + -r13.y;
          r12.x = r11.y * r11.y;
          r12.x = r12.x * r12.x;
          r11.y = r12.x * r11.y;
          r11.x = -1 + r11.x;
          r11.y = r11.x * r11.y + 1;
          r11.x = r11.x * r10.x + 1;
          r11.x = r11.y * r11.x;
          r11.x = r11.x * r9.w;
          r11.y = g_lightInfoAreaShadow[r10.w].baseLight.diffuseScale * r12.w;
          r28.xyz = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r11.yyy;
          r26.xyz = r28.xyz * r11.xxx;
          r11.x = g_lightInfoAreaShadow[r10.w].baseLight.specularScale * r12.w;
          r12.xyw = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r11.xxx;
          r25.xyz = r27.xyz * r12.xyw;
        } else {
          r26.xyz = float3(0,0,0);
          r25.xyz = float3(0,0,0);
        }
      } else {
        r11.x = cmp((int)r11.w == 4);
        if (r11.x != 0) {
          r23.xyz = -r5.xyz * r2.xxx + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
          r11.x = dot(r23.xyz, r23.xyz);
          r11.y = rsqrt(r11.x);
          r24.xyz = r23.xyz * r11.yyy;
          r11.y = dot(r6.xyz, r24.xyz);
          r11.w = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0;
          r12.x = max(r11.w, r11.x);
          r12.x = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 + r12.x;
          r11.w = r11.w / r12.x;
          r12.xy = r11.ww * float2(-0.690576434,-10.4827538) + float2(0.559636116,18.2588902);
          r12.y = r12.y * r11.w + -11.7109194;
          r12.y = r12.y * r11.w + 4.99786425;
          r12.w = r11.y * 0.5 + 0.5;
          r13.x = log2(r12.w);
          r12.y = r13.x * r12.y;
          r12.y = exp2(r12.y);
          r13.x = saturate(r11.y);
          r11.y = r12.x * r11.y;
          r12.x = r12.w + -r12.y;
          r11.y = r11.y * r12.x + r12.y;
          r11.y = max(r13.x, r11.y);
          r11.y = r11.y * r11.w;
          r11.y = 3.14159274 * r11.y;
          r11.w = saturate(dot(-g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, -r24.xyz));
          r11.y = r11.y * r11.w;
          r12.xyw = -r5.xyz * r2.xxx + g_lightInfoAreaShadow[r10.w].areaLight.virtualPos.xyz;
          r11.w = dot(r12.xyw, r12.xyw);
          r11.w = rsqrt(r11.w);
          r12.xyw = r12.xyw * r11.www;
          r11.w = dot(g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, r12.xyw);
          r11.w = saturate(r11.w * g_lightInfoAreaShadow[r10.w].baseLight.angleScale + g_lightInfoAreaShadow[r10.w].baseLight.angleOffset);
          r11.w = r11.w * r11.w;
          r11.x = g_lightInfoAreaShadow[r10.w].baseLight.invSqrAttenuationRadius * r11.x;
          r11.x = -r11.x * r11.x + 1;
          r11.x = max(0, r11.x);
          r11.xy = r11.xy * r11.xw;
          r11.x = r11.y * r11.x;
          r14.w = cmp(0 < r11.x);
          if (r14.w != 0) {
            r11.y = saturate(dot(r9.xyz, -g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz));
            r11.y = 9.99999975e-006 + r11.y;
            r12.xyw = g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz * r11.yyy + r9.xyz;
            r11.y = dot(r12.xyw, r12.xyw);
            r11.y = rsqrt(r11.y);
            r12.xyw = r12.xyw * r11.yyy;
            r11.y = dot(-g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, r23.xyz);
            r11.w = dot(-g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, r12.xyw);
            r11.y = r11.y / r11.w;
            r12.xyw = r12.xyw * r11.yyy + r7.xyz;
            r12.xyw = -g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz + r12.xyw;
            r16.x = dot(r12.xyw, g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz);
            r16.y = dot(r12.xyw, g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz);
            r11.y = dot(r16.xy, r16.xy);
            r11.y = sqrt(r11.y);
            r12.xy = r16.xy / r11.yy;
            r12.xy = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * r12.xy;
            r11.y = cmp(r11.y < g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0);
            r11.yw = r11.yy ? r16.xy : r12.xy;
            r12.xyw = r11.yyy * g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
            r12.xyw = r11.www * g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz + r12.xyw;
            r12.xyw = -r5.xyz * r2.xxx + r12.xyw;
            r11.y = dot(r12.xyw, r12.xyw);
            r11.y = sqrt(r11.y);
            r12.xyw = r12.xyw / r11.yyy;
            r11.y = r11.y + r11.y;
            r11.y = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 / r11.y;
            r11.y = saturate(r11.y + r1.x);
            r11.y = r1.x / r11.y;
            r11.y = r11.y * r11.y;
            r27.xyz = -r7.xyz * r2.yyy + r12.xyw;
            r11.w = dot(r27.xyz, r27.xyz);
            r11.w = rsqrt(r11.w);
            r27.xyz = r27.xyz * r11.www;
            r28.xyz = -r7.xyz * r2.yyy + r24.xyz;
            r11.w = dot(r28.xyz, r28.xyz);
            r11.w = rsqrt(r11.w);
            r28.xyz = r28.xyz * r11.www;
            r11.w = saturate(dot(r12.xyw, r27.xyz));
            r13.y = saturate(dot(r24.xyz, r28.xyz));
            r14.x = saturate(dot(r6.xyz, r27.xyz));
            r12.x = saturate(dot(r6.xyz, r12.xyw));
            r11.w = 1 + -r11.w;
            r12.y = r11.w * r11.w;
            r12.y = r12.y * r12.y;
            r11.w = r12.y * r11.w;
            r27.xyz = r8.xyz * r11.www + r4.xyz;
            r11.w = -r12.x * r6.w + r12.x;
            r11.w = r11.w * r12.x + r6.w;
            r11.w = sqrt(r11.w);
            r11.w = r11.w * r2.z;
            r11.w = r12.x * r8.w + r11.w;
            r11.w = 0.5 / r11.w;
            r12.x = r14.x * r6.w + -r14.x;
            r12.x = r12.x * r14.x + 1;
            r12.x = r12.x * r12.x;
            r12.x = r6.w / r12.x;
            r11.w = r12.x * r11.w;
            r11.y = r11.w * r11.y;
            r12.xyw = r27.xyz * r11.yyy;
            r11.y = r13.y * r13.y;
            r11.y = dot(r11.yy, r3.xx);
            r11.y = r3.x * 0.5 + r11.y;
            r11.w = 1 + -r13.x;
            r13.x = r11.w * r11.w;
            r13.x = r13.x * r13.x;
            r11.w = r13.x * r11.w;
            r11.y = -1 + r11.y;
            r11.w = r11.y * r11.w + 1;
            r11.y = r11.y * r10.x + 1;
            r11.y = r11.w * r11.y;
            r11.y = r11.y * r9.w;
            r11.w = g_lightInfoAreaShadow[r10.w].baseLight.diffuseScale * r11.x;
            r27.xyz = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r11.www;
            r26.xyz = r27.xyz * r11.yyy;
            r11.x = g_lightInfoAreaShadow[r10.w].baseLight.specularScale * r11.x;
            r11.xyw = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r11.xxx;
            r25.xyz = r12.xyw * r11.xyw;
          } else {
            r26.xyz = float3(0,0,0);
            r25.xyz = float3(0,0,0);
          }
        } else {
          r23.xyz = -r5.xyz * r2.xxx + g_lightInfoAreaShadow[r10.w].baseLight.pos.xyz;
          r11.x = dot(r23.xyz, r23.xyz);
          r11.y = rsqrt(r11.x);
          r24.xyz = r23.xyz * r11.yyy;
          r11.y = dot(r6.xyz, r24.xyz);
          r11.w = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 * g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0;
          r12.x = max(r11.w, r11.x);
          r11.w = r11.w / r12.x;
          r12.xy = r11.ww * float2(-0.690576434,-10.4827538) + float2(0.559636116,18.2588902);
          r12.y = r12.y * r11.w + -11.7109194;
          r12.y = r12.y * r11.w + 4.99786425;
          r12.w = r11.y * 0.5 + 0.5;
          r13.x = log2(r12.w);
          r12.y = r13.x * r12.y;
          r12.y = exp2(r12.y);
          r13.x = saturate(r11.y);
          r11.y = r12.x * r11.y;
          r12.x = r12.w + -r12.y;
          r11.y = r11.y * r12.x + r12.y;
          r11.y = max(r13.x, r11.y);
          r11.y = r11.y * r11.w;
          r11.y = 3.14159274 * r11.y;
          r11.x = g_lightInfoAreaShadow[r10.w].baseLight.invSqrAttenuationRadius * r11.x;
          r11.x = -r11.x * r11.x + 1;
          r11.x = max(0, r11.x);
          r11.x = r11.x * r11.x;
          r11.x = r11.y * r11.x;
          r14.w = cmp(0 < r11.x);
          if (r14.w != 0) {
            r11.y = dot(r23.xyz, r9.xyz);
            r12.xyw = r11.yyy * r9.xyz + -r23.xyz;
            r11.y = dot(r12.xyw, r12.xyw);
            r11.y = sqrt(r11.y);
            r11.y = saturate(g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 / r11.y);
            r12.xyw = r12.xyw * r11.yyy + r23.xyz;
            r11.y = dot(r12.xyw, r12.xyw);
            r11.y = sqrt(r11.y);
            r12.xyw = r12.xyw / r11.yyy;
            r11.y = r11.y + r11.y;
            r11.y = g_lightInfoAreaShadow[r10.w].areaLight.lightRadius0 / r11.y;
            r11.y = saturate(r11.y + r1.x);
            r11.y = r1.x / r11.y;
            r11.y = r11.y * r11.y;
            r27.xyz = -r7.xyz * r2.yyy + r12.xyw;
            r11.w = dot(r27.xyz, r27.xyz);
            r11.w = rsqrt(r11.w);
            r27.xyz = r27.xyz * r11.www;
            r28.xyz = -r7.xyz * r2.yyy + r24.xyz;
            r11.w = dot(r28.xyz, r28.xyz);
            r11.w = rsqrt(r11.w);
            r28.xyz = r28.xyz * r11.www;
            r11.w = saturate(dot(r12.xyw, r27.xyz));
            r13.y = saturate(dot(r24.xyz, r28.xyz));
            r14.x = saturate(dot(r6.xyz, r27.xyz));
            r12.x = saturate(dot(r6.xyz, r12.xyw));
            r11.w = 1 + -r11.w;
            r12.y = r11.w * r11.w;
            r12.y = r12.y * r12.y;
            r11.w = r12.y * r11.w;
            r27.xyz = r8.xyz * r11.www + r4.xyz;
            r11.w = -r12.x * r6.w + r12.x;
            r11.w = r11.w * r12.x + r6.w;
            r11.w = sqrt(r11.w);
            r11.w = r11.w * r2.z;
            r11.w = r12.x * r8.w + r11.w;
            r11.w = 0.5 / r11.w;
            r12.x = r14.x * r6.w + -r14.x;
            r12.x = r12.x * r14.x + 1;
            r12.x = r12.x * r12.x;
            r12.x = r6.w / r12.x;
            r11.w = r12.x * r11.w;
            r11.y = r11.w * r11.y;
            r12.xyw = r27.xyz * r11.yyy;
            r11.y = r13.y * r13.y;
            r11.y = dot(r11.yy, r3.xx);
            r11.y = r3.x * 0.5 + r11.y;
            r11.w = 1 + -r13.x;
            r13.x = r11.w * r11.w;
            r13.x = r13.x * r13.x;
            r11.w = r13.x * r11.w;
            r11.y = -1 + r11.y;
            r11.w = r11.y * r11.w + 1;
            r11.y = r11.y * r10.x + 1;
            r11.y = r11.w * r11.y;
            r11.y = r11.y * r9.w;
            r11.w = g_lightInfoAreaShadow[r10.w].baseLight.diffuseScale * r11.x;
            r27.xyz = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r11.www;
            r26.xyz = r27.xyz * r11.yyy;
            r11.x = g_lightInfoAreaShadow[r10.w].baseLight.specularScale * r11.x;
            r11.xyw = g_lightInfoAreaShadow[r10.w].baseLight.color.xyz * r11.xxx;
            r25.xyz = r12.xyw * r11.xyw;
          } else {
            r26.xyz = float3(0,0,0);
            r25.xyz = float3(0,0,0);
          }
        }
      }
    }
    r11.x = cmp(0 < g_lightInfoAreaShadow[r10.w].iesShadow.enable);
    r11.x = r11.x ? r14.w : 0;
    if (r11.x != 0) {
      r11.x = dot(g_lightInfoAreaShadow[r10.w].baseLight.matrixLeft.xyz, -r24.xyz);
      r11.y = dot(g_lightInfoAreaShadow[r10.w].baseLight.matrixUp.xyz, -r24.xyz);
      r11.w = dot(g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, -r24.xyz);
      r27.y = r11.w * 0.5 + 0.5;
      r11.w = min(abs(r11.y), abs(r11.x));
      r12.x = max(abs(r11.y), abs(r11.x));
      r12.x = 1 / r12.x;
      r11.w = r12.x * r11.w;
      r12.x = r11.w * r11.w;
      r12.y = r12.x * 0.0208350997 + -0.0851330012;
      r12.y = r12.x * r12.y + 0.180141002;
      r12.y = r12.x * r12.y + -0.330299497;
      r12.x = r12.x * r12.y + 0.999866009;
      r12.y = r12.x * r11.w;
      r12.w = cmp(abs(r11.x) < abs(r11.y));
      r12.y = r12.y * -2 + 1.57079637;
      r12.y = r12.w ? r12.y : 0;
      r11.w = r11.w * r12.x + r12.y;
      r12.x = cmp(r11.x < -r11.x);
      r12.x = r12.x ? -3.141593 : 0;
      r11.w = r12.x + r11.w;
      r12.x = min(r11.y, r11.x);
      r11.x = max(r11.y, r11.x);
      r11.y = cmp(r12.x < -r12.x);
      r11.x = cmp(r11.x >= -r11.x);
      r11.x = r11.x ? r11.y : 0;
      r11.x = r11.x ? -r11.w : r11.w;
      r27.x = 0.159154937 * r11.x;
      r27.z = g_lightInfoAreaShadow[r10.w].iesShadow.textureIndex;
      r11.x = g_iesTextureArray.SampleLevel(g_linearLongitudeWrapSampler_s, r27.xyz, 0).x;
    } else {
      r11.x = 1;
    }
    r11.y = cmp(0.000000 != g_lightInfoAreaShadow[r10.w].shadow.shadowType);
    r11.y = r11.y ? r14.w : 0;
    if (r11.y != 0) {
      r11.y = dot(g_lightInfoAreaShadow[r10.w].baseLight.matrixForward.xyz, r24.xyz);
      r11.y = saturate(r11.y * g_lightInfoAreaShadow[r10.w].shadow.shadowAngleScale + g_lightInfoAreaShadow[r10.w].shadow.shadowAngleOffset);
      r11.y = r11.y * r11.y;
      r11.w = cmp(0 < r11.y);
      if (r11.w != 0) {
        r11.w = cmp(2.000000 == g_lightInfoAreaShadow[r10.w].shadow.shadowType);
        if (r11.w != 0) {
          r24.xyz = -r23.xyz;
          r11.w = max(abs(r23.x), abs(r23.y));
          r11.w = max(r11.w, abs(r23.z));
          r12.xy = cmp(abs(r23.yz) < abs(r23.xx));
          r12.x = r12.y ? r12.x : 0;
          if (r12.x != 0) {
            r12.x = cmp(0 < r24.x);
            r24.x = r12.x ? r24.z : r23.z;
            r12.x = r12.x ? 1.000000 : 0;
          } else {
            r12.yw = cmp(abs(r23.xz) < abs(r23.yy));
            r12.y = r12.w ? r12.y : 0;
            if (r12.y != 0) {
              r12.y = cmp(0 < r24.y);
              r24.w = r12.y ? r24.z : r23.z;
              r12.x = r12.y ? 3 : 2;
              r24.xy = r24.xw;
            } else {
              r12.y = cmp(0 < r24.z);
              r24.x = r12.y ? r23.x : r24.x;
              r12.x = r12.y ? 5 : 4;
            }
          }
          r12.yw = r24.xy / r11.ww;
          r23.xy = r12.yw * float2(0.5,-0.5) + float2(0.5,0.5);
          r12.y = -r11.w * g_lightInfoAreaShadow[r10.w].shadow.shadowMatrix3.z + g_lightInfoAreaShadow[r10.w].shadow.shadowMatrix3.w;
          r11.w = r12.y / r11.w;
          r12.y = -1;
        } else {
          r13.x = dot(r7.xyzw, g_lightInfoAreaShadow[r10.w].shadow.shadowMatrix1.xyzw);
          r13.y = dot(r7.xyzw, g_lightInfoAreaShadow[r10.w].shadow.shadowMatrix2.xyzw);
          r12.w = dot(r7.xyzw, g_lightInfoAreaShadow[r10.w].shadow.shadowMatrix3.xyzw);
          r14.x = dot(r7.xyzw, g_lightInfoAreaShadow[r10.w].shadow.shadowMatrix4.xyzw);
          r14.x = 1 / r14.x;
          r13.xy = r14.xx * r13.xy;
          r11.w = r14.x * r12.w;
          r23.xy = r13.xy * float2(0.5,-0.5) + float2(0.5,0.5);
          r12.w = -r12.w * r14.x + 1;
          r13.x = max(abs(r13.x), abs(r13.y));
          r12.w = max(r13.x, r12.w);
          r12.y = cmp(1 >= r12.w);
          r12.x = 0;
        }
        r12.x = (uint)r12.x;
        r12.w = (int)r12.x & 3;
        r12.x = (uint)r12.x >> 2;
        r10.z = mad((int)r10.z, 23, (int)r12.x);
        r10.z = dot(g_lightInfoAreaShadow[r10.z].shadow.shadowMapIndex[0].xyzw, icb[r12.w+0].xyzw);
        r12.x = cmp(r10.z >= 0);
        r12.x = r12.y ? r12.x : 0;
        r10.z = (uint)r10.z;
        
        // r12.y = (uint7)g_lightInfoAreaShadow[r10.w].shadow.quality;
r12.y = (uint)g_lightInfoAreaShadow[r10.w].shadow.quality;
        
        r12.y = cmp((int)r12.y == 1);
        if (r12.y != 0) {
          r24.z = (uint)r10.z;
          r12.yw = shadowMapSizeAndInvSize.xx * r23.xy + float2(0.5,0.5);
          r13.xy = floor(r12.yw);
          r12.yw = -r13.xy + r12.yw;
          r24.xy = shadowMapSizeAndInvSize.zz * r13.xy;
          r27.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(-2,-2)).xyzw;
          r28.xyzw = float4(1,2,3,5) + -r12.yyyy;
          r29.xyzw = r28.xyxy * r27.wzxy;
          r13.xy = r29.xz + r29.yw;
          r29.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(0,-2)).xyzw;
          r13.xy = r29.zy * float2(2,2) + r13.xy;
          r13.xy = r29.wx * float2(2,2) + r13.xy;
          r30.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(2,-2)).xyzw;
          r31.xyzw = float4(1,4,3,2) + r12.yyyy;
          r14.x = r30.y * r12.y;
          r13.xy = r30.zy * r12.yy + r13.xy;
          r13.xy = r30.wx * r31.xx + r13.xy;
          r32.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(-2,0)).xyzw;
          r14.w = -r12.y * 2 + 2;
          r15.xw = r32.wx * r14.ww;
          r16.x = r12.y * -2 + 4;
          r15.xw = r32.zy * r16.xx + r15.xw;
          r15.x = r27.y * r28.z + r15.x;
          r15.x = r27.x * r14.w + r15.x;
          r15.w = r32.z * r28.z + r15.w;
          r15.w = r32.w * r14.w + r15.w;
          r27.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w).xyzw;
          r15.x = r27.z * r31.y + r15.x;
          r15.x = r27.w * r28.w + r15.x;
          r15.w = r27.y * r31.y + r15.w;
          r15.w = r27.x * r28.w + r15.w;
          r16.xy = float2(4,1) + -r12.yw;
          r15.x = r29.y * r31.z + r15.x;
          r15.x = r29.x * r16.x + r15.x;
          r15.w = r27.z * r31.z + r15.w;
          r15.w = r27.w * r16.x + r15.w;
          r29.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(2,0)).xyzw;
          r17.y = r12.y * 2 + 2;
          r17.w = dot(r29.zz, r12.yy);
          r15.x = r17.w + r15.x;
          r15.x = r29.w * r17.y + r15.x;
          r18.y = dot(r29.yy, r12.yy);
          r15.w = r18.y + r15.w;
          r15.w = r29.x * r17.y + r15.w;
          r14.x = r14.x * 2 + r15.x;
          r30.x = r30.x * r31.w + r14.x;
          r14.x = r17.w + r15.w;
          r30.y = r29.w * r31.w + r14.x;
          r13.xy = r30.xy + r13.xy;
          r30.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(-2,2)).xyzw;
          r33.xyzw = r30.wzxy * r28.xyxy;
          r15.xw = r33.xz + r33.yw;
          r14.x = r32.y * r28.z + r15.x;
          r14.x = r32.x * r14.w + r14.x;
          r15.x = r30.z * r28.z + r15.w;
          r14.w = r30.w * r14.w + r15.x;
          r28.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(0,2)).xyzw;
          r14.x = r28.z * 2 + r14.x;
          r14.x = r28.w * 2 + r14.x;
          r14.w = r28.y * 2 + r14.w;
          r14.w = r28.x * 2 + r14.w;
          r14.x = r27.y * r31.z + r14.x;
          r14.x = r27.x * r16.x + r14.x;
          r14.w = r28.z * r31.z + r14.w;
          r14.w = r28.w * r16.x + r14.w;
          r24.xyzw = g_shadowmapTexture.GatherCmp(g_shadowmapSampler_s, r24.xyz, r11.w, int2(2,2)).xyzw;
          r15.x = r24.z * r12.y;
          r14.x = r24.z * r12.y + r14.x;
          r14.x = r24.w * r31.x + r14.x;
          r12.y = r24.y * r12.y + r14.w;
          r12.y = r24.x * r31.x + r12.y;
          r14.x = r18.y + r14.x;
          r24.x = r29.x * r31.w + r14.x;
          r12.y = r15.x * 2 + r12.y;
          r24.y = r24.w * r31.w + r12.y;
          r13.xy = r24.xy + r13.xy;
          r12.y = r13.y * r12.w;
          r12.y = r13.x * r16.y + r12.y;
          r12.y = saturate(0.0163934417 * r12.y);
        } else {
          r23.z = (uint)r10.z;
          r10.z = g_shadowmapTexture.SampleCmpLevelZero(g_shadowmapSampler_s, r23.xyz, r11.w).x;
          r11.w = cmp(r11.w < 1);
          r12.y = r11.w ? r10.z : 1;
        }
        r10.z = -1 + r12.y;
        r10.z = g_lightInfoAreaShadow[r10.w].baseLight.shadowDimmer * r10.z;
        r10.z = r11.y * r10.z + 1;
        r10.z = r12.x ? r10.z : 1;
        r11.x = r11.x * r10.z;
      }
    }
    r20.xyz = r26.xyz * r11.xxx + r20.xyz;
    r19.xyz = r25.xyz * r11.xxx + r19.xyz;
    r5.w = (int)r5.w + 1;
  }
  r1.x = -1 + r1.z;
  r1.x = dynamicAOFactor * r1.x + 1;
  r2.xyz = r20.xyz * r1.xxx;
  r1.x = r2.w + r1.z;
  r1.y = r1.y * -16 + -1;
  r1.y = exp2(r1.y);
  r1.x = log2(r1.x);
  r1.x = r1.y * r1.x;
  r1.x = exp2(r1.x);
  r1.x = r1.x + r1.z;
  r1.x = saturate(-1 + r1.x);
  r1.xyz = r19.xyz * r1.xxx;
  r2.xyz = r3.yzw * r2.xyz;
  r1.xyz = float3(0.318309873,0.318309873,0.318309873) * r1.xyz;
  r1.xyz = r2.xyz * float3(0.318309873,0.318309873,0.318309873) + r1.xyz;
  r1.xyz = g_exposureMultipliers.zzz * r1.xyz;
  r1.xyz = min(float3(65504,65504,65504), r1.xyz);
  r1.w = 0;
  
  // No code for instruction (needs manual fix):
  // store_uav_typed u0.xyzw, r0.xyzw, r1.xyzw
g_outputTexture0[r0.xy].xyzw = r1.xyzw;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//   using 3Dmigoto v1.2.44 on Mon Sep 26 22:19:36 2016
//
//
// Buffer Definitions: 
//
// cbuffer cbPunctualLightInfo
// {
//
//   struct PunctualLightInfo
//   {
//       
//       struct BaseLightInfo
//       {
//           
//           float3 pos;                // Offset:    0
//           float invSqrAttenuationRadius;// Offset:   12
//           float3 color;              // Offset:   16
//           float attenuationOffset;   // Offset:   28
//           float3 matrixForward;      // Offset:   32
//           float diffuseScale;        // Offset:   44
//           float3 matrixUp;           // Offset:   48
//           float specularScale;       // Offset:   60
//           float3 matrixLeft;         // Offset:   64
//           float shadowDimmer;        // Offset:   76
//           float angleScale;          // Offset:   80
//           float angleOffset;         // Offset:   84
//           float2 unused;             // Offset:   88
//
//       } baseLight;                   // Offset:    0
//       
//       struct VolumetricShadowInfo
//       {
//           
//           float enable;              // Offset:   96
//           float volumeShadowMapIndex;// Offset:  100
//           float invAttenuationRadius;// Offset:  104
//           float tanAngle;            // Offset:  108
//
//       } vShadow;                     // Offset:   96
//
//   } g_lightInfoPunctual[128];        // Offset:    0 Size: 14336
//
// }
//
// cbuffer cbPunctualShadowLightInfo
// {
//
//   struct PunctualShadowLightInfo
//   {
//       
//       struct BaseLightInfo
//       {
//           
//           float3 pos;                // Offset:    0
//           float invSqrAttenuationRadius;// Offset:   12
//           float3 color;              // Offset:   16
//           float attenuationOffset;   // Offset:   28
//           float3 matrixForward;      // Offset:   32
//           float diffuseScale;        // Offset:   44
//           float3 matrixUp;           // Offset:   48
//           float specularScale;       // Offset:   60
//           float3 matrixLeft;         // Offset:   64
//           float shadowDimmer;        // Offset:   76
//           float angleScale;          // Offset:   80
//           float angleOffset;         // Offset:   84
//           float2 unused;             // Offset:   88
//
//       } baseLight;                   // Offset:    0
//       
//       struct IESShadowInfo
//       {
//           
//           float enable;              // Offset:   96
//           float textureIndex;        // Offset:  100
//           float2 unused;             // Offset:  104
//
//       } iesShadow;                   // Offset:   96
//       
//       struct ShadowLightInfo
//       {
//           
//           float4 shadowMatrix1;      // Offset:  112
//           float4 shadowMatrix2;      // Offset:  128
//           float4 shadowMatrix3;      // Offset:  144
//           float4 shadowMatrix4;      // Offset:  160
//           float4 shadowMapAtlasParam[6];// Offset:  176
//           float4 shadowMapIndex[2];  // Offset:  272
//           float shadowType;          // Offset:  304
//           float quality;             // Offset:  308
//           float shadowAngleScale;    // Offset:  312
//           float shadowAngleOffset;   // Offset:  316
//
//       } shadow;                      // Offset:  112
//       
//       struct VolumetricShadowInfo
//       {
//           
//           float enable;              // Offset:  320
//           float volumeShadowMapIndex;// Offset:  324
//           float invAttenuationRadius;// Offset:  328
//           float tanAngle;            // Offset:  332
//
//       } vShadow;                     // Offset:  320
//
//   } g_lightInfoPunctualShadow[128];  // Offset:    0 Size: 43008
//
// }
//
// cbuffer cbAreaLightInfo
// {
//
//   struct AreaLightInfo
//   {
//       
//       struct BaseLightInfo
//       {
//           
//           float3 pos;                // Offset:    0
//           float invSqrAttenuationRadius;// Offset:   12
//           float3 color;              // Offset:   16
//           float attenuationOffset;   // Offset:   28
//           float3 matrixForward;      // Offset:   32
//           float diffuseScale;        // Offset:   44
//           float3 matrixUp;           // Offset:   48
//           float specularScale;       // Offset:   60
//           float3 matrixLeft;         // Offset:   64
//           float shadowDimmer;        // Offset:   76
//           float angleScale;          // Offset:   80
//           float angleOffset;         // Offset:   84
//           float2 unused;             // Offset:   88
//
//       } baseLight;                   // Offset:    0
//       
//       struct BaseAreaLightInfo
//       {
//           
//           float3 virtualPos;         // Offset:   96
//           float occluderHeight;      // Offset:  108
//           float areaLightType;       // Offset:  112
//           float lightRadius0;        // Offset:  116
//           float lightRadius1;        // Offset:  120
//           float unused;              // Offset:  124
//
//       } areaLight;                   // Offset:   96
//       
//       struct VolumetricShadowInfo
//       {
//           
//           float enable;              // Offset:  128
//           float volumeShadowMapIndex;// Offset:  132
//           float invAttenuationRadius;// Offset:  136
//           float tanAngle;            // Offset:  140
//
//       } vShadow;                     // Offset:  128
//
//   } g_lightInfoArea[128];            // Offset:    0 Size: 18432
//
// }
//
// cbuffer cbAreaShadowLightInfo
// {
//
//   struct AreaShadowLightInfo
//   {
//       
//       struct BaseLightInfo
//       {
//           
//           float3 pos;                // Offset:    0
//           float invSqrAttenuationRadius;// Offset:   12
//           float3 color;              // Offset:   16
//           float attenuationOffset;   // Offset:   28
//           float3 matrixForward;      // Offset:   32
//           float diffuseScale;        // Offset:   44
//           float3 matrixUp;           // Offset:   48
//           float specularScale;       // Offset:   60
//           float3 matrixLeft;         // Offset:   64
//           float shadowDimmer;        // Offset:   76
//           float angleScale;          // Offset:   80
//           float angleOffset;         // Offset:   84
//           float2 unused;             // Offset:   88
//
//       } baseLight;                   // Offset:    0
//       
//       struct BaseAreaLightInfo
//       {
//           
//           float3 virtualPos;         // Offset:   96
//           float occluderHeight;      // Offset:  108
//           float areaLightType;       // Offset:  112
//           float lightRadius0;        // Offset:  116
//           float lightRadius1;        // Offset:  120
//           float unused;              // Offset:  124
//
//       } areaLight;                   // Offset:   96
//       
//       struct IESShadowInfo
//       {
//           
//           float enable;              // Offset:  128
//           float textureIndex;        // Offset:  132
//           float2 unused;             // Offset:  136
//
//       } iesShadow;                   // Offset:  128
//       
//       struct ShadowLightInfo
//       {
//           
//           float4 shadowMatrix1;      // Offset:  144
//           float4 shadowMatrix2;      // Offset:  160
//           float4 shadowMatrix3;      // Offset:  176
//           float4 shadowMatrix4;      // Offset:  192
//           float4 shadowMapAtlasParam[6];// Offset:  208
//           float4 shadowMapIndex[2];  // Offset:  304
//           float shadowType;          // Offset:  336
//           float quality;             // Offset:  340
//           float shadowAngleScale;    // Offset:  344
//           float shadowAngleOffset;   // Offset:  348
//
//       } shadow;                      // Offset:  144
//       
//       struct VolumetricShadowInfo
//       {
//           
//           float enable;              // Offset:  352
//           float volumeShadowMapIndex;// Offset:  356
//           float invAttenuationRadius;// Offset:  360
//           float tanAngle;            // Offset:  364
//
//       } vShadow;                     // Offset:  352
//
//   } g_lightInfoAreaShadow[128];      // Offset:    0 Size: 47104
//
// }
//
// cbuffer cb0
// {
//
//   float4x4 invViewProjectionMatrix;  // Offset:    0 Size:    64
//   float4 g_exposureMultipliers;      // Offset:   64 Size:    16
//   float localIblMipmapBias;          // Offset:   80 Size:     4 [unused]
//   float screenAspectRatio;           // Offset:   84 Size:     4 [unused]
//   float2 invResolution;              // Offset:   88 Size:     8
//   float4 shadowMapSizeAndInvSize;    // Offset:   96 Size:    16
//   uint forceSplitLighting;           // Offset:  112 Size:     4 [unused]
//   uint sssScatteringEnables;         // Offset:  116 Size:     4 [unused]
//   float volumetricShadowmapHalfTexelOffset;// Offset:  120 Size:     4 [unused]
//   float volumetricShadowmapOneMinusHalfTexelOffset;// Offset:  124 Size:     4 [unused]
//   float volumetricShadowmapInvMaxCount;// Offset:  128 Size:     4 [unused]
//   float dynamicAOFactor;             // Offset:  132 Size:     4
//   uint tileCountX;                   // Offset:  136 Size:     4
//   uint pad1;                         // Offset:  140 Size:     4 [unused]
//   float4x3 g_normalBasisTransforms[6];// Offset:  144 Size:   288
//
// }
//
// Resource bind info for g_lightCullInput
// {
//
//   uint4 $Element;                    // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_lightIndexInput
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for g_compactTileGridBuffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_linearSampler                   sampler      NA          NA    0        1
// g_linearLongitudeWrapSampler      sampler      NA          NA    2        1
// g_shadowmapSampler              sampler_c      NA          NA    3        1
// g_gbufferTexture0                 texture  float4          2d    0        1
// g_gbufferTexture1                 texture  float4          2d    1        1
// g_gbufferTexture2                 texture  float4          2d    2        1
// g_depthTexture                    texture   float          2d    6        1
// g_iesTextureArray                 texture   float     2darray    9        1
// g_diffuseOcclusionTexture         texture   float          2d   10        1
// g_lightCullInput                  texture  struct         r/o   19        1
// g_lightIndexInput                 texture  struct         r/o   20        1
// g_shadowmapTexture                texture  float4     2darray   21        1
// g_compactTileGridBuffer           texture  struct         r/o   24        1
// g_outputTexture0                      UAV  float4          2d    0        1
// cb0                               cbuffer      NA          NA    0        1
// cbPunctualLightInfo               cbuffer      NA          NA    1        1
// cbPunctualShadowLightInfo         cbuffer      NA          NA    2        1
// cbAreaLightInfo                   cbuffer      NA          NA    3        1
// cbAreaShadowLightInfo             cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb1[896], dynamicIndexed
dcl_constantbuffer cb2[2688], dynamicIndexed
dcl_constantbuffer cb3[1152], dynamicIndexed
dcl_constantbuffer cb4[2944], dynamicIndexed
dcl_constantbuffer cb0[27], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_structured t19, 16 
dcl_resource_structured t20, 4 
dcl_resource_texture2darray (float,float,float,float) t21
dcl_resource_structured t24, 4 
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 37
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 4
dcl_tgsm_raw g2, 4
dcl_tgsm_raw g3, 4
dcl_tgsm_raw g4, 4
dcl_thread_group 16, 16, 1
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, vThreadGroupID.x, l(0), t24.xxxx
ushr r1.x, r0.x, l(16)
and r1.yzw, r0.xxxx, l(0, 0x0000ffff, 0x0000ffff, 0x0000ffff)
imad r0.xyzw, r1.xyzw, l(16, 16, 16, 16), vThreadIDInGroup.xyyy
if_z vThreadIDInGroupFlattened.x
  imad r1.x, r1.w, cb0[8].z, r1.x
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyz, r1.x, l(0), t19.xyzx
  ushr r2.xy, r1.yzyy, l(16, 16, 0, 0)
  and r1.yz, r1.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
  store_raw g0.x, l(0), r1.x
  store_raw g1.x, l(0), r1.y
  store_raw g2.x, l(0), r2.x
  store_raw g3.x, l(0), r1.z
  store_raw g4.x, l(0), r2.y
endif 
sync_g_t
utof r1.xy, r0.xwxx
add r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r1.zw, r1.zzzw, cb0[5].zzzw
ftoi r2.xy, r1.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyww, t1.xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xy, r2.xyww, t2.yzxw
ld_indexable(texture2d)(float,float,float,float) r2.z, r2.xyzw, t6.yzxw
mul r4.w, r4.w, l(6.000000)
round_ne r4.w, r4.w
ftou r4.w, r4.w
mad r5.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.x, r5.xyxx, r5.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r5.z, r3.x
imul null, r3.x, r4.w, l(3)
dp3 r6.x, r5.xyzx, cb0[r3.x + 9].xyzx
dp3 r6.y, r5.xyzx, cb0[r3.x + 10].xyzx
dp3 r6.z, r5.xyzx, cb0[r3.x + 11].xyzx
add r3.x, -r3.z, l(1.000000)
mul r3.y, r3.w, l(3.000000)
round_ne r3.y, r3.y
ftoi r3.y, r3.y
ieq r3.y, r3.y, l(1)
movc r1.x, r3.y, l(0), r1.x
add r3.y, -r1.x, l(1.000000)
mul r3.yzw, r3.yyyy, r4.xxyz
mul r1.y, r1.y, r1.y
mul r4.w, r1.y, l(0.160000)
mad r4.xyz, -r1.yyyy, l(0.160000, 0.160000, 0.160000, 0.000000), r4.xyzx
mad r4.xyz, r1.xxxx, r4.xyzx, r4.wwww
dp3 r1.x, r4.xyzx, l(0.330000, 0.330000, 0.330000, 0.000000)
mul_sat r1.x, r1.x, l(50.000000)
mul r1.y, r3.x, r3.x
mad r5.xy, r1.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r5.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r5.x, r2.xyzw, cb0[0].xyzw
dp4 r5.y, r2.xyzw, cb0[1].xyzw
dp4 r5.z, r2.xyzw, cb0[2].xyzw
dp4 r2.x, r2.xyzw, cb0[3].xyzw
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r7.xyz, r2.xxxx, r5.xyzx
dp3 r2.y, -r7.xyzx, -r7.xyzx
rsq r2.y, r2.y
mul r8.xyz, r2.yyyy, -r7.xyzx
dp3 r2.z, -r8.xyzx, r6.xyzx
add r2.z, r2.z, r2.z
mad r9.xyz, r6.xyzx, -r2.zzzz, -r8.xyzx
dp3 r2.z, r6.xyzx, r8.xyzx
mov_sat r2.w, r2.z
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t10.yzxw, s0, l(0.000000)
ld_raw r1.w, l(0), g0.xxxx
ld_raw r4.w, l(0), g1.xxxx
iadd r5.w, r1.w, r4.w
add r2.z, |r2.z|, l(0.000010)
add r8.xyz, -r4.xyzx, r1.xxxx
max r1.x, r1.y, l(0.002000)
mul r6.w, r1.x, r1.x
mad r8.w, -r2.z, r6.w, r2.z
mad r8.w, r8.w, r2.z, r6.w
sqrt r8.w, r8.w
mad r9.w, r3.x, l(-0.337748349), l(1.000000)
add r10.x, -r2.z, l(1.000000)
mul r10.y, r10.x, r10.x
mul r10.y, r10.y, r10.y
mul r10.x, r10.x, r10.y
mov r10.yzw, l(0,0,0,0)
mov r11.xyz, l(0,0,0,0)
mov r11.w, r1.w
loop 
  uge r12.x, r11.w, r5.w
  breakc_nz r12.x
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.x, r11.w, l(0), t20.xxxx
  imul null, r12.x, r12.x, l(7)
  mad r12.yzw, -r5.xxyz, r2.xxxx, cb1[r12.x + 0].xxyz
  dp3 r13.x, r12.yzwy, r12.yzwy
  rsq r13.y, r13.x
  mul r12.yzw, r12.yyzw, r13.yyyy
  add r13.y, r13.x, cb1[r12.x + 1].w
  max r13.y, r13.y, l(0.000100)
  div r13.y, l(1.000000, 1.000000, 1.000000, 1.000000), r13.y
  mul r13.x, r13.x, cb1[r12.x + 0].w
  mad r13.x, -r13.x, r13.x, l(1.000000)
  max r13.x, r13.x, l(0.000000)
  mul r13.x, r13.x, r13.x
  mul r13.x, r13.x, r13.y
  dp3 r13.y, cb1[r12.x + 2].xyzx, r12.yzwy
  mad_sat r13.y, r13.y, cb1[r12.x + 5].x, cb1[r12.x + 5].y
  mul r13.y, r13.y, r13.y
  mul r13.x, r13.y, r13.x
  dp3_sat r13.y, r6.xyzx, r12.yzwy
  mul r13.x, r13.x, r13.y
  lt r13.z, l(0.000000), r13.x
  if_nz r13.z
    mad r14.xyz, -r7.xyzx, r2.yyyy, r12.yzwy
    dp3 r13.z, r14.xyzx, r14.xyzx
    rsq r13.z, r13.z
    mul r14.xyz, r13.zzzz, r14.xyzx
    dp3_sat r12.y, r12.yzwy, r14.xyzx
    dp3_sat r12.z, r6.xyzx, r14.xyzx
    add r12.w, -r12.y, l(1.000000)
    mul r13.z, r12.w, r12.w
    mul r13.z, r13.z, r13.z
    mul r12.w, r12.w, r13.z
    mad r14.xyz, r8.xyzx, r12.wwww, r4.xyzx
    mad r12.w, -r13.y, r6.w, r13.y
    mad r12.w, r12.w, r13.y, r6.w
    sqrt r12.w, r12.w
    mul r12.w, r2.z, r12.w
    mad r12.w, r13.y, r8.w, r12.w
    div r12.w, l(0.500000), r12.w
    mad r13.z, r12.z, r6.w, -r12.z
    mad r12.z, r13.z, r12.z, l(1.000000)
    mul r12.z, r12.z, r12.z
    div r12.z, r6.w, r12.z
    mul r12.z, r12.z, r12.w
    mul r14.xyz, r12.zzzz, r14.xyzx
    mul r12.y, r12.y, r12.y
    dp2 r12.y, r12.yyyy, r3.xxxx
    mad r12.y, r3.x, l(0.500000), r12.y
    add r12.z, -r13.y, l(1.000000)
    mul r12.w, r12.z, r12.z
    mul r12.w, r12.w, r12.w
    mul r12.z, r12.z, r12.w
    add r12.y, r12.y, l(-1.000000)
    mad r12.z, r12.y, r12.z, l(1.000000)
    mad r12.y, r12.y, r10.x, l(1.000000)
    mul r12.y, r12.y, r12.z
    mul r12.y, r9.w, r12.y
    mul r12.z, r13.x, cb1[r12.x + 2].w
    mul r13.yzw, r12.zzzz, cb1[r12.x + 1].xxyz
    mul r12.yzw, r12.yyyy, r13.yyzw
    mul r13.x, r13.x, cb1[r12.x + 3].w
    mul r13.xyz, r13.xxxx, cb1[r12.x + 1].xyzx
    mul r13.xyz, r13.xyzx, r14.xyzx
  else 
    mov r12.yzw, l(0,0,0,0)
    mov r13.xyz, l(0,0,0,0)
  endif 
  add r11.xyz, r11.xyzx, r12.yzwy
  add r10.yzw, r10.yyzw, r13.xxyz
  iadd r11.w, r11.w, l(1)
endloop 
ld_raw r4.w, l(0), g1.xxxx
iadd r1.w, r1.w, r4.w
ld_raw r4.w, l(0), g2.xxxx
iadd r5.w, r1.w, r4.w
mov r7.w, l(1.000000)
mov r12.xyz, r10.yzwy
mov r13.xyz, r11.xyzx
mov r11.w, r1.w
loop 
  uge r12.w, r11.w, r5.w
  breakc_nz r12.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(0), t20.xxxx
  imul null, r13.w, r12.w, l(21)
  mad r14.xyz, -r5.xyzx, r2.xxxx, cb2[r13.w + 0].xyzx
  dp3 r14.w, r14.xyzx, r14.xyzx
  rsq r15.x, r14.w
  mul r15.xyz, r14.xyzx, r15.xxxx
  add r15.w, r14.w, cb2[r13.w + 1].w
  max r15.w, r15.w, l(0.000100)
  div r15.w, l(1.000000, 1.000000, 1.000000, 1.000000), r15.w
  mul r14.w, r14.w, cb2[r13.w + 0].w
  mad r14.w, -r14.w, r14.w, l(1.000000)
  max r14.w, r14.w, l(0.000000)
  mul r14.w, r14.w, r14.w
  mul r14.w, r14.w, r15.w
  dp3 r15.w, cb2[r13.w + 2].xyzx, r15.xyzx
  mad_sat r16.x, r15.w, cb2[r13.w + 5].x, cb2[r13.w + 5].y
  mul r16.x, r16.x, r16.x
  mul r14.w, r14.w, r16.x
  dp3_sat r16.x, r6.xyzx, r15.xyzx
  mul r14.w, r14.w, r16.x
  lt r16.y, l(0.000000), r14.w
  if_nz r16.y
    mad r17.xyz, -r7.xyzx, r2.yyyy, r15.xyzx
    dp3 r16.z, r17.xyzx, r17.xyzx
    rsq r16.z, r16.z
    mul r17.xyz, r16.zzzz, r17.xyzx
    dp3_sat r16.z, r15.xyzx, r17.xyzx
    dp3_sat r16.w, r6.xyzx, r17.xyzx
    add r17.x, -r16.z, l(1.000000)
    mul r17.y, r17.x, r17.x
    mul r17.y, r17.y, r17.y
    mul r17.x, r17.x, r17.y
    mad r17.xyz, r8.xyzx, r17.xxxx, r4.xyzx
    mad r17.w, -r16.x, r6.w, r16.x
    mad r17.w, r17.w, r16.x, r6.w
    sqrt r17.w, r17.w
    mul r17.w, r2.z, r17.w
    mad r17.w, r16.x, r8.w, r17.w
    div r17.w, l(0.500000), r17.w
    mad r18.x, r16.w, r6.w, -r16.w
    mad r16.w, r18.x, r16.w, l(1.000000)
    mul r16.w, r16.w, r16.w
    div r16.w, r6.w, r16.w
    mul r16.w, r16.w, r17.w
    mul r17.xyz, r16.wwww, r17.xyzx
    mul r16.z, r16.z, r16.z
    dp2 r16.z, r16.zzzz, r3.xxxx
    mad r16.z, r3.x, l(0.500000), r16.z
    add r16.x, -r16.x, l(1.000000)
    mul r16.w, r16.x, r16.x
    mul r16.w, r16.w, r16.w
    mul r16.x, r16.x, r16.w
    add r16.z, r16.z, l(-1.000000)
    mad r16.x, r16.z, r16.x, l(1.000000)
    mad r16.z, r16.z, r10.x, l(1.000000)
    mul r16.x, r16.z, r16.x
    mul r16.x, r9.w, r16.x
    mul r16.z, r14.w, cb2[r13.w + 2].w
    mul r18.xyz, r16.zzzz, cb2[r13.w + 1].xyzx
    mul r16.xzw, r16.xxxx, r18.xxyz
    mul r14.w, r14.w, cb2[r13.w + 3].w
    mul r18.xyz, r14.wwww, cb2[r13.w + 1].xyzx
    mul r17.xyz, r17.xyzx, r18.xyzx
  else 
    mov r16.xzw, l(0,0,0,0)
    mov r17.xyz, l(0,0,0,0)
  endif 
  lt r14.w, l(0.000000), cb2[r13.w + 6].x
  and r14.w, r14.w, r16.y
  if_nz r14.w
    dp3 r14.w, cb2[r13.w + 4].xyzx, -r15.xyzx
    dp3 r17.w, cb2[r13.w + 3].xyzx, -r15.xyzx
    dp3 r15.x, cb2[r13.w + 2].xyzx, -r15.xyzx
    mad r15.y, r15.x, l(0.500000), l(0.500000)
    min r18.x, |r14.w|, |r17.w|
    max r18.y, |r14.w|, |r17.w|
    div r18.y, l(1.000000, 1.000000, 1.000000, 1.000000), r18.y
    mul r18.x, r18.y, r18.x
    mul r18.y, r18.x, r18.x
    mad r18.z, r18.y, l(0.0208350997), l(-0.085133)
    mad r18.z, r18.y, r18.z, l(0.180141)
    mad r18.z, r18.y, r18.z, l(-0.330299497)
    mad r18.y, r18.y, r18.z, l(0.999866)
    mul r18.z, r18.y, r18.x
    lt r18.w, |r14.w|, |r17.w|
    mad r18.z, r18.z, l(-2.000000), l(1.57079637)
    and r18.z, r18.w, r18.z
    mad r18.x, r18.x, r18.y, r18.z
    lt r18.y, r14.w, -r14.w
    and r18.y, r18.y, l(0xc0490fdb)
    add r18.x, r18.y, r18.x
    min r18.y, r14.w, r17.w
    max r14.w, r14.w, r17.w
    lt r17.w, r18.y, -r18.y
    ge r14.w, r14.w, -r14.w
    and r14.w, r14.w, r17.w
    movc r14.w, r14.w, -r18.x, r18.x
    mul r15.x, r14.w, l(0.159154937)
    mov r15.z, cb2[r13.w + 6].y
    sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r15.xyzx, t9.yzwx, s2, l(0.000000)
  else 
    mov r14.w, l(1.000000)
  endif 
  ne r15.x, l(0.000000), cb2[r13.w + 19].x
  and r15.x, r15.x, r16.y
  if_nz r15.x
    mad_sat r15.x, r15.w, cb2[r13.w + 19].z, cb2[r13.w + 19].w
    mul r15.x, r15.x, r15.x
    lt r15.y, l(0.000000), r15.x
    if_nz r15.y
      eq r15.y, l(2.000000), cb2[r13.w + 19].x
      if_nz r15.y
        mov r18.xyz, -r14.xyzx
        max r15.y, |r14.y|, |r14.x|
        max r15.y, |r14.z|, r15.y
        lt r15.zw, |r14.yyyz|, |r14.xxxx|
        and r15.z, r15.w, r15.z
        if_nz r15.z
          lt r15.z, l(0.000000), r18.x
          movc r18.x, r15.z, r18.z, r14.z
          and r15.z, r15.z, l(0x3f800000)
        else 
          lt r19.xy, |r14.xzxx|, |r14.yyyy|
          and r14.y, r19.y, r19.x
          if_nz r14.y
            lt r14.y, l(0.000000), r18.y
            movc r18.w, r14.y, r18.z, r14.z
            movc r15.z, r14.y, l(3.000000), l(2.000000)
            mov r18.xy, r18.xwxx
          else 
            lt r14.y, l(0.000000), r18.z
            movc r18.x, r14.y, r14.x, r18.x
            movc r15.z, r14.y, l(5.000000), l(4.000000)
          endif 
        endif 
        div r14.xy, r18.xyxx, r15.yyyy
        mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r15.w, -r15.y, cb2[r13.w + 9].z, cb2[r13.w + 9].w
        div r15.y, r15.w, r15.y
        mov r15.w, l(-1)
      else 
        dp4 r18.x, r7.xyzw, cb2[r13.w + 7].xyzw
        dp4 r18.y, r7.xyzw, cb2[r13.w + 8].xyzw
        dp4 r16.y, r7.xyzw, cb2[r13.w + 9].xyzw
        dp4 r17.w, r7.xyzw, cb2[r13.w + 10].xyzw
        div r17.w, l(1.000000, 1.000000, 1.000000, 1.000000), r17.w
        mul r18.xy, r17.wwww, r18.xyxx
        mul r15.y, r16.y, r17.w
        mad r14.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r16.y, -r16.y, r17.w, l(1.000000)
        max r17.w, |r18.y|, |r18.x|
        max r16.y, r16.y, r17.w
        ge r15.w, l(1.000000), r16.y
        mov r15.z, l(0)
      endif 
      ftou r15.z, r15.z
      and r16.y, r15.z, l(3)
      ushr r15.z, r15.z, l(2)
      imad r12.w, r12.w, l(21), r15.z
      dp4 r12.w, cb2[r12.w + 17].xyzw, icb[r16.y + 0].xyzw
      ge r15.z, r12.w, l(0.000000)
      and r15.z, r15.w, r15.z
      ftou r12.w, r12.w
      ftou r15.w, cb2[r13.w + 19].y
      ieq r15.w, r15.w, l(1)
      if_nz r15.w
        utof r18.z, r12.w
        mad r19.xy, cb0[6].xxxx, r14.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        round_ni r19.zw, r19.xxxy
        add r19.xy, -r19.zwzz, r19.xyxx
        mul r18.xy, r19.zwzz, cb0[6].zzzz
        gather4_c_aoffimmi_indexable(-2,-2,0)(texture2darray)(float,float,float,float) r20.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        add r21.xyzw, -r19.xxxx, l(1.000000, 2.000000, 3.000000, 5.000000)
        mul r22.xyzw, r20.wzxy, r21.xyxy
        add r19.zw, r22.yyyw, r22.xxxz
        gather4_c_aoffimmi_indexable(0,-2,0)(texture2darray)(float,float,float,float) r22.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        mad r19.zw, r22.zzzy, l(0.000000, 0.000000, 2.000000, 2.000000), r19.zzzw
        mad r19.zw, r22.wwwx, l(0.000000, 0.000000, 2.000000, 2.000000), r19.zzzw
        gather4_c_aoffimmi_indexable(2,-2,0)(texture2darray)(float,float,float,float) r23.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        add r24.xyzw, r19.xxxx, l(1.000000, 4.000000, 3.000000, 2.000000)
        mul r15.w, r19.x, r23.y
        mad r19.zw, r23.zzzy, r19.xxxx, r19.zzzw
        mad r19.zw, r23.wwwx, r24.xxxx, r19.zzzw
        gather4_c_aoffimmi_indexable(-2,0,0)(texture2darray)(float,float,float,float) r25.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        mad r16.y, -r19.x, l(2.000000), l(2.000000)
        mul r20.zw, r16.yyyy, r25.wwwx
        mad r17.w, r19.x, l(-2.000000), l(4.000000)
        mad r20.zw, r25.zzzy, r17.wwww, r20.zzzw
        mad r17.w, r20.y, r21.z, r20.z
        mad r17.w, r20.x, r16.y, r17.w
        mad r18.w, r25.z, r21.z, r20.w
        mad r18.w, r25.w, r16.y, r18.w
        gather4_c_indexable(texture2darray)(float,float,float,float) r20.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        mad r17.w, r20.z, r24.y, r17.w
        mad r17.w, r20.w, r21.w, r17.w
        mad r18.w, r20.y, r24.y, r18.w
        mad r18.w, r20.x, r21.w, r18.w
        add r22.zw, -r19.xxxy, l(0.000000, 0.000000, 4.000000, 1.000000)
        mad r17.w, r22.y, r24.z, r17.w
        mad r17.w, r22.x, r22.z, r17.w
        mad r18.w, r20.z, r24.z, r18.w
        mad r18.w, r20.w, r22.z, r18.w
        gather4_c_aoffimmi_indexable(2,0,0)(texture2darray)(float,float,float,float) r26.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        mad r20.z, r19.x, l(2.000000), l(2.000000)
        dp2 r20.w, r26.zzzz, r19.xxxx
        add r17.w, r17.w, r20.w
        mad r17.w, r26.w, r20.z, r17.w
        dp2 r21.w, r26.yyyy, r19.xxxx
        add r18.w, r18.w, r21.w
        mad r18.w, r26.x, r20.z, r18.w
        mad r15.w, r15.w, l(2.000000), r17.w
        mad r22.x, r23.x, r24.w, r15.w
        add r15.w, r18.w, r20.w
        mad r22.y, r26.w, r24.w, r15.w
        add r19.zw, r19.zzzw, r22.xxxy
        gather4_c_aoffimmi_indexable(-2,2,0)(texture2darray)(float,float,float,float) r23.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        mul r27.xyzw, r21.xyxy, r23.wzxy
        add r20.zw, r27.yyyw, r27.xxxz
        mad r15.w, r25.y, r21.z, r20.z
        mad r15.w, r25.x, r16.y, r15.w
        mad r17.w, r23.z, r21.z, r20.w
        mad r16.y, r23.w, r16.y, r17.w
        gather4_c_aoffimmi_indexable(0,2,0)(texture2darray)(float,float,float,float) r23.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        mad r15.w, r23.z, l(2.000000), r15.w
        mad r15.w, r23.w, l(2.000000), r15.w
        mad r16.y, r23.y, l(2.000000), r16.y
        mad r16.y, r23.x, l(2.000000), r16.y
        mad r15.w, r20.y, r24.z, r15.w
        mad r15.w, r20.x, r22.z, r15.w
        mad r16.y, r23.z, r24.z, r16.y
        mad r16.y, r23.w, r22.z, r16.y
        gather4_c_aoffimmi_indexable(2,2,0)(texture2darray)(float,float,float,float) r18.xyzw, r18.xyzx, t21.xyzw, s3.x, r15.y
        mul r17.w, r19.x, r18.z
        mad r15.w, r18.z, r19.x, r15.w
        mad r15.w, r18.w, r24.x, r15.w
        mad r16.y, r18.y, r19.x, r16.y
        mad r16.y, r18.x, r24.x, r16.y
        add r15.w, r15.w, r21.w
        mad r18.x, r26.x, r24.w, r15.w
        mad r15.w, r17.w, l(2.000000), r16.y
        mad r18.y, r18.w, r24.w, r15.w
        add r18.xy, r18.xyxx, r19.zwzz
        mul r15.w, r19.y, r18.y
        mad r15.w, r18.x, r22.w, r15.w
        mul_sat r15.w, r15.w, l(0.0163934417)
      else 
        utof r14.z, r12.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r14.xyzx, t21.xxxx, s3, r15.y
        lt r14.x, r15.y, l(1.000000)
        movc r15.w, r14.x, r12.w, l(1.000000)
      endif 
      add r12.w, r15.w, l(-1.000000)
      mul r12.w, r12.w, cb2[r13.w + 4].w
      mad r12.w, r15.x, r12.w, l(1.000000)
      movc r12.w, r15.z, r12.w, l(1.000000)
      mul r14.w, r12.w, r14.w
    endif 
  endif 
  mad r13.xyz, r16.xzwx, r14.wwww, r13.xyzx
  mad r12.xyz, r17.xyzx, r14.wwww, r12.xyzx
  iadd r11.w, r11.w, l(1)
endloop 
ld_raw r4.w, l(0), g2.xxxx
iadd r1.w, r1.w, r4.w
ld_raw r4.w, l(0), g3.xxxx
iadd r5.w, r1.w, r4.w
mul r10.y, r1.x, l(1.500000)
min r10.y, r10.y, l(1.000000)
mad r10.y, -r10.y, l(7.000000), l(8.000000)
mov r11.z, l(0)
mov r14.z, l(0)
mov r15.zw, l(0,0,1.000000,-1.000000)
mov r16.yz, l(0,0,0,0)
mov r17.yz, l(0,0,0,0)
mov r18.zw, l(0,0,1.000000,-1.000000)
mov r19.xz, l(0,0,0,0)
mov r20.xz, l(0,0,0,0)
mov r21.xyz, r12.xyzx
mov r22.xyz, r13.xyzx
mov r10.z, r1.w
loop 
  uge r10.w, r10.z, r5.w
  breakc_nz r10.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(0), t20.xxxx
  imul null, r10.w, r10.w, l(9)
  ftou r11.w, cb3[r10.w + 7].x
  ieq r12.w, r11.w, l(2)
  if_nz r12.w
    mul r23.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb3[r10.w + 4].xyzx
    mad r24.xyz, -r23.xyzx, cb3[r10.w + 7].zzzz, cb3[r10.w + 0].xyzx
    mad r23.xyz, r23.xyzx, cb3[r10.w + 7].zzzz, cb3[r10.w + 0].xyzx
    add r25.xyz, -r24.xyzx, r23.xyzx
    mad r26.xyz, r5.xyzx, r2.xxxx, -r24.xyzx
    dp3 r12.w, r26.xyzx, r25.xyzx
    dp3 r13.w, r25.xyzx, r25.xyzx
    div r12.w, r12.w, r13.w
    mad r26.xyz, r12.wwww, r25.yzxy, r24.yzxy
    mad r26.xyz, -r5.yzxy, r2.xxxx, r26.xyzx
    dp3 r13.w, r26.xyzx, r26.xyzx
    rsq r13.w, r13.w
    mul r26.xyz, r13.wwww, r26.xyzx
    mul r27.xyz, r26.xyzx, cb3[r10.w + 4].zxyz
    mad r26.xyz, cb3[r10.w + 4].yzxy, r26.yzxy, -r27.xyzx
    mul r13.w, l(0.500000), cb3[r10.w + 7].z
    mad r27.xyz, -cb3[r10.w + 4].xyzx, r13.wwww, cb3[r10.w + 0].xyzx
    mad r28.xyz, cb3[r10.w + 7].yyyy, r26.xyzx, r27.xyzx
    mad r27.xyz, -cb3[r10.w + 7].yyyy, r26.xyzx, r27.xyzx
    mad r29.xyz, cb3[r10.w + 4].xyzx, r13.wwww, cb3[r10.w + 0].xyzx
    mad r30.xyz, -cb3[r10.w + 7].yyyy, r26.xyzx, r29.xyzx
    mad r26.xyz, cb3[r10.w + 7].yyyy, r26.xyzx, r29.xyzx
    mad r28.xyz, -r5.xyzx, r2.xxxx, r28.xyzx
    mad r27.xyz, -r5.xyzx, r2.xxxx, r27.xyzx
    mad r29.xyz, -r5.xyzx, r2.xxxx, r30.xyzx
    mad r26.xyz, -r5.xyzx, r2.xxxx, r26.xyzx
    mul r30.xyz, r27.yzxy, r28.zxyz
    mad r30.xyz, r28.yzxy, r27.zxyz, -r30.xyzx
    dp3 r13.w, r30.xyzx, r30.xyzx
    rsq r13.w, r13.w
    mul r30.xyz, r13.wwww, r30.xyzx
    mul r31.xyz, r27.zxyz, r29.yzxy
    mad r31.xyz, r27.yzxy, r29.zxyz, -r31.xyzx
    dp3 r13.w, r31.xyzx, r31.xyzx
    rsq r13.w, r13.w
    mul r31.xyz, r13.wwww, r31.xyzx
    mul r32.xyz, r26.yzxy, r29.zxyz
    mad r32.xyz, r29.yzxy, r26.zxyz, -r32.xyzx
    dp3 r13.w, r32.xyzx, r32.xyzx
    rsq r13.w, r13.w
    mul r32.xyz, r13.wwww, r32.xyzx
    mul r33.xyz, r28.yzxy, r26.zxyz
    mad r33.xyz, r26.yzxy, r28.zxyz, -r33.xyzx
    dp3 r13.w, r33.xyzx, r33.xyzx
    rsq r13.w, r13.w
    mul r33.xyz, r13.wwww, r33.xyzx
    dp3 r13.w, -r30.xyzx, r31.xyzx
    mul r14.w, |r13.w|, |r13.w|
    mul r16.w, |r13.w|, r14.w
    mad r17.w, |r13.w|, l(-0.212114394), l(1.57072878)
    mad r14.w, r14.w, l(0.074261), r17.w
    mad r14.w, r16.w, l(-0.0187292993), r14.w
    add r16.w, -|r13.w|, l(1.000000)
    sqrt r16.w, r16.w
    mul r17.w, r14.w, r16.w
    ge r13.w, r13.w, l(0.000000)
    mad r14.w, -r16.w, r14.w, l(3.14159274)
    movc r13.w, r13.w, r17.w, r14.w
    dp3 r14.w, -r31.xyzx, r32.xyzx
    mul r16.w, |r14.w|, |r14.w|
    mul r17.w, |r14.w|, r16.w
    mad r19.w, |r14.w|, l(-0.212114394), l(1.57072878)
    mad r16.w, r16.w, l(0.074261), r19.w
    mad r16.w, r17.w, l(-0.0187292993), r16.w
    add r17.w, -|r14.w|, l(1.000000)
    sqrt r17.w, r17.w
    mul r19.w, r16.w, r17.w
    ge r14.w, r14.w, l(0.000000)
    mad r16.w, -r17.w, r16.w, l(3.14159274)
    movc r14.w, r14.w, r19.w, r16.w
    dp3 r16.w, -r32.xyzx, r33.xyzx
    mul r17.w, |r16.w|, |r16.w|
    mul r19.w, |r16.w|, r17.w
    mad r20.w, |r16.w|, l(-0.212114394), l(1.57072878)
    mad r17.w, r17.w, l(0.074261), r20.w
    mad r17.w, r19.w, l(-0.0187292993), r17.w
    add r19.w, -|r16.w|, l(1.000000)
    sqrt r19.w, r19.w
    mul r20.w, r17.w, r19.w
    ge r16.w, r16.w, l(0.000000)
    mad r17.w, -r19.w, r17.w, l(3.14159274)
    movc r16.w, r16.w, r20.w, r17.w
    dp3 r17.w, -r33.xyzx, r30.xyzx
    mul r19.w, |r17.w|, |r17.w|
    mul r20.w, |r17.w|, r19.w
    mad r21.w, |r17.w|, l(-0.212114394), l(1.57072878)
    mad r19.w, r19.w, l(0.074261), r21.w
    mad r19.w, r20.w, l(-0.0187292993), r19.w
    add r20.w, -|r17.w|, l(1.000000)
    sqrt r20.w, r20.w
    mul r21.w, r19.w, r20.w
    ge r17.w, r17.w, l(0.000000)
    mad r19.w, -r20.w, r19.w, l(3.14159274)
    movc r17.w, r17.w, r21.w, r19.w
    add r13.w, r13.w, r14.w
    add r13.w, r16.w, r13.w
    add r13.w, r17.w, r13.w
    add r13.w, r13.w, l(-6.28318548)
    mul r13.w, r13.w, l(0.200000)
    dp3 r14.w, r28.xyzx, r28.xyzx
    rsq r14.w, r14.w
    mul r28.xyz, r14.wwww, r28.xyzx
    dp3_sat r14.w, r28.xyzx, r6.xyzx
    dp3 r16.w, r27.xyzx, r27.xyzx
    rsq r16.w, r16.w
    mul r27.xyz, r16.wwww, r27.xyzx
    dp3_sat r16.w, r27.xyzx, r6.xyzx
    add r14.w, r14.w, r16.w
    dp3 r16.w, r29.xyzx, r29.xyzx
    rsq r16.w, r16.w
    mul r27.xyz, r16.wwww, r29.xyzx
    dp3_sat r16.w, r27.xyzx, r6.xyzx
    add r14.w, r14.w, r16.w
    dp3 r16.w, r26.xyzx, r26.xyzx
    rsq r16.w, r16.w
    mul r26.xyz, r16.wwww, r26.xyzx
    dp3_sat r16.w, r26.xyzx, r6.xyzx
    add r14.w, r14.w, r16.w
    mad r26.xyz, -r5.xyzx, r2.xxxx, cb3[r10.w + 0].xyzx
    dp3 r16.w, r26.xyzx, r26.xyzx
    rsq r17.w, r16.w
    mul r26.xyz, r17.wwww, r26.xyzx
    dp3_sat r17.w, r26.xyzx, r6.xyzx
    add r14.w, r14.w, r17.w
    mov_sat r12.w, r12.w
    mad r25.xyz, r12.wwww, r25.xyzx, r24.xyzx
    mad r25.xyz, -r5.xyzx, r2.xxxx, r25.xyzx
    dp3 r12.w, r25.xyzx, r25.xyzx
    rsq r17.w, r12.w
    mul r25.xyz, r17.wwww, r25.xyzx
    mul r17.w, cb3[r10.w + 7].y, cb3[r10.w + 7].y
    dp3_sat r19.w, r25.xyzx, r6.xyzx
    mul r20.w, r19.w, l(3.14159274)
    max r12.w, r12.w, r17.w
    div r12.w, r17.w, r12.w
    mul r12.w, r12.w, r20.w
    mad r12.w, r13.w, r14.w, r12.w
    mul r13.w, r16.w, cb3[r10.w + 0].w
    mad r13.w, -r13.w, r13.w, l(1.000000)
    max r13.w, r13.w, l(0.000000)
    mul r13.w, r13.w, r13.w
    mul r12.w, r12.w, r13.w
    lt r13.w, l(0.000000), r12.w
    if_nz r13.w
      mad r24.xyz, -r5.xyzx, r2.xxxx, r24.xyzx
      mad r23.xyz, -r5.xyzx, r2.xxxx, r23.xyzx
      add r23.xyz, -r24.xyzx, r23.xyzx
      dp3 r13.w, r23.xyzx, r23.xyzx
      dp3 r14.w, r9.xyzx, r23.xyzx
      dp3 r16.w, r9.xyzx, r24.xyzx
      dp3 r17.w, r24.xyzx, r23.xyzx
      mad r16.w, r16.w, r14.w, -r17.w
      mad r13.w, -r14.w, r14.w, r13.w
      div_sat r13.w, r16.w, r13.w
      mad r23.xyz, r13.wwww, r23.xyzx, r24.xyzx
      dp3 r13.w, r23.xyzx, r9.xyzx
      mad r24.xyz, r13.wwww, r9.xyzx, -r23.xyzx
      dp3 r13.w, r24.xyzx, r24.xyzx
      sqrt r13.w, r13.w
      div_sat r13.w, cb3[r10.w + 7].y, r13.w
      mad r23.xyz, r24.xyzx, r13.wwww, r23.xyzx
      dp3 r13.w, r23.xyzx, r23.xyzx
      sqrt r14.w, r13.w
      rsq r13.w, r13.w
      mul r23.xyz, r13.wwww, r23.xyzx
      add r13.w, r14.w, r14.w
      div r13.w, cb3[r10.w + 7].y, r13.w
      add_sat r13.w, r1.x, r13.w
      div r13.w, r1.x, r13.w
      mad r24.xyz, -r7.xyzx, r2.yyyy, r23.xyzx
      dp3 r14.w, r24.xyzx, r24.xyzx
      rsq r14.w, r14.w
      mul r24.xyz, r14.wwww, r24.xyzx
      mad r26.xyz, -r7.xyzx, r2.yyyy, r25.xyzx
      dp3 r14.w, r26.xyzx, r26.xyzx
      rsq r14.w, r14.w
      mul r26.xyz, r14.wwww, r26.xyzx
      dp3_sat r14.w, r23.xyzx, r24.xyzx
      dp3_sat r16.w, r25.xyzx, r26.xyzx
      dp3_sat r17.w, r6.xyzx, r24.xyzx
      dp3_sat r20.w, r6.xyzx, r23.xyzx
      add r14.w, -r14.w, l(1.000000)
      mul r21.w, r14.w, r14.w
      mul r21.w, r21.w, r21.w
      mul r14.w, r14.w, r21.w
      mad r23.xyz, r8.xyzx, r14.wwww, r4.xyzx
      mad r14.w, -r20.w, r6.w, r20.w
      mad r14.w, r14.w, r20.w, r6.w
      sqrt r14.w, r14.w
      mul r14.w, r2.z, r14.w
      mad r14.w, r20.w, r8.w, r14.w
      div r14.w, l(0.500000), r14.w
      mad r20.w, r17.w, r6.w, -r17.w
      mad r17.w, r20.w, r17.w, l(1.000000)
      mul r17.w, r17.w, r17.w
      div r17.w, r6.w, r17.w
      mul r14.w, r14.w, r17.w
      mul r13.w, r13.w, r14.w
      mul r23.xyz, r13.wwww, r23.xyzx
      mul r13.w, r16.w, r16.w
      dp2 r13.w, r13.wwww, r3.xxxx
      mad r13.w, r3.x, l(0.500000), r13.w
      add r14.w, -r19.w, l(1.000000)
      mul r16.w, r14.w, r14.w
      mul r16.w, r16.w, r16.w
      mul r14.w, r14.w, r16.w
      add r13.w, r13.w, l(-1.000000)
      mad r14.w, r13.w, r14.w, l(1.000000)
      mad r13.w, r13.w, r10.x, l(1.000000)
      mul r13.w, r13.w, r14.w
      mul r13.w, r9.w, r13.w
      mul r14.w, r12.w, cb3[r10.w + 2].w
      mul r24.xyz, r14.wwww, cb3[r10.w + 1].xyzx
      mul r24.xyz, r13.wwww, r24.xyzx
      mul r12.w, r12.w, cb3[r10.w + 3].w
      mul r25.xyz, r12.wwww, cb3[r10.w + 1].xyzx
      mul r23.xyz, r23.xyzx, r25.xyzx
    else 
      mov r24.xyz, l(0,0,0,0)
      mov r23.xyz, l(0,0,0,0)
    endif 
  else 
    ieq r12.w, r11.w, l(5)
    if_nz r12.w
      mad r25.xyz, r5.xyzx, r2.xxxx, -cb3[r10.w + 0].xyzx
      dp3 r12.w, r25.xyzx, -cb3[r10.w + 2].xyzx
      lt r12.w, l(0.000000), r12.w
      if_nz r12.w
        mul r25.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb3[r10.w + 7].yzyy
        mad r26.xyz, cb3[r10.w + 4].xyzx, -r25.xxxx, cb3[r10.w + 0].xyzx
        mad r27.xyz, cb3[r10.w + 3].xyzx, r25.yyyy, r26.xyzx
        mad r26.xyz, cb3[r10.w + 3].xyzx, -r25.yyyy, r26.xyzx
        mad r28.xyz, cb3[r10.w + 4].xyzx, r25.xxxx, cb3[r10.w + 0].xyzx
        mad r29.xyz, cb3[r10.w + 3].xyzx, -r25.yyyy, r28.xyzx
        mad r28.xyz, cb3[r10.w + 3].xyzx, r25.yyyy, r28.xyzx
        mad r27.xyz, -r5.xyzx, r2.xxxx, r27.xyzx
        mad r26.xyz, -r5.xyzx, r2.xxxx, r26.xyzx
        mad r29.xyz, -r5.xyzx, r2.xxxx, r29.xyzx
        mad r28.xyz, -r5.xyzx, r2.xxxx, r28.xyzx
        mul r30.xyz, r26.yzxy, r27.zxyz
        mad r30.xyz, r27.yzxy, r26.zxyz, -r30.xyzx
        dp3 r12.w, r30.xyzx, r30.xyzx
        rsq r12.w, r12.w
        mul r30.xyz, r12.wwww, r30.xyzx
        mul r31.xyz, r26.zxyz, r29.yzxy
        mad r31.xyz, r26.yzxy, r29.zxyz, -r31.xyzx
        dp3 r12.w, r31.xyzx, r31.xyzx
        rsq r12.w, r12.w
        mul r31.xyz, r12.wwww, r31.xyzx
        mul r32.xyz, r28.yzxy, r29.zxyz
        mad r32.xyz, r29.yzxy, r28.zxyz, -r32.xyzx
        dp3 r12.w, r32.xyzx, r32.xyzx
        rsq r12.w, r12.w
        mul r32.xyz, r12.wwww, r32.xyzx
        mul r33.xyz, r27.yzxy, r28.zxyz
        mad r33.xyz, r28.yzxy, r27.zxyz, -r33.xyzx
        dp3 r12.w, r33.xyzx, r33.xyzx
        rsq r12.w, r12.w
        mul r33.xyz, r12.wwww, r33.xyzx
        dp3 r12.w, -r30.xyzx, r31.xyzx
        mul r13.w, |r12.w|, |r12.w|
        mul r14.w, |r12.w|, r13.w
        mad r16.w, |r12.w|, l(-0.212114394), l(1.57072878)
        mad r13.w, r13.w, l(0.074261), r16.w
        mad r13.w, r14.w, l(-0.0187292993), r13.w
        add r14.w, -|r12.w|, l(1.000000)
        sqrt r14.w, r14.w
        mul r16.w, r13.w, r14.w
        ge r12.w, r12.w, l(0.000000)
        mad r13.w, -r14.w, r13.w, l(3.14159274)
        movc r12.w, r12.w, r16.w, r13.w
        dp3 r13.w, -r31.xyzx, r32.xyzx
        mul r14.w, |r13.w|, |r13.w|
        mul r16.w, |r13.w|, r14.w
        mad r17.w, |r13.w|, l(-0.212114394), l(1.57072878)
        mad r14.w, r14.w, l(0.074261), r17.w
        mad r14.w, r16.w, l(-0.0187292993), r14.w
        add r16.w, -|r13.w|, l(1.000000)
        sqrt r16.w, r16.w
        mul r17.w, r14.w, r16.w
        ge r13.w, r13.w, l(0.000000)
        mad r14.w, -r16.w, r14.w, l(3.14159274)
        movc r13.w, r13.w, r17.w, r14.w
        dp3 r14.w, -r32.xyzx, r33.xyzx
        mul r16.w, |r14.w|, |r14.w|
        mul r17.w, |r14.w|, r16.w
        mad r19.w, |r14.w|, l(-0.212114394), l(1.57072878)
        mad r16.w, r16.w, l(0.074261), r19.w
        mad r16.w, r17.w, l(-0.0187292993), r16.w
        add r17.w, -|r14.w|, l(1.000000)
        sqrt r17.w, r17.w
        mul r19.w, r16.w, r17.w
        ge r14.w, r14.w, l(0.000000)
        mad r16.w, -r17.w, r16.w, l(3.14159274)
        movc r14.w, r14.w, r19.w, r16.w
        dp3 r16.w, -r33.xyzx, r30.xyzx
        mul r17.w, |r16.w|, |r16.w|
        mul r19.w, |r16.w|, r17.w
        mad r20.w, |r16.w|, l(-0.212114394), l(1.57072878)
        mad r17.w, r17.w, l(0.074261), r20.w
        mad r17.w, r19.w, l(-0.0187292993), r17.w
        add r19.w, -|r16.w|, l(1.000000)
        sqrt r19.w, r19.w
        mul r20.w, r17.w, r19.w
        ge r16.w, r16.w, l(0.000000)
        mad r17.w, -r19.w, r17.w, l(3.14159274)
        movc r16.w, r16.w, r20.w, r17.w
        add r12.w, r12.w, r13.w
        add r12.w, r14.w, r12.w
        add r12.w, r16.w, r12.w
        add r12.w, r12.w, l(-6.28318548)
        mul r12.w, r12.w, l(0.200000)
        dp3 r13.w, r27.xyzx, r27.xyzx
        rsq r13.w, r13.w
        mul r27.xyz, r13.wwww, r27.xyzx
        dp3_sat r13.w, r27.xyzx, r6.xyzx
        dp3 r14.w, r26.xyzx, r26.xyzx
        rsq r14.w, r14.w
        mul r26.xyz, r14.wwww, r26.xyzx
        dp3_sat r14.w, r26.xyzx, r6.xyzx
        add r13.w, r13.w, r14.w
        dp3 r14.w, r29.xyzx, r29.xyzx
        rsq r14.w, r14.w
        mul r26.xyz, r14.wwww, r29.xyzx
        dp3_sat r14.w, r26.xyzx, r6.xyzx
        add r13.w, r13.w, r14.w
        dp3 r14.w, r28.xyzx, r28.xyzx
        rsq r14.w, r14.w
        mul r26.xyz, r14.wwww, r28.xyzx
        dp3_sat r14.w, r26.xyzx, r6.xyzx
        add r13.w, r13.w, r14.w
        mad r26.xyz, -r5.xyzx, r2.xxxx, cb3[r10.w + 0].xyzx
        dp3 r14.w, r26.xyzx, r26.xyzx
        rsq r14.w, r14.w
        mul r27.xyz, r14.wwww, r26.xyzx
        dp3_sat r14.w, r27.xyzx, r6.xyzx
        add r13.w, r13.w, r14.w
        mul r12.w, r12.w, r13.w
        dp3_sat r13.w, r6.xyzx, cb3[r10.w + 2].xyzx
        add r13.w, r13.w, l(0.000010)
        mad r27.xyz, r6.xyzx, r13.wwww, cb3[r10.w + 2].xyzx
        dp3 r14.w, r27.xyzx, r27.xyzx
        rsq r14.w, r14.w
        mad r28.xyz, cb3[r10.w + 2].xyzx, r13.wwww, r6.xyzx
        dp3 r13.w, r28.xyzx, r28.xyzx
        rsq r13.w, r13.w
        mul r28.xyz, r13.wwww, r28.xyzx
        mad r27.xyz, r27.xyzx, r14.wwww, r28.xyzx
        mul r27.xyz, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        dp3 r13.w, -cb3[r10.w + 2].xyzx, r26.xyzx
        dp3 r14.w, -cb3[r10.w + 2].xyzx, r27.xyzx
        div r13.w, r13.w, r14.w
        mad r26.xyz, r27.xyzx, r13.wwww, r7.xyzx
        add r26.xyz, r26.xyzx, -cb3[r10.w + 0].xyzx
        dp3 r27.x, r26.xyzx, cb3[r10.w + 4].xyzx
        dp3 r27.y, r26.xyzx, cb3[r10.w + 3].xyzx
        max r25.zw, -r25.xxxy, r27.xxxy
        min r25.xy, r25.xyxx, r25.zwzz
        mad r25.xzw, r25.xxxx, cb3[r10.w + 4].xxyz, cb3[r10.w + 0].xxyz
        mad r25.xyz, r25.yyyy, cb3[r10.w + 3].xyzx, r25.xzwx
        mad r25.xyz, -r5.xyzx, r2.xxxx, r25.xyzx
        dp3 r13.w, r25.xyzx, r25.xyzx
        rsq r13.w, r13.w
        mul r25.xyz, r13.wwww, r25.xyzx
      else 
        mov r25.xyz, l(1.000000,0,0,0)
        mov r12.w, l(0)
      endif 
      mad r26.xyz, -r5.xyzx, r2.xxxx, cb3[r10.w + 0].xyzx
      dp3 r13.w, r26.xyzx, r26.xyzx
      mul r13.w, r13.w, cb3[r10.w + 0].w
      mad r13.w, -r13.w, r13.w, l(1.000000)
      max r13.w, r13.w, l(0.000000)
      mul r13.w, r13.w, r13.w
      mul r12.w, r12.w, r13.w
      lt r13.w, l(0.000000), r12.w
      if_nz r13.w
        mul r27.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb3[r10.w + 7].yzyy
        dp3 r28.x, r9.xyzx, cb3[r10.w + 4].xyzx
        dp3 r28.y, r9.xyzx, cb3[r10.w + 3].xyzx
        dp3 r28.z, r9.xyzx, -cb3[r10.w + 2].xyzx
        dp3 r29.x, r26.xyzx, cb3[r10.w + 4].xyzx
        dp3 r29.y, r26.xyzx, cb3[r10.w + 3].xyzx
        dp3 r29.z, r26.xyzx, -cb3[r10.w + 2].xyzx
        div r13.w, r29.z, r28.z
        mul r30.xyz, r13.wwww, r28.xyzx
        mad r27.zw, r28.xxxy, r13.wwww, -r29.xxxy
        lt r13.w, l(0.000000), r13.w
        ge r27.yz, r27.xxyx, |r27.zzwz|
        and r13.w, r13.w, r27.y
        and r13.w, r27.z, r13.w
        if_z r13.w
          mul r11.xy, l(-0.500000, -0.500000, 0.000000, 0.000000), cb3[r10.w + 7].yzyy
          add r31.xyz, r11.xyzx, r29.xyzx
          mul r14.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb3[r10.w + 7].yzyy
          add r32.xyz, r14.xyzx, r29.xyzx
          mov r31.w, r32.x
          mul r11.xy, r28.xxxx, r31.xwxx
          mov r32.w, r31.y
          mul r14.xy, r28.yyyy, r32.wyww
          mul r27.yz, r28.zzzz, r29.zzzz
          mul r33.xy, r31.xwxx, r31.xwxx
          mul r33.zw, r29.zzzz, r29.zzzz
          mad r34.xy, r32.wyww, r32.wyww, r33.zwzz
          mul r34.zw, r28.xxxx, r34.xxxy
          mad r14.xy, -r14.xyxx, r31.xwxx, r34.zwzz
          mad r14.xy, -r27.yzyy, r31.xwxx, r14.xyxx
          mad r34.zw, r28.yyyy, r32.wwwy, r27.yyyz
          mul r27.xw, r27.xxxx, r34.zzzw
          add r27.xw, r27.xxxw, r27.xxxw
          div r35.xy, r14.xyxx, r27.xwxx
          mov r35.z, -r35.y
          mov_sat r15.xy, r35.xzxx
          mul r14.xy, r15.zyzz, cb3[r10.w + 7].yyyy
          mad r14.xy, r14.xyxx, r15.xwxx, r31.xwxx
          mad r27.xw, r28.xxxx, r14.xxxy, r34.zzzw
          mad r14.xy, r14.xyxx, r14.xyxx, r34.xyxx
          sqrt r14.xy, r14.xyxx
          div r14.xy, r27.xwxx, r14.xyxx
          lt r13.w, r14.x, r14.y
          if_nz r13.w
            mov r16.x, cb3[r10.w + 7].y
            mad r30.xyz, -r16.xyzx, r15.yyyy, r32.xyzx
            mov r14.x, r14.y
          else 
            mov r17.x, cb3[r10.w + 7].y
            mad r30.xyz, r17.xyzx, r15.xxxx, r31.xyzx
          endif 
          mul r11.xy, r32.wyww, r11.xyxx
          mad r11.xy, r28.yyyy, r33.xyxx, -r11.xyxx
          mad r11.xy, -r27.yzyy, r32.wyww, r11.xyxx
          mad r11.xy, r28.yyyy, r33.zwzz, r11.xyxx
          mad r14.yw, r28.xxxx, r31.xxxw, r27.yyyz
          mul r15.xy, r14.ywyy, cb3[r10.w + 7].zzzz
          div r27.xy, r11.xyxx, r15.xyxx
          mov r27.z, -r27.y
          mov_sat r18.xy, r27.xzxx
          mul r11.xy, r18.zyzz, cb3[r10.w + 7].zzzz
          mad r11.xy, r11.xyxx, r18.xwxx, r32.wyww
          mad r14.yw, r28.yyyy, r11.xxxy, r14.yyyw
          mad r15.xy, r31.xwxx, r31.xwxx, r33.zwzz
          mad r11.xy, r11.xyxx, r11.xyxx, r15.xyxx
          sqrt r11.xy, r11.xyxx
          div r11.xy, r14.ywyy, r11.xyxx
          lt r11.x, r14.x, r11.x
          if_nz r11.x
            mov r19.y, cb3[r10.w + 7].z
            mad r30.xyz, r19.xyzx, r18.xxxx, r31.xyzx
          else 
            lt r11.x, r14.x, r11.y
            if_nz r11.x
              mov r20.y, cb3[r10.w + 7].z
              mad r30.xyz, -r20.xyzx, r18.yyyy, r32.xyzx
            endif 
          endif 
        endif 
        dp3 r11.x, r30.xyzx, r30.xyzx
        rsq r11.x, r11.x
        mul r14.xyw, r11.xxxx, r30.xyxz
        dp3 r11.x, r28.xyzx, r28.xyzx
        rsq r11.x, r11.x
        mul r27.xyz, r11.xxxx, r28.xyzx
        dp3 r11.x, r14.xywx, r27.xyzx
        mad_sat r11.x, r11.x, l(1.666000), l(-0.500000)
        add r14.xyw, -r29.xyxz, r30.xyxz
        mad r26.xyz, r14.xxxx, cb3[r10.w + 4].xyzx, r26.xyzx
        mad r26.xyz, r14.yyyy, cb3[r10.w + 3].xyzx, r26.xyzx
        mad r14.xyw, r14.wwww, -cb3[r10.w + 2].xyxz, r26.xyxz
        add r14.xyw, -r25.xyxz, r14.xyxw
        mad r14.xyw, r11.xxxx, r14.xyxw, r25.xyxz
        dp3 r11.x, r14.xywx, r14.xywx
        sqrt r11.y, r11.x
        div r11.y, l(1.000000, 1.000000, 1.000000, 1.000000), r11.y
        rsq r11.x, r11.x
        mul r14.xyw, r11.xxxx, r14.xyxw
        add r11.x, cb3[r10.w + 7].z, cb3[r10.w + 7].y
        mad_sat r11.x, r11.x, r11.y, r1.x
        div r11.x, r1.x, r11.x
        mul r11.x, r11.x, r11.x
        mul r11.x, r10.y, r11.x
        mad r26.xyz, -r7.xyzx, r2.yyyy, r14.xywx
        dp3 r11.y, r26.xyzx, r26.xyzx
        rsq r11.y, r11.y
        mul r26.xyz, r11.yyyy, r26.xyzx
        mad r27.xyz, -r7.xyzx, r2.yyyy, r25.xyzx
        dp3 r11.y, r27.xyzx, r27.xyzx
        rsq r11.y, r11.y
        mul r27.xyz, r11.yyyy, r27.xyzx
        dp3_sat r11.y, r14.xywx, r26.xyzx
        dp3_sat r13.w, r25.xyzx, r27.xyzx
        dp3_sat r15.x, r6.xyzx, r26.xyzx
        dp3_sat r14.x, r6.xyzx, r14.xywx
        dp3_sat r14.y, r6.xyzx, r25.xyzx
        add r11.y, -r11.y, l(1.000000)
        mul r14.w, r11.y, r11.y
        mul r14.w, r14.w, r14.w
        mul r11.y, r11.y, r14.w
        mad r25.xyz, r8.xyzx, r11.yyyy, r4.xyzx
        mad r11.y, -r14.x, r6.w, r14.x
        mad r11.y, r11.y, r14.x, r6.w
        sqrt r11.y, r11.y
        mul r11.y, r2.z, r11.y
        mad r11.y, r14.x, r8.w, r11.y
        div r11.y, l(0.500000), r11.y
        mad r14.x, r15.x, r6.w, -r15.x
        mad r14.x, r14.x, r15.x, l(1.000000)
        mul r14.x, r14.x, r14.x
        div r14.x, r6.w, r14.x
        mul r11.y, r11.y, r14.x
        mul r11.x, r11.x, r11.y
        mul r25.xyz, r11.xxxx, r25.xyzx
        mul r11.x, r13.w, r13.w
        dp2 r11.x, r11.xxxx, r3.xxxx
        mad r11.x, r3.x, l(0.500000), r11.x
        add r11.y, -r14.y, l(1.000000)
        mul r13.w, r11.y, r11.y
        mul r13.w, r13.w, r13.w
        mul r11.y, r11.y, r13.w
        add r11.x, r11.x, l(-1.000000)
        mad r11.y, r11.x, r11.y, l(1.000000)
        mad r11.x, r11.x, r10.x, l(1.000000)
        mul r11.x, r11.x, r11.y
        mul r11.x, r9.w, r11.x
        mul r11.y, r12.w, cb3[r10.w + 2].w
        mul r14.xyw, r11.yyyy, cb3[r10.w + 1].xyxz
        mul r24.xyz, r11.xxxx, r14.xywx
        mul r11.x, r12.w, cb3[r10.w + 3].w
        mul r14.xyw, r11.xxxx, cb3[r10.w + 1].xyxz
        mul r23.xyz, r14.xywx, r25.xyzx
      else 
        mov r24.xyz, l(0,0,0,0)
        mov r23.xyz, l(0,0,0,0)
      endif 
    else 
      ieq r11.x, r11.w, l(4)
      if_nz r11.x
        mad r11.xyw, -r5.xyxz, r2.xxxx, cb3[r10.w + 0].xyxz
        dp3 r12.w, r11.xywx, r11.xywx
        rsq r13.w, r12.w
        mul r14.xyw, r11.xyxw, r13.wwww
        dp3 r13.w, r6.xyzx, r14.xywx
        mul r15.x, cb3[r10.w + 7].y, cb3[r10.w + 7].y
        max r15.y, r12.w, r15.x
        mad r15.y, cb3[r10.w + 7].y, cb3[r10.w + 7].y, r15.y
        div r15.x, r15.x, r15.y
        mad r16.xw, r15.xxxx, l(-0.690576434, 0.000000, 0.000000, -10.482754), l(0.559636116, 0.000000, 0.000000, 18.258890)
        mad r15.y, r16.w, r15.x, l(-11.710919)
        mad r15.y, r15.y, r15.x, l(4.99786425)
        mad r16.w, r13.w, l(0.500000), l(0.500000)
        log r17.x, r16.w
        mul r15.y, r15.y, r17.x
        exp r15.y, r15.y
        mov_sat r17.x, r13.w
        mul r13.w, r13.w, r16.x
        add r16.x, -r15.y, r16.w
        mad r13.w, r13.w, r16.x, r15.y
        max r13.w, r13.w, r17.x
        mul r13.w, r15.x, r13.w
        mul r13.w, r13.w, l(3.14159274)
        dp3_sat r15.x, -cb3[r10.w + 2].xyzx, -r14.xywx
        mul r13.w, r13.w, r15.x
        mad r25.xyz, -r5.xyzx, r2.xxxx, cb3[r10.w + 6].xyzx
        dp3 r15.x, r25.xyzx, r25.xyzx
        rsq r15.x, r15.x
        mul r25.xyz, r15.xxxx, r25.xyzx
        dp3 r15.x, cb3[r10.w + 2].xyzx, r25.xyzx
        mad_sat r15.x, r15.x, cb3[r10.w + 5].x, cb3[r10.w + 5].y
        mul r15.x, r15.x, r15.x
        mul r13.w, r13.w, r15.x
        mul r12.w, r12.w, cb3[r10.w + 0].w
        mad r12.w, -r12.w, r12.w, l(1.000000)
        max r12.w, r12.w, l(0.000000)
        mul r12.w, r12.w, r12.w
        mul r12.w, r12.w, r13.w
        lt r13.w, l(0.000000), r12.w
        if_nz r13.w
          dp3_sat r13.w, r9.xyzx, -cb3[r10.w + 2].xyzx
          add r13.w, r13.w, l(0.000010)
          mad r25.xyz, cb3[r10.w + 2].xyzx, r13.wwww, r9.xyzx
          dp3 r13.w, r25.xyzx, r25.xyzx
          rsq r13.w, r13.w
          mul r25.xyz, r13.wwww, r25.xyzx
          dp3 r11.x, -cb3[r10.w + 2].xyzx, r11.xywx
          dp3 r11.y, -cb3[r10.w + 2].xyzx, r25.xyzx
          div r11.x, r11.x, r11.y
          mad r11.xyw, r25.xyxz, r11.xxxx, r7.xyxz
          add r11.xyw, r11.xyxw, -cb3[r10.w + 0].xyxz
          dp3 r15.x, r11.xywx, cb3[r10.w + 4].xyzx
          dp3 r15.y, r11.xywx, cb3[r10.w + 3].xyzx
          dp2 r11.x, r15.xyxx, r15.xyxx
          sqrt r11.x, r11.x
          div r11.yw, r15.xxxy, r11.xxxx
          mul r11.yw, r11.yyyw, cb3[r10.w + 7].yyyy
          lt r11.x, r11.x, cb3[r10.w + 7].y
          movc r11.xy, r11.xxxx, r15.xyxx, r11.ywyy
          mad r25.xyz, r11.xxxx, cb3[r10.w + 4].xyzx, cb3[r10.w + 0].xyzx
          mad r11.xyw, r11.yyyy, cb3[r10.w + 3].xyxz, r25.xyxz
          mad r11.xyw, -r5.xyxz, r2.xxxx, r11.xyxw
          dp3 r13.w, r11.xywx, r11.xywx
          sqrt r13.w, r13.w
          div r11.xyw, r11.xyxw, r13.wwww
          add r13.w, r13.w, r13.w
          div r13.w, cb3[r10.w + 7].y, r13.w
          add_sat r13.w, r1.x, r13.w
          div r13.w, r1.x, r13.w
          mul r13.w, r13.w, r13.w
          mad r25.xyz, -r7.xyzx, r2.yyyy, r11.xywx
          dp3 r15.x, r25.xyzx, r25.xyzx
          rsq r15.x, r15.x
          mul r25.xyz, r15.xxxx, r25.xyzx
          mad r26.xyz, -r7.xyzx, r2.yyyy, r14.xywx
          dp3 r15.x, r26.xyzx, r26.xyzx
          rsq r15.x, r15.x
          mul r26.xyz, r15.xxxx, r26.xyzx
          dp3_sat r15.x, r11.xywx, r25.xyzx
          dp3_sat r14.x, r14.xywx, r26.xyzx
          dp3_sat r14.y, r6.xyzx, r25.xyzx
          dp3_sat r11.x, r6.xyzx, r11.xywx
          add r11.y, -r15.x, l(1.000000)
          mul r11.w, r11.y, r11.y
          mul r11.w, r11.w, r11.w
          mul r11.y, r11.y, r11.w
          mad r25.xyz, r8.xyzx, r11.yyyy, r4.xyzx
          mad r11.y, -r11.x, r6.w, r11.x
          mad r11.y, r11.y, r11.x, r6.w
          sqrt r11.y, r11.y
          mul r11.y, r2.z, r11.y
          mad r11.x, r11.x, r8.w, r11.y
          div r11.x, l(0.500000), r11.x
          mad r11.y, r14.y, r6.w, -r14.y
          mad r11.y, r11.y, r14.y, l(1.000000)
          mul r11.y, r11.y, r11.y
          div r11.y, r6.w, r11.y
          mul r11.x, r11.y, r11.x
          mul r11.x, r13.w, r11.x
          mul r11.xyw, r11.xxxx, r25.xyxz
          mul r13.w, r14.x, r14.x
          dp2 r13.w, r13.wwww, r3.xxxx
          mad r13.w, r3.x, l(0.500000), r13.w
          add r14.x, -r17.x, l(1.000000)
          mul r14.y, r14.x, r14.x
          mul r14.y, r14.y, r14.y
          mul r14.x, r14.x, r14.y
          add r13.w, r13.w, l(-1.000000)
          mad r14.x, r13.w, r14.x, l(1.000000)
          mad r13.w, r13.w, r10.x, l(1.000000)
          mul r13.w, r13.w, r14.x
          mul r13.w, r9.w, r13.w
          mul r14.x, r12.w, cb3[r10.w + 2].w
          mul r14.xyw, r14.xxxx, cb3[r10.w + 1].xyxz
          mul r24.xyz, r13.wwww, r14.xywx
          mul r12.w, r12.w, cb3[r10.w + 3].w
          mul r14.xyw, r12.wwww, cb3[r10.w + 1].xyxz
          mul r23.xyz, r11.xywx, r14.xywx
        else 
          mov r24.xyz, l(0,0,0,0)
          mov r23.xyz, l(0,0,0,0)
        endif 
      else 
        mad r11.xyw, -r5.xyxz, r2.xxxx, cb3[r10.w + 0].xyxz
        dp3 r12.w, r11.xywx, r11.xywx
        rsq r13.w, r12.w
        mul r14.xyw, r11.xyxw, r13.wwww
        dp3 r13.w, r6.xyzx, r14.xywx
        mul r15.x, cb3[r10.w + 7].y, cb3[r10.w + 7].y
        max r15.y, r12.w, r15.x
        div r15.x, r15.x, r15.y
        mad r16.xw, r15.xxxx, l(-0.690576434, 0.000000, 0.000000, -10.482754), l(0.559636116, 0.000000, 0.000000, 18.258890)
        mad r15.y, r16.w, r15.x, l(-11.710919)
        mad r15.y, r15.y, r15.x, l(4.99786425)
        mad r16.w, r13.w, l(0.500000), l(0.500000)
        log r17.x, r16.w
        mul r15.y, r15.y, r17.x
        exp r15.y, r15.y
        mov_sat r17.x, r13.w
        mul r13.w, r13.w, r16.x
        add r16.x, -r15.y, r16.w
        mad r13.w, r13.w, r16.x, r15.y
        max r13.w, r13.w, r17.x
        mul r13.w, r15.x, r13.w
        mul r13.w, r13.w, l(3.14159274)
        mul r12.w, r12.w, cb3[r10.w + 0].w
        mad r12.w, -r12.w, r12.w, l(1.000000)
        max r12.w, r12.w, l(0.000000)
        mul r12.w, r12.w, r12.w
        mul r12.w, r12.w, r13.w
        lt r13.w, l(0.000000), r12.w
        if_nz r13.w
          dp3 r13.w, r11.xywx, r9.xyzx
          mad r25.xyz, r13.wwww, r9.xyzx, -r11.xywx
          dp3 r13.w, r25.xyzx, r25.xyzx
          sqrt r13.w, r13.w
          div_sat r13.w, cb3[r10.w + 7].y, r13.w
          mad r11.xyw, r25.xyxz, r13.wwww, r11.xyxw
          dp3 r13.w, r11.xywx, r11.xywx
          sqrt r13.w, r13.w
          div r11.xyw, r11.xyxw, r13.wwww
          add r13.w, r13.w, r13.w
          div r13.w, cb3[r10.w + 7].y, r13.w
          add_sat r13.w, r1.x, r13.w
          div r13.w, r1.x, r13.w
          mul r13.w, r13.w, r13.w
          mad r25.xyz, -r7.xyzx, r2.yyyy, r11.xywx
          dp3 r15.x, r25.xyzx, r25.xyzx
          rsq r15.x, r15.x
          mul r25.xyz, r15.xxxx, r25.xyzx
          mad r26.xyz, -r7.xyzx, r2.yyyy, r14.xywx
          dp3 r15.x, r26.xyzx, r26.xyzx
          rsq r15.x, r15.x
          mul r26.xyz, r15.xxxx, r26.xyzx
          dp3_sat r15.x, r11.xywx, r25.xyzx
          dp3_sat r14.x, r14.xywx, r26.xyzx
          dp3_sat r14.y, r6.xyzx, r25.xyzx
          dp3_sat r11.x, r6.xyzx, r11.xywx
          add r11.y, -r15.x, l(1.000000)
          mul r11.w, r11.y, r11.y
          mul r11.w, r11.w, r11.w
          mul r11.y, r11.y, r11.w
          mad r25.xyz, r8.xyzx, r11.yyyy, r4.xyzx
          mad r11.y, -r11.x, r6.w, r11.x
          mad r11.y, r11.y, r11.x, r6.w
          sqrt r11.y, r11.y
          mul r11.y, r2.z, r11.y
          mad r11.x, r11.x, r8.w, r11.y
          div r11.x, l(0.500000), r11.x
          mad r11.y, r14.y, r6.w, -r14.y
          mad r11.y, r11.y, r14.y, l(1.000000)
          mul r11.y, r11.y, r11.y
          div r11.y, r6.w, r11.y
          mul r11.x, r11.y, r11.x
          mul r11.x, r13.w, r11.x
          mul r11.xyw, r11.xxxx, r25.xyxz
          mul r13.w, r14.x, r14.x
          dp2 r13.w, r13.wwww, r3.xxxx
          mad r13.w, r3.x, l(0.500000), r13.w
          add r14.x, -r17.x, l(1.000000)
          mul r14.y, r14.x, r14.x
          mul r14.y, r14.y, r14.y
          mul r14.x, r14.x, r14.y
          add r13.w, r13.w, l(-1.000000)
          mad r14.x, r13.w, r14.x, l(1.000000)
          mad r13.w, r13.w, r10.x, l(1.000000)
          mul r13.w, r13.w, r14.x
          mul r13.w, r9.w, r13.w
          mul r14.x, r12.w, cb3[r10.w + 2].w
          mul r14.xyw, r14.xxxx, cb3[r10.w + 1].xyxz
          mul r24.xyz, r13.wwww, r14.xywx
          mul r12.w, r12.w, cb3[r10.w + 3].w
          mul r14.xyw, r12.wwww, cb3[r10.w + 1].xyxz
          mul r23.xyz, r11.xywx, r14.xywx
        else 
          mov r24.xyz, l(0,0,0,0)
          mov r23.xyz, l(0,0,0,0)
        endif 
      endif 
    endif 
  endif 
  add r22.xyz, r22.xyzx, r24.xyzx
  add r21.xyz, r21.xyzx, r23.xyzx
  iadd r10.z, r10.z, l(1)
endloop 
ld_raw r4.w, l(0), g3.xxxx
iadd r1.w, r1.w, r4.w
ld_raw r4.w, l(0), g4.xxxx
iadd r4.w, r1.w, r4.w
mov r11.z, l(0)
mov r12.z, l(0)
mov r13.zw, l(0,0,1.000000,-1.000000)
mov r14.yz, l(0,0,0,0)
mov r15.yz, l(0,0,0,0)
mov r16.zw, l(0,0,1.000000,-1.000000)
mov r7.w, l(1.000000)
mov r17.xz, l(0,0,0,0)
mov r18.xz, l(0,0,0,0)
mov r19.xyz, r21.xyzx
mov r20.xyz, r22.xyzx
mov r5.w, r1.w
loop 
  uge r10.z, r5.w, r4.w
  breakc_nz r10.z
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.z, r5.w, l(0), t20.xxxx
  imul null, r10.w, r10.z, l(23)
  ftou r11.w, cb4[r10.w + 7].x
  ieq r12.w, r11.w, l(2)
  if_nz r12.w
    mul r23.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb4[r10.w + 4].xyzx
    mad r24.xyz, -r23.xyzx, cb4[r10.w + 7].zzzz, cb4[r10.w + 0].xyzx
    mad r23.xyz, r23.xyzx, cb4[r10.w + 7].zzzz, cb4[r10.w + 0].xyzx
    add r25.xyz, -r24.xyzx, r23.xyzx
    mad r26.xyz, r5.xyzx, r2.xxxx, -r24.xyzx
    dp3 r12.w, r26.xyzx, r25.xyzx
    dp3 r14.w, r25.xyzx, r25.xyzx
    div r12.w, r12.w, r14.w
    mad r26.xyz, r12.wwww, r25.yzxy, r24.yzxy
    mad r26.xyz, -r5.yzxy, r2.xxxx, r26.xyzx
    dp3 r14.w, r26.xyzx, r26.xyzx
    rsq r14.w, r14.w
    mul r26.xyz, r14.wwww, r26.xyzx
    mul r27.xyz, r26.xyzx, cb4[r10.w + 4].zxyz
    mad r26.xyz, cb4[r10.w + 4].yzxy, r26.yzxy, -r27.xyzx
    mul r14.w, l(0.500000), cb4[r10.w + 7].z
    mad r27.xyz, -cb4[r10.w + 4].xyzx, r14.wwww, cb4[r10.w + 0].xyzx
    mad r28.xyz, cb4[r10.w + 7].yyyy, r26.xyzx, r27.xyzx
    mad r27.xyz, -cb4[r10.w + 7].yyyy, r26.xyzx, r27.xyzx
    mad r29.xyz, cb4[r10.w + 4].xyzx, r14.wwww, cb4[r10.w + 0].xyzx
    mad r30.xyz, -cb4[r10.w + 7].yyyy, r26.xyzx, r29.xyzx
    mad r26.xyz, cb4[r10.w + 7].yyyy, r26.xyzx, r29.xyzx
    mad r28.xyz, -r5.xyzx, r2.xxxx, r28.xyzx
    mad r27.xyz, -r5.xyzx, r2.xxxx, r27.xyzx
    mad r29.xyz, -r5.xyzx, r2.xxxx, r30.xyzx
    mad r26.xyz, -r5.xyzx, r2.xxxx, r26.xyzx
    mul r30.xyz, r27.yzxy, r28.zxyz
    mad r30.xyz, r28.yzxy, r27.zxyz, -r30.xyzx
    dp3 r14.w, r30.xyzx, r30.xyzx
    rsq r14.w, r14.w
    mul r30.xyz, r14.wwww, r30.xyzx
    mul r31.xyz, r27.zxyz, r29.yzxy
    mad r31.xyz, r27.yzxy, r29.zxyz, -r31.xyzx
    dp3 r14.w, r31.xyzx, r31.xyzx
    rsq r14.w, r14.w
    mul r31.xyz, r14.wwww, r31.xyzx
    mul r32.xyz, r26.yzxy, r29.zxyz
    mad r32.xyz, r29.yzxy, r26.zxyz, -r32.xyzx
    dp3 r14.w, r32.xyzx, r32.xyzx
    rsq r14.w, r14.w
    mul r32.xyz, r14.wwww, r32.xyzx
    mul r33.xyz, r28.yzxy, r26.zxyz
    mad r33.xyz, r26.yzxy, r28.zxyz, -r33.xyzx
    dp3 r14.w, r33.xyzx, r33.xyzx
    rsq r14.w, r14.w
    mul r33.xyz, r14.wwww, r33.xyzx
    dp3 r14.w, -r30.xyzx, r31.xyzx
    mul r15.w, |r14.w|, |r14.w|
    mul r17.w, |r14.w|, r15.w
    mad r18.w, |r14.w|, l(-0.212114394), l(1.57072878)
    mad r15.w, r15.w, l(0.074261), r18.w
    mad r15.w, r17.w, l(-0.0187292993), r15.w
    add r17.w, -|r14.w|, l(1.000000)
    sqrt r17.w, r17.w
    mul r18.w, r15.w, r17.w
    ge r14.w, r14.w, l(0.000000)
    mad r15.w, -r17.w, r15.w, l(3.14159274)
    movc r14.w, r14.w, r18.w, r15.w
    dp3 r15.w, -r31.xyzx, r32.xyzx
    mul r17.w, |r15.w|, |r15.w|
    mul r18.w, |r15.w|, r17.w
    mad r19.w, |r15.w|, l(-0.212114394), l(1.57072878)
    mad r17.w, r17.w, l(0.074261), r19.w
    mad r17.w, r18.w, l(-0.0187292993), r17.w
    add r18.w, -|r15.w|, l(1.000000)
    sqrt r18.w, r18.w
    mul r19.w, r17.w, r18.w
    ge r15.w, r15.w, l(0.000000)
    mad r17.w, -r18.w, r17.w, l(3.14159274)
    movc r15.w, r15.w, r19.w, r17.w
    dp3 r17.w, -r32.xyzx, r33.xyzx
    mul r18.w, |r17.w|, |r17.w|
    mul r19.w, |r17.w|, r18.w
    mad r20.w, |r17.w|, l(-0.212114394), l(1.57072878)
    mad r18.w, r18.w, l(0.074261), r20.w
    mad r18.w, r19.w, l(-0.0187292993), r18.w
    add r19.w, -|r17.w|, l(1.000000)
    sqrt r19.w, r19.w
    mul r20.w, r18.w, r19.w
    ge r17.w, r17.w, l(0.000000)
    mad r18.w, -r19.w, r18.w, l(3.14159274)
    movc r17.w, r17.w, r20.w, r18.w
    dp3 r18.w, -r33.xyzx, r30.xyzx
    mul r19.w, |r18.w|, |r18.w|
    mul r20.w, |r18.w|, r19.w
    mad r21.w, |r18.w|, l(-0.212114394), l(1.57072878)
    mad r19.w, r19.w, l(0.074261), r21.w
    mad r19.w, r20.w, l(-0.0187292993), r19.w
    add r20.w, -|r18.w|, l(1.000000)
    sqrt r20.w, r20.w
    mul r21.w, r19.w, r20.w
    ge r18.w, r18.w, l(0.000000)
    mad r19.w, -r20.w, r19.w, l(3.14159274)
    movc r18.w, r18.w, r21.w, r19.w
    add r14.w, r14.w, r15.w
    add r14.w, r17.w, r14.w
    add r14.w, r18.w, r14.w
    add r14.w, r14.w, l(-6.28318548)
    mul r14.w, r14.w, l(0.200000)
    dp3 r15.w, r28.xyzx, r28.xyzx
    rsq r15.w, r15.w
    mul r28.xyz, r15.wwww, r28.xyzx
    dp3_sat r15.w, r28.xyzx, r6.xyzx
    dp3 r17.w, r27.xyzx, r27.xyzx
    rsq r17.w, r17.w
    mul r27.xyz, r17.wwww, r27.xyzx
    dp3_sat r17.w, r27.xyzx, r6.xyzx
    add r15.w, r15.w, r17.w
    dp3 r17.w, r29.xyzx, r29.xyzx
    rsq r17.w, r17.w
    mul r27.xyz, r17.wwww, r29.xyzx
    dp3_sat r17.w, r27.xyzx, r6.xyzx
    add r15.w, r15.w, r17.w
    dp3 r17.w, r26.xyzx, r26.xyzx
    rsq r17.w, r17.w
    mul r26.xyz, r17.wwww, r26.xyzx
    dp3_sat r17.w, r26.xyzx, r6.xyzx
    add r15.w, r15.w, r17.w
    mad r26.xyz, -r5.xyzx, r2.xxxx, cb4[r10.w + 0].xyzx
    dp3 r17.w, r26.xyzx, r26.xyzx
    rsq r18.w, r17.w
    mul r26.xyz, r18.wwww, r26.xyzx
    dp3_sat r18.w, r26.xyzx, r6.xyzx
    add r15.w, r15.w, r18.w
    mov_sat r12.w, r12.w
    mad r25.xyz, r12.wwww, r25.xyzx, r24.xyzx
    mad r25.xyz, -r5.xyzx, r2.xxxx, r25.xyzx
    dp3 r12.w, r25.xyzx, r25.xyzx
    rsq r18.w, r12.w
    mul r25.xyz, r18.wwww, r25.xyzx
    mul r18.w, cb4[r10.w + 7].y, cb4[r10.w + 7].y
    dp3_sat r19.w, r25.xyzx, r6.xyzx
    mul r20.w, r19.w, l(3.14159274)
    max r12.w, r12.w, r18.w
    div r12.w, r18.w, r12.w
    mul r12.w, r12.w, r20.w
    mad r12.w, r14.w, r15.w, r12.w
    mul r14.w, r17.w, cb4[r10.w + 0].w
    mad r14.w, -r14.w, r14.w, l(1.000000)
    max r14.w, r14.w, l(0.000000)
    mul r14.w, r14.w, r14.w
    mul r12.w, r12.w, r14.w
    lt r14.w, l(0.000000), r12.w
    if_nz r14.w
      mad r24.xyz, -r5.xyzx, r2.xxxx, r24.xyzx
      mad r23.xyz, -r5.xyzx, r2.xxxx, r23.xyzx
      add r23.xyz, -r24.xyzx, r23.xyzx
      dp3 r15.w, r23.xyzx, r23.xyzx
      dp3 r17.w, r9.xyzx, r23.xyzx
      dp3 r18.w, r9.xyzx, r24.xyzx
      dp3 r20.w, r24.xyzx, r23.xyzx
      mad r18.w, r18.w, r17.w, -r20.w
      mad r15.w, -r17.w, r17.w, r15.w
      div_sat r15.w, r18.w, r15.w
      mad r23.xyz, r15.wwww, r23.xyzx, r24.xyzx
      dp3 r15.w, r23.xyzx, r9.xyzx
      mad r24.xyz, r15.wwww, r9.xyzx, -r23.xyzx
      dp3 r15.w, r24.xyzx, r24.xyzx
      sqrt r15.w, r15.w
      div_sat r15.w, cb4[r10.w + 7].y, r15.w
      mad r23.xyz, r24.xyzx, r15.wwww, r23.xyzx
      dp3 r15.w, r23.xyzx, r23.xyzx
      sqrt r17.w, r15.w
      rsq r15.w, r15.w
      mul r24.xyz, r15.wwww, r23.xyzx
      add r15.w, r17.w, r17.w
      div r15.w, cb4[r10.w + 7].y, r15.w
      add_sat r15.w, r1.x, r15.w
      div r15.w, r1.x, r15.w
      mad r26.xyz, -r7.xyzx, r2.yyyy, r24.xyzx
      dp3 r17.w, r26.xyzx, r26.xyzx
      rsq r17.w, r17.w
      mul r26.xyz, r17.wwww, r26.xyzx
      mad r27.xyz, -r7.xyzx, r2.yyyy, r25.xyzx
      dp3 r17.w, r27.xyzx, r27.xyzx
      rsq r17.w, r17.w
      mul r27.xyz, r17.wwww, r27.xyzx
      dp3_sat r17.w, r24.xyzx, r26.xyzx
      dp3_sat r18.w, r25.xyzx, r27.xyzx
      dp3_sat r20.w, r6.xyzx, r26.xyzx
      dp3_sat r21.w, r6.xyzx, r24.xyzx
      add r17.w, -r17.w, l(1.000000)
      mul r22.w, r17.w, r17.w
      mul r22.w, r22.w, r22.w
      mul r17.w, r17.w, r22.w
      mad r25.xyz, r8.xyzx, r17.wwww, r4.xyzx
      mad r17.w, -r21.w, r6.w, r21.w
      mad r17.w, r17.w, r21.w, r6.w
      sqrt r17.w, r17.w
      mul r17.w, r2.z, r17.w
      mad r17.w, r21.w, r8.w, r17.w
      div r17.w, l(0.500000), r17.w
      mad r21.w, r20.w, r6.w, -r20.w
      mad r20.w, r21.w, r20.w, l(1.000000)
      mul r20.w, r20.w, r20.w
      div r20.w, r6.w, r20.w
      mul r17.w, r17.w, r20.w
      mul r15.w, r15.w, r17.w
      mul r25.xyz, r15.wwww, r25.xyzx
      mul r15.w, r18.w, r18.w
      dp2 r15.w, r15.wwww, r3.xxxx
      mad r15.w, r3.x, l(0.500000), r15.w
      add r17.w, -r19.w, l(1.000000)
      mul r18.w, r17.w, r17.w
      mul r18.w, r18.w, r18.w
      mul r17.w, r17.w, r18.w
      add r15.w, r15.w, l(-1.000000)
      mad r17.w, r15.w, r17.w, l(1.000000)
      mad r15.w, r15.w, r10.x, l(1.000000)
      mul r15.w, r15.w, r17.w
      mul r15.w, r9.w, r15.w
      mul r17.w, r12.w, cb4[r10.w + 2].w
      mul r26.xyz, r17.wwww, cb4[r10.w + 1].xyzx
      mul r26.xyz, r15.wwww, r26.xyzx
      mul r12.w, r12.w, cb4[r10.w + 3].w
      mul r27.xyz, r12.wwww, cb4[r10.w + 1].xyzx
      mul r25.xyz, r25.xyzx, r27.xyzx
    else 
      mov r23.xyz, l(1.000000,0,0,0)
      mov r24.xyz, l(1.000000,0,0,0)
      mov r26.xyz, l(0,0,0,0)
      mov r25.xyz, l(0,0,0,0)
    endif 
  else 
    ieq r12.w, r11.w, l(5)
    if_nz r12.w
      mad r27.xyz, r5.xyzx, r2.xxxx, -cb4[r10.w + 0].xyzx
      dp3 r12.w, r27.xyzx, -cb4[r10.w + 2].xyzx
      lt r12.w, l(0.000000), r12.w
      if_nz r12.w
        mul r27.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb4[r10.w + 7].yzyy
        mad r28.xyz, cb4[r10.w + 4].xyzx, -r27.xxxx, cb4[r10.w + 0].xyzx
        mad r29.xyz, cb4[r10.w + 3].xyzx, r27.yyyy, r28.xyzx
        mad r28.xyz, cb4[r10.w + 3].xyzx, -r27.yyyy, r28.xyzx
        mad r30.xyz, cb4[r10.w + 4].xyzx, r27.xxxx, cb4[r10.w + 0].xyzx
        mad r31.xyz, cb4[r10.w + 3].xyzx, -r27.yyyy, r30.xyzx
        mad r30.xyz, cb4[r10.w + 3].xyzx, r27.yyyy, r30.xyzx
        mad r29.xyz, -r5.xyzx, r2.xxxx, r29.xyzx
        mad r28.xyz, -r5.xyzx, r2.xxxx, r28.xyzx
        mad r31.xyz, -r5.xyzx, r2.xxxx, r31.xyzx
        mad r30.xyz, -r5.xyzx, r2.xxxx, r30.xyzx
        mul r32.xyz, r28.yzxy, r29.zxyz
        mad r32.xyz, r29.yzxy, r28.zxyz, -r32.xyzx
        dp3 r12.w, r32.xyzx, r32.xyzx
        rsq r12.w, r12.w
        mul r32.xyz, r12.wwww, r32.xyzx
        mul r33.xyz, r28.zxyz, r31.yzxy
        mad r33.xyz, r28.yzxy, r31.zxyz, -r33.xyzx
        dp3 r12.w, r33.xyzx, r33.xyzx
        rsq r12.w, r12.w
        mul r33.xyz, r12.wwww, r33.xyzx
        mul r34.xyz, r30.yzxy, r31.zxyz
        mad r34.xyz, r31.yzxy, r30.zxyz, -r34.xyzx
        dp3 r12.w, r34.xyzx, r34.xyzx
        rsq r12.w, r12.w
        mul r34.xyz, r12.wwww, r34.xyzx
        mul r35.xyz, r29.yzxy, r30.zxyz
        mad r35.xyz, r30.yzxy, r29.zxyz, -r35.xyzx
        dp3 r12.w, r35.xyzx, r35.xyzx
        rsq r12.w, r12.w
        mul r35.xyz, r12.wwww, r35.xyzx
        dp3 r12.w, -r32.xyzx, r33.xyzx
        mul r15.w, |r12.w|, |r12.w|
        mul r17.w, |r12.w|, r15.w
        mad r18.w, |r12.w|, l(-0.212114394), l(1.57072878)
        mad r15.w, r15.w, l(0.074261), r18.w
        mad r15.w, r17.w, l(-0.0187292993), r15.w
        add r17.w, -|r12.w|, l(1.000000)
        sqrt r17.w, r17.w
        mul r18.w, r15.w, r17.w
        ge r12.w, r12.w, l(0.000000)
        mad r15.w, -r17.w, r15.w, l(3.14159274)
        movc r12.w, r12.w, r18.w, r15.w
        dp3 r15.w, -r33.xyzx, r34.xyzx
        mul r17.w, |r15.w|, |r15.w|
        mul r18.w, |r15.w|, r17.w
        mad r19.w, |r15.w|, l(-0.212114394), l(1.57072878)
        mad r17.w, r17.w, l(0.074261), r19.w
        mad r17.w, r18.w, l(-0.0187292993), r17.w
        add r18.w, -|r15.w|, l(1.000000)
        sqrt r18.w, r18.w
        mul r19.w, r17.w, r18.w
        ge r15.w, r15.w, l(0.000000)
        mad r17.w, -r18.w, r17.w, l(3.14159274)
        movc r15.w, r15.w, r19.w, r17.w
        dp3 r17.w, -r34.xyzx, r35.xyzx
        mul r18.w, |r17.w|, |r17.w|
        mul r19.w, |r17.w|, r18.w
        mad r20.w, |r17.w|, l(-0.212114394), l(1.57072878)
        mad r18.w, r18.w, l(0.074261), r20.w
        mad r18.w, r19.w, l(-0.0187292993), r18.w
        add r19.w, -|r17.w|, l(1.000000)
        sqrt r19.w, r19.w
        mul r20.w, r18.w, r19.w
        ge r17.w, r17.w, l(0.000000)
        mad r18.w, -r19.w, r18.w, l(3.14159274)
        movc r17.w, r17.w, r20.w, r18.w
        dp3 r18.w, -r35.xyzx, r32.xyzx
        mul r19.w, |r18.w|, |r18.w|
        mul r20.w, |r18.w|, r19.w
        mad r21.w, |r18.w|, l(-0.212114394), l(1.57072878)
        mad r19.w, r19.w, l(0.074261), r21.w
        mad r19.w, r20.w, l(-0.0187292993), r19.w
        add r20.w, -|r18.w|, l(1.000000)
        sqrt r20.w, r20.w
        mul r21.w, r19.w, r20.w
        ge r18.w, r18.w, l(0.000000)
        mad r19.w, -r20.w, r19.w, l(3.14159274)
        movc r18.w, r18.w, r21.w, r19.w
        add r12.w, r12.w, r15.w
        add r12.w, r17.w, r12.w
        add r12.w, r18.w, r12.w
        add r12.w, r12.w, l(-6.28318548)
        mul r12.w, r12.w, l(0.200000)
        dp3 r15.w, r29.xyzx, r29.xyzx
        rsq r15.w, r15.w
        mul r29.xyz, r15.wwww, r29.xyzx
        dp3_sat r15.w, r29.xyzx, r6.xyzx
        dp3 r17.w, r28.xyzx, r28.xyzx
        rsq r17.w, r17.w
        mul r28.xyz, r17.wwww, r28.xyzx
        dp3_sat r17.w, r28.xyzx, r6.xyzx
        add r15.w, r15.w, r17.w
        dp3 r17.w, r31.xyzx, r31.xyzx
        rsq r17.w, r17.w
        mul r28.xyz, r17.wwww, r31.xyzx
        dp3_sat r17.w, r28.xyzx, r6.xyzx
        add r15.w, r15.w, r17.w
        dp3 r17.w, r30.xyzx, r30.xyzx
        rsq r17.w, r17.w
        mul r28.xyz, r17.wwww, r30.xyzx
        dp3_sat r17.w, r28.xyzx, r6.xyzx
        add r15.w, r15.w, r17.w
        mad r28.xyz, -r5.xyzx, r2.xxxx, cb4[r10.w + 0].xyzx
        dp3 r17.w, r28.xyzx, r28.xyzx
        rsq r17.w, r17.w
        mul r29.xyz, r17.wwww, r28.xyzx
        dp3_sat r17.w, r29.xyzx, r6.xyzx
        add r15.w, r15.w, r17.w
        mul r12.w, r12.w, r15.w
        dp3_sat r15.w, r6.xyzx, cb4[r10.w + 2].xyzx
        add r15.w, r15.w, l(0.000010)
        mad r29.xyz, r6.xyzx, r15.wwww, cb4[r10.w + 2].xyzx
        dp3 r17.w, r29.xyzx, r29.xyzx
        rsq r17.w, r17.w
        mad r30.xyz, cb4[r10.w + 2].xyzx, r15.wwww, r6.xyzx
        dp3 r15.w, r30.xyzx, r30.xyzx
        rsq r15.w, r15.w
        mul r30.xyz, r15.wwww, r30.xyzx
        mad r29.xyz, r29.xyzx, r17.wwww, r30.xyzx
        mul r29.xyz, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        dp3 r15.w, -cb4[r10.w + 2].xyzx, r28.xyzx
        dp3 r17.w, -cb4[r10.w + 2].xyzx, r29.xyzx
        div r15.w, r15.w, r17.w
        mad r28.xyz, r29.xyzx, r15.wwww, r7.xyzx
        add r28.xyz, r28.xyzx, -cb4[r10.w + 0].xyzx
        dp3 r29.x, r28.xyzx, cb4[r10.w + 4].xyzx
        dp3 r29.y, r28.xyzx, cb4[r10.w + 3].xyzx
        max r27.zw, -r27.xxxy, r29.xxxy
        min r27.xy, r27.xyxx, r27.zwzz
        mad r27.xzw, r27.xxxx, cb4[r10.w + 4].xxyz, cb4[r10.w + 0].xxyz
        mad r27.xyz, r27.yyyy, cb4[r10.w + 3].xyzx, r27.xzwx
        mad r23.xyz, -r5.xyzx, r2.xxxx, r27.xyzx
        dp3 r15.w, r23.xyzx, r23.xyzx
        rsq r15.w, r15.w
        mul r24.xyz, r15.wwww, r23.xyzx
      else 
        mov r23.xyz, l(1.000000,0,0,0)
        mov r24.xyz, l(1.000000,0,0,0)
        mov r12.w, l(0)
      endif 
      mad r27.xyz, -r5.xyzx, r2.xxxx, cb4[r10.w + 0].xyzx
      dp3 r15.w, r27.xyzx, r27.xyzx
      mul r15.w, r15.w, cb4[r10.w + 0].w
      mad r15.w, -r15.w, r15.w, l(1.000000)
      max r15.w, r15.w, l(0.000000)
      mul r15.w, r15.w, r15.w
      mul r12.w, r12.w, r15.w
      lt r14.w, l(0.000000), r12.w
      if_nz r14.w
        mul r28.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb4[r10.w + 7].yzyy
        dp3 r29.x, r9.xyzx, cb4[r10.w + 4].xyzx
        dp3 r29.y, r9.xyzx, cb4[r10.w + 3].xyzx
        dp3 r29.z, r9.xyzx, -cb4[r10.w + 2].xyzx
        dp3 r30.x, r27.xyzx, cb4[r10.w + 4].xyzx
        dp3 r30.y, r27.xyzx, cb4[r10.w + 3].xyzx
        dp3 r30.z, r27.xyzx, -cb4[r10.w + 2].xyzx
        div r15.w, r30.z, r29.z
        mul r31.xyz, r15.wwww, r29.xyzx
        mad r28.zw, r29.xxxy, r15.wwww, -r30.xxxy
        lt r15.w, l(0.000000), r15.w
        ge r28.yz, r28.xxyx, |r28.zzwz|
        and r15.w, r15.w, r28.y
        and r15.w, r28.z, r15.w
        if_z r15.w
          mul r11.xy, l(-0.500000, -0.500000, 0.000000, 0.000000), cb4[r10.w + 7].yzyy
          add r32.xyz, r11.xyzx, r30.xyzx
          mul r12.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb4[r10.w + 7].yzyy
          add r33.xyz, r12.xyzx, r30.xyzx
          mov r32.w, r33.x
          mul r11.xy, r29.xxxx, r32.xwxx
          mov r33.w, r32.y
          mul r12.xy, r29.yyyy, r33.wyww
          mul r28.yz, r29.zzzz, r30.zzzz
          mul r34.xy, r32.xwxx, r32.xwxx
          mul r34.zw, r30.zzzz, r30.zzzz
          mad r35.xy, r33.wyww, r33.wyww, r34.zwzz
          mul r35.zw, r29.xxxx, r35.xxxy
          mad r12.xy, -r12.xyxx, r32.xwxx, r35.zwzz
          mad r12.xy, -r28.yzyy, r32.xwxx, r12.xyxx
          mad r35.zw, r29.yyyy, r33.wwwy, r28.yyyz
          mul r28.xw, r28.xxxx, r35.zzzw
          add r28.xw, r28.xxxw, r28.xxxw
          div r36.xy, r12.xyxx, r28.xwxx
          mov r36.z, -r36.y
          mov_sat r13.xy, r36.xzxx
          mul r12.xy, r13.zyzz, cb4[r10.w + 7].yyyy
          mad r12.xy, r12.xyxx, r13.xwxx, r32.xwxx
          mad r28.xw, r29.xxxx, r12.xxxy, r35.zzzw
          mad r12.xy, r12.xyxx, r12.xyxx, r35.xyxx
          sqrt r12.xy, r12.xyxx
          div r12.xy, r28.xwxx, r12.xyxx
          lt r15.w, r12.x, r12.y
          if_nz r15.w
            mov r14.x, cb4[r10.w + 7].y
            mad r31.xyz, -r14.xyzx, r13.yyyy, r33.xyzx
            mov r12.x, r12.y
          else 
            mov r15.x, cb4[r10.w + 7].y
            mad r31.xyz, r15.xyzx, r13.xxxx, r32.xyzx
          endif 
          mul r11.xy, r33.wyww, r11.xyxx
          mad r11.xy, r29.yyyy, r34.xyxx, -r11.xyxx
          mad r11.xy, -r28.yzyy, r33.wyww, r11.xyxx
          mad r11.xy, r29.yyyy, r34.zwzz, r11.xyxx
          mad r13.xy, r29.xxxx, r32.xwxx, r28.yzyy
          mul r15.xw, r13.xxxy, cb4[r10.w + 7].zzzz
          div r28.xy, r11.xyxx, r15.xwxx
          mov r28.z, -r28.y
          mov_sat r16.xy, r28.xzxx
          mul r11.xy, r16.zyzz, cb4[r10.w + 7].zzzz
          mad r11.xy, r11.xyxx, r16.xwxx, r33.wyww
          mad r13.xy, r29.yyyy, r11.xyxx, r13.xyxx
          mad r15.xw, r32.xxxw, r32.xxxw, r34.zzzw
          mad r11.xy, r11.xyxx, r11.xyxx, r15.xwxx
          sqrt r11.xy, r11.xyxx
          div r11.xy, r13.xyxx, r11.xyxx
          lt r11.x, r12.x, r11.x
          if_nz r11.x
            mov r17.y, cb4[r10.w + 7].z
            mad r31.xyz, r17.xyzx, r16.xxxx, r32.xyzx
          else 
            lt r11.x, r12.x, r11.y
            if_nz r11.x
              mov r18.y, cb4[r10.w + 7].z
              mad r31.xyz, -r18.xyzx, r16.yyyy, r33.xyzx
            endif 
          endif 
        endif 
        dp3 r11.x, r31.xyzx, r31.xyzx
        rsq r11.x, r11.x
        mul r28.xyz, r11.xxxx, r31.xyzx
        dp3 r11.x, r29.xyzx, r29.xyzx
        rsq r11.x, r11.x
        mul r29.xyz, r11.xxxx, r29.xyzx
        dp3 r11.x, r28.xyzx, r29.xyzx
        mad_sat r11.x, r11.x, l(1.666000), l(-0.500000)
        add r28.xyz, -r30.xyzx, r31.xyzx
        mad r27.xyz, r28.xxxx, cb4[r10.w + 4].xyzx, r27.xyzx
        mad r27.xyz, r28.yyyy, cb4[r10.w + 3].xyzx, r27.xyzx
        mad r27.xyz, r28.zzzz, -cb4[r10.w + 2].xyzx, r27.xyzx
        add r27.xyz, -r24.xyzx, r27.xyzx
        mad r27.xyz, r11.xxxx, r27.xyzx, r24.xyzx
        dp3 r11.x, r27.xyzx, r27.xyzx
        sqrt r11.y, r11.x
        div r11.y, l(1.000000, 1.000000, 1.000000, 1.000000), r11.y
        rsq r11.x, r11.x
        mul r27.xyz, r11.xxxx, r27.xyzx
        add r11.x, cb4[r10.w + 7].z, cb4[r10.w + 7].y
        mad_sat r11.x, r11.x, r11.y, r1.x
        div r11.x, r1.x, r11.x
        mul r11.x, r11.x, r11.x
        mul r11.x, r10.y, r11.x
        mad r28.xyz, -r7.xyzx, r2.yyyy, r27.xyzx
        dp3 r11.y, r28.xyzx, r28.xyzx
        rsq r11.y, r11.y
        mul r28.xyz, r11.yyyy, r28.xyzx
        mad r29.xyz, -r7.xyzx, r2.yyyy, r24.xyzx
        dp3 r11.y, r29.xyzx, r29.xyzx
        rsq r11.y, r11.y
        mul r29.xyz, r11.yyyy, r29.xyzx
        dp3_sat r11.y, r27.xyzx, r28.xyzx
        dp3_sat r12.x, r24.xyzx, r29.xyzx
        dp3_sat r12.y, r6.xyzx, r28.xyzx
        dp3_sat r13.x, r6.xyzx, r27.xyzx
        dp3_sat r13.y, r6.xyzx, r24.xyzx
        add r11.y, -r11.y, l(1.000000)
        mul r14.x, r11.y, r11.y
        mul r14.x, r14.x, r14.x
        mul r11.y, r11.y, r14.x
        mad r27.xyz, r8.xyzx, r11.yyyy, r4.xyzx
        mad r11.y, -r13.x, r6.w, r13.x
        mad r11.y, r11.y, r13.x, r6.w
        sqrt r11.y, r11.y
        mul r11.y, r2.z, r11.y
        mad r11.y, r13.x, r8.w, r11.y
        div r11.y, l(0.500000), r11.y
        mad r13.x, r12.y, r6.w, -r12.y
        mad r12.y, r13.x, r12.y, l(1.000000)
        mul r12.y, r12.y, r12.y
        div r12.y, r6.w, r12.y
        mul r11.y, r11.y, r12.y
        mul r11.x, r11.x, r11.y
        mul r27.xyz, r11.xxxx, r27.xyzx
        mul r11.x, r12.x, r12.x
        dp2 r11.x, r11.xxxx, r3.xxxx
        mad r11.x, r3.x, l(0.500000), r11.x
        add r11.y, -r13.y, l(1.000000)
        mul r12.x, r11.y, r11.y
        mul r12.x, r12.x, r12.x
        mul r11.y, r11.y, r12.x
        add r11.x, r11.x, l(-1.000000)
        mad r11.y, r11.x, r11.y, l(1.000000)
        mad r11.x, r11.x, r10.x, l(1.000000)
        mul r11.x, r11.x, r11.y
        mul r11.x, r9.w, r11.x
        mul r11.y, r12.w, cb4[r10.w + 2].w
        mul r28.xyz, r11.yyyy, cb4[r10.w + 1].xyzx
        mul r26.xyz, r11.xxxx, r28.xyzx
        mul r11.x, r12.w, cb4[r10.w + 3].w
        mul r12.xyw, r11.xxxx, cb4[r10.w + 1].xyxz
        mul r25.xyz, r12.xywx, r27.xyzx
      else 
        mov r26.xyz, l(0,0,0,0)
        mov r25.xyz, l(0,0,0,0)
      endif 
    else 
      ieq r11.x, r11.w, l(4)
      if_nz r11.x
        mad r23.xyz, -r5.xyzx, r2.xxxx, cb4[r10.w + 0].xyzx
        dp3 r11.x, r23.xyzx, r23.xyzx
        rsq r11.y, r11.x
        mul r24.xyz, r11.yyyy, r23.xyzx
        dp3 r11.y, r6.xyzx, r24.xyzx
        mul r11.w, cb4[r10.w + 7].y, cb4[r10.w + 7].y
        max r12.x, r11.x, r11.w
        mad r12.x, cb4[r10.w + 7].y, cb4[r10.w + 7].y, r12.x
        div r11.w, r11.w, r12.x
        mad r12.xy, r11.wwww, l(-0.690576434, -10.482754, 0.000000, 0.000000), l(0.559636116, 18.258890, 0.000000, 0.000000)
        mad r12.y, r12.y, r11.w, l(-11.710919)
        mad r12.y, r12.y, r11.w, l(4.99786425)
        mad r12.w, r11.y, l(0.500000), l(0.500000)
        log r13.x, r12.w
        mul r12.y, r12.y, r13.x
        exp r12.y, r12.y
        mov_sat r13.x, r11.y
        mul r11.y, r11.y, r12.x
        add r12.x, -r12.y, r12.w
        mad r11.y, r11.y, r12.x, r12.y
        max r11.y, r11.y, r13.x
        mul r11.y, r11.w, r11.y
        mul r11.y, r11.y, l(3.14159274)
        dp3_sat r11.w, -cb4[r10.w + 2].xyzx, -r24.xyzx
        mul r11.y, r11.w, r11.y
        mad r12.xyw, -r5.xyxz, r2.xxxx, cb4[r10.w + 6].xyxz
        dp3 r11.w, r12.xywx, r12.xywx
        rsq r11.w, r11.w
        mul r12.xyw, r11.wwww, r12.xyxw
        dp3 r11.w, cb4[r10.w + 2].xyzx, r12.xywx
        mad_sat r11.w, r11.w, cb4[r10.w + 5].x, cb4[r10.w + 5].y
        mul r11.w, r11.w, r11.w
        mul r11.x, r11.x, cb4[r10.w + 0].w
        mad r11.x, -r11.x, r11.x, l(1.000000)
        max r11.x, r11.x, l(0.000000)
        mul r11.xy, r11.xwxx, r11.xyxx
        mul r11.x, r11.x, r11.y
        lt r14.w, l(0.000000), r11.x
        if_nz r14.w
          dp3_sat r11.y, r9.xyzx, -cb4[r10.w + 2].xyzx
          add r11.y, r11.y, l(0.000010)
          mad r12.xyw, cb4[r10.w + 2].xyxz, r11.yyyy, r9.xyxz
          dp3 r11.y, r12.xywx, r12.xywx
          rsq r11.y, r11.y
          mul r12.xyw, r11.yyyy, r12.xyxw
          dp3 r11.y, -cb4[r10.w + 2].xyzx, r23.xyzx
          dp3 r11.w, -cb4[r10.w + 2].xyzx, r12.xywx
          div r11.y, r11.y, r11.w
          mad r12.xyw, r12.xyxw, r11.yyyy, r7.xyxz
          add r12.xyw, r12.xyxw, -cb4[r10.w + 0].xyxz
          dp3 r16.x, r12.xywx, cb4[r10.w + 4].xyzx
          dp3 r16.y, r12.xywx, cb4[r10.w + 3].xyzx
          dp2 r11.y, r16.xyxx, r16.xyxx
          sqrt r11.y, r11.y
          div r12.xy, r16.xyxx, r11.yyyy
          mul r12.xy, r12.xyxx, cb4[r10.w + 7].yyyy
          lt r11.y, r11.y, cb4[r10.w + 7].y
          movc r11.yw, r11.yyyy, r16.xxxy, r12.xxxy
          mad r12.xyw, r11.yyyy, cb4[r10.w + 4].xyxz, cb4[r10.w + 0].xyxz
          mad r12.xyw, r11.wwww, cb4[r10.w + 3].xyxz, r12.xyxw
          mad r12.xyw, -r5.xyxz, r2.xxxx, r12.xyxw
          dp3 r11.y, r12.xywx, r12.xywx
          sqrt r11.y, r11.y
          div r12.xyw, r12.xyxw, r11.yyyy
          add r11.y, r11.y, r11.y
          div r11.y, cb4[r10.w + 7].y, r11.y
          add_sat r11.y, r1.x, r11.y
          div r11.y, r1.x, r11.y
          mul r11.y, r11.y, r11.y
          mad r27.xyz, -r7.xyzx, r2.yyyy, r12.xywx
          dp3 r11.w, r27.xyzx, r27.xyzx
          rsq r11.w, r11.w
          mul r27.xyz, r11.wwww, r27.xyzx
          mad r28.xyz, -r7.xyzx, r2.yyyy, r24.xyzx
          dp3 r11.w, r28.xyzx, r28.xyzx
          rsq r11.w, r11.w
          mul r28.xyz, r11.wwww, r28.xyzx
          dp3_sat r11.w, r12.xywx, r27.xyzx
          dp3_sat r13.y, r24.xyzx, r28.xyzx
          dp3_sat r14.x, r6.xyzx, r27.xyzx
          dp3_sat r12.x, r6.xyzx, r12.xywx
          add r11.w, -r11.w, l(1.000000)
          mul r12.y, r11.w, r11.w
          mul r12.y, r12.y, r12.y
          mul r11.w, r11.w, r12.y
          mad r27.xyz, r8.xyzx, r11.wwww, r4.xyzx
          mad r11.w, -r12.x, r6.w, r12.x
          mad r11.w, r11.w, r12.x, r6.w
          sqrt r11.w, r11.w
          mul r11.w, r2.z, r11.w
          mad r11.w, r12.x, r8.w, r11.w
          div r11.w, l(0.500000), r11.w
          mad r12.x, r14.x, r6.w, -r14.x
          mad r12.x, r12.x, r14.x, l(1.000000)
          mul r12.x, r12.x, r12.x
          div r12.x, r6.w, r12.x
          mul r11.w, r11.w, r12.x
          mul r11.y, r11.y, r11.w
          mul r12.xyw, r11.yyyy, r27.xyxz
          mul r11.y, r13.y, r13.y
          dp2 r11.y, r11.yyyy, r3.xxxx
          mad r11.y, r3.x, l(0.500000), r11.y
          add r11.w, -r13.x, l(1.000000)
          mul r13.x, r11.w, r11.w
          mul r13.x, r13.x, r13.x
          mul r11.w, r11.w, r13.x
          add r11.y, r11.y, l(-1.000000)
          mad r11.w, r11.y, r11.w, l(1.000000)
          mad r11.y, r11.y, r10.x, l(1.000000)
          mul r11.y, r11.y, r11.w
          mul r11.y, r9.w, r11.y
          mul r11.w, r11.x, cb4[r10.w + 2].w
          mul r27.xyz, r11.wwww, cb4[r10.w + 1].xyzx
          mul r26.xyz, r11.yyyy, r27.xyzx
          mul r11.x, r11.x, cb4[r10.w + 3].w
          mul r11.xyw, r11.xxxx, cb4[r10.w + 1].xyxz
          mul r25.xyz, r11.xywx, r12.xywx
        else 
          mov r26.xyz, l(0,0,0,0)
          mov r25.xyz, l(0,0,0,0)
        endif 
      else 
        mad r23.xyz, -r5.xyzx, r2.xxxx, cb4[r10.w + 0].xyzx
        dp3 r11.x, r23.xyzx, r23.xyzx
        rsq r11.y, r11.x
        mul r24.xyz, r11.yyyy, r23.xyzx
        dp3 r11.y, r6.xyzx, r24.xyzx
        mul r11.w, cb4[r10.w + 7].y, cb4[r10.w + 7].y
        max r12.x, r11.x, r11.w
        div r11.w, r11.w, r12.x
        mad r12.xy, r11.wwww, l(-0.690576434, -10.482754, 0.000000, 0.000000), l(0.559636116, 18.258890, 0.000000, 0.000000)
        mad r12.y, r12.y, r11.w, l(-11.710919)
        mad r12.y, r12.y, r11.w, l(4.99786425)
        mad r12.w, r11.y, l(0.500000), l(0.500000)
        log r13.x, r12.w
        mul r12.y, r12.y, r13.x
        exp r12.y, r12.y
        mov_sat r13.x, r11.y
        mul r11.y, r11.y, r12.x
        add r12.x, -r12.y, r12.w
        mad r11.y, r11.y, r12.x, r12.y
        max r11.y, r11.y, r13.x
        mul r11.y, r11.w, r11.y
        mul r11.y, r11.y, l(3.14159274)
        mul r11.x, r11.x, cb4[r10.w + 0].w
        mad r11.x, -r11.x, r11.x, l(1.000000)
        max r11.x, r11.x, l(0.000000)
        mul r11.x, r11.x, r11.x
        mul r11.x, r11.x, r11.y
        lt r14.w, l(0.000000), r11.x
        if_nz r14.w
          dp3 r11.y, r23.xyzx, r9.xyzx
          mad r12.xyw, r11.yyyy, r9.xyxz, -r23.xyxz
          dp3 r11.y, r12.xywx, r12.xywx
          sqrt r11.y, r11.y
          div_sat r11.y, cb4[r10.w + 7].y, r11.y
          mad r12.xyw, r12.xyxw, r11.yyyy, r23.xyxz
          dp3 r11.y, r12.xywx, r12.xywx
          sqrt r11.y, r11.y
          div r12.xyw, r12.xyxw, r11.yyyy
          add r11.y, r11.y, r11.y
          div r11.y, cb4[r10.w + 7].y, r11.y
          add_sat r11.y, r1.x, r11.y
          div r11.y, r1.x, r11.y
          mul r11.y, r11.y, r11.y
          mad r27.xyz, -r7.xyzx, r2.yyyy, r12.xywx
          dp3 r11.w, r27.xyzx, r27.xyzx
          rsq r11.w, r11.w
          mul r27.xyz, r11.wwww, r27.xyzx
          mad r28.xyz, -r7.xyzx, r2.yyyy, r24.xyzx
          dp3 r11.w, r28.xyzx, r28.xyzx
          rsq r11.w, r11.w
          mul r28.xyz, r11.wwww, r28.xyzx
          dp3_sat r11.w, r12.xywx, r27.xyzx
          dp3_sat r13.y, r24.xyzx, r28.xyzx
          dp3_sat r14.x, r6.xyzx, r27.xyzx
          dp3_sat r12.x, r6.xyzx, r12.xywx
          add r11.w, -r11.w, l(1.000000)
          mul r12.y, r11.w, r11.w
          mul r12.y, r12.y, r12.y
          mul r11.w, r11.w, r12.y
          mad r27.xyz, r8.xyzx, r11.wwww, r4.xyzx
          mad r11.w, -r12.x, r6.w, r12.x
          mad r11.w, r11.w, r12.x, r6.w
          sqrt r11.w, r11.w
          mul r11.w, r2.z, r11.w
          mad r11.w, r12.x, r8.w, r11.w
          div r11.w, l(0.500000), r11.w
          mad r12.x, r14.x, r6.w, -r14.x
          mad r12.x, r12.x, r14.x, l(1.000000)
          mul r12.x, r12.x, r12.x
          div r12.x, r6.w, r12.x
          mul r11.w, r11.w, r12.x
          mul r11.y, r11.y, r11.w
          mul r12.xyw, r11.yyyy, r27.xyxz
          mul r11.y, r13.y, r13.y
          dp2 r11.y, r11.yyyy, r3.xxxx
          mad r11.y, r3.x, l(0.500000), r11.y
          add r11.w, -r13.x, l(1.000000)
          mul r13.x, r11.w, r11.w
          mul r13.x, r13.x, r13.x
          mul r11.w, r11.w, r13.x
          add r11.y, r11.y, l(-1.000000)
          mad r11.w, r11.y, r11.w, l(1.000000)
          mad r11.y, r11.y, r10.x, l(1.000000)
          mul r11.y, r11.y, r11.w
          mul r11.y, r9.w, r11.y
          mul r11.w, r11.x, cb4[r10.w + 2].w
          mul r27.xyz, r11.wwww, cb4[r10.w + 1].xyzx
          mul r26.xyz, r11.yyyy, r27.xyzx
          mul r11.x, r11.x, cb4[r10.w + 3].w
          mul r11.xyw, r11.xxxx, cb4[r10.w + 1].xyxz
          mul r25.xyz, r11.xywx, r12.xywx
        else 
          mov r26.xyz, l(0,0,0,0)
          mov r25.xyz, l(0,0,0,0)
        endif 
      endif 
    endif 
  endif 
  lt r11.x, l(0.000000), cb4[r10.w + 8].x
  and r11.x, r11.x, r14.w
  if_nz r11.x
    dp3 r11.x, cb4[r10.w + 4].xyzx, -r24.xyzx
    dp3 r11.y, cb4[r10.w + 3].xyzx, -r24.xyzx
    dp3 r11.w, cb4[r10.w + 2].xyzx, -r24.xyzx
    mad r27.y, r11.w, l(0.500000), l(0.500000)
    min r11.w, |r11.x|, |r11.y|
    max r12.x, |r11.x|, |r11.y|
    div r12.x, l(1.000000, 1.000000, 1.000000, 1.000000), r12.x
    mul r11.w, r11.w, r12.x
    mul r12.x, r11.w, r11.w
    mad r12.y, r12.x, l(0.0208350997), l(-0.085133)
    mad r12.y, r12.x, r12.y, l(0.180141)
    mad r12.y, r12.x, r12.y, l(-0.330299497)
    mad r12.x, r12.x, r12.y, l(0.999866)
    mul r12.y, r11.w, r12.x
    lt r12.w, |r11.x|, |r11.y|
    mad r12.y, r12.y, l(-2.000000), l(1.57079637)
    and r12.y, r12.w, r12.y
    mad r11.w, r11.w, r12.x, r12.y
    lt r12.x, r11.x, -r11.x
    and r12.x, r12.x, l(0xc0490fdb)
    add r11.w, r11.w, r12.x
    min r12.x, r11.x, r11.y
    max r11.x, r11.x, r11.y
    lt r11.y, r12.x, -r12.x
    ge r11.x, r11.x, -r11.x
    and r11.x, r11.x, r11.y
    movc r11.x, r11.x, -r11.w, r11.w
    mul r27.x, r11.x, l(0.159154937)
    mov r27.z, cb4[r10.w + 8].y
    sample_l_indexable(texture2darray)(float,float,float,float) r11.x, r27.xyzx, t9.xyzw, s2, l(0.000000)
  else 
    mov r11.x, l(1.000000)
  endif 
  ne r11.y, l(0.000000), cb4[r10.w + 21].x
  and r11.y, r11.y, r14.w
  if_nz r11.y
    dp3 r11.y, cb4[r10.w + 2].xyzx, r24.xyzx
    mad_sat r11.y, r11.y, cb4[r10.w + 21].z, cb4[r10.w + 21].w
    mul r11.y, r11.y, r11.y
    lt r11.w, l(0.000000), r11.y
    if_nz r11.w
      eq r11.w, l(2.000000), cb4[r10.w + 21].x
      if_nz r11.w
        mov r24.xyz, -r23.xyzx
        max r11.w, |r23.y|, |r23.x|
        max r11.w, |r23.z|, r11.w
        lt r12.xy, |r23.yzyy|, |r23.xxxx|
        and r12.x, r12.y, r12.x
        if_nz r12.x
          lt r12.x, l(0.000000), r24.x
          movc r24.x, r12.x, r24.z, r23.z
          and r12.x, r12.x, l(0x3f800000)
        else 
          lt r12.yw, |r23.xxxz|, |r23.yyyy|
          and r12.y, r12.w, r12.y
          if_nz r12.y
            lt r12.y, l(0.000000), r24.y
            movc r24.w, r12.y, r24.z, r23.z
            movc r12.x, r12.y, l(3.000000), l(2.000000)
            mov r24.xy, r24.xwxx
          else 
            lt r12.y, l(0.000000), r24.z
            movc r24.x, r12.y, r23.x, r24.x
            movc r12.x, r12.y, l(5.000000), l(4.000000)
          endif 
        endif 
        div r12.yw, r24.xxxy, r11.wwww
        mad r23.xy, r12.ywyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r12.y, -r11.w, cb4[r10.w + 11].z, cb4[r10.w + 11].w
        div r11.w, r12.y, r11.w
        mov r12.y, l(-1)
      else 
        dp4 r13.x, r7.xyzw, cb4[r10.w + 9].xyzw
        dp4 r13.y, r7.xyzw, cb4[r10.w + 10].xyzw
        dp4 r12.w, r7.xyzw, cb4[r10.w + 11].xyzw
        dp4 r14.x, r7.xyzw, cb4[r10.w + 12].xyzw
        div r14.x, l(1.000000, 1.000000, 1.000000, 1.000000), r14.x
        mul r13.xy, r13.xyxx, r14.xxxx
        mul r11.w, r12.w, r14.x
        mad r23.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r12.w, -r12.w, r14.x, l(1.000000)
        max r13.x, |r13.y|, |r13.x|
        max r12.w, r12.w, r13.x
        ge r12.y, l(1.000000), r12.w
        mov r12.x, l(0)
      endif 
      ftou r12.x, r12.x
      and r12.w, r12.x, l(3)
      ushr r12.x, r12.x, l(2)
      imad r10.z, r10.z, l(23), r12.x
      dp4 r10.z, cb4[r10.z + 19].xyzw, icb[r12.w + 0].xyzw
      ge r12.x, r10.z, l(0.000000)
      and r12.x, r12.y, r12.x
      ftou r10.z, r10.z
      ftou r12.y, cb4[r10.w + 21].y
      ieq r12.y, r12.y, l(1)
      if_nz r12.y
        utof r24.z, r10.z
        mad r12.yw, cb0[6].xxxx, r23.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
        round_ni r13.xy, r12.ywyy
        add r12.yw, r12.yyyw, -r13.xxxy
        mul r24.xy, r13.xyxx, cb0[6].zzzz
        gather4_c_aoffimmi_indexable(-2,-2,0)(texture2darray)(float,float,float,float) r27.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        add r28.xyzw, -r12.yyyy, l(1.000000, 2.000000, 3.000000, 5.000000)
        mul r29.xyzw, r27.wzxy, r28.xyxy
        add r13.xy, r29.ywyy, r29.xzxx
        gather4_c_aoffimmi_indexable(0,-2,0)(texture2darray)(float,float,float,float) r29.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        mad r13.xy, r29.zyzz, l(2.000000, 2.000000, 0.000000, 0.000000), r13.xyxx
        mad r13.xy, r29.wxww, l(2.000000, 2.000000, 0.000000, 0.000000), r13.xyxx
        gather4_c_aoffimmi_indexable(2,-2,0)(texture2darray)(float,float,float,float) r30.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        add r31.xyzw, r12.yyyy, l(1.000000, 4.000000, 3.000000, 2.000000)
        mul r14.x, r12.y, r30.y
        mad r13.xy, r30.zyzz, r12.yyyy, r13.xyxx
        mad r13.xy, r30.wxww, r31.xxxx, r13.xyxx
        gather4_c_aoffimmi_indexable(-2,0,0)(texture2darray)(float,float,float,float) r32.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        mad r14.w, -r12.y, l(2.000000), l(2.000000)
        mul r15.xw, r14.wwww, r32.wwwx
        mad r16.x, r12.y, l(-2.000000), l(4.000000)
        mad r15.xw, r32.zzzy, r16.xxxx, r15.xxxw
        mad r15.x, r27.y, r28.z, r15.x
        mad r15.x, r27.x, r14.w, r15.x
        mad r15.w, r32.z, r28.z, r15.w
        mad r15.w, r32.w, r14.w, r15.w
        gather4_c_indexable(texture2darray)(float,float,float,float) r27.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        mad r15.x, r27.z, r31.y, r15.x
        mad r15.x, r27.w, r28.w, r15.x
        mad r15.w, r27.y, r31.y, r15.w
        mad r15.w, r27.x, r28.w, r15.w
        add r16.xy, -r12.ywyy, l(4.000000, 1.000000, 0.000000, 0.000000)
        mad r15.x, r29.y, r31.z, r15.x
        mad r15.x, r29.x, r16.x, r15.x
        mad r15.w, r27.z, r31.z, r15.w
        mad r15.w, r27.w, r16.x, r15.w
        gather4_c_aoffimmi_indexable(2,0,0)(texture2darray)(float,float,float,float) r29.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        mad r17.y, r12.y, l(2.000000), l(2.000000)
        dp2 r17.w, r29.zzzz, r12.yyyy
        add r15.x, r15.x, r17.w
        mad r15.x, r29.w, r17.y, r15.x
        dp2 r18.y, r29.yyyy, r12.yyyy
        add r15.w, r15.w, r18.y
        mad r15.w, r29.x, r17.y, r15.w
        mad r14.x, r14.x, l(2.000000), r15.x
        mad r30.x, r30.x, r31.w, r14.x
        add r14.x, r15.w, r17.w
        mad r30.y, r29.w, r31.w, r14.x
        add r13.xy, r13.xyxx, r30.xyxx
        gather4_c_aoffimmi_indexable(-2,2,0)(texture2darray)(float,float,float,float) r30.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        mul r33.xyzw, r28.xyxy, r30.wzxy
        add r15.xw, r33.yyyw, r33.xxxz
        mad r14.x, r32.y, r28.z, r15.x
        mad r14.x, r32.x, r14.w, r14.x
        mad r15.x, r30.z, r28.z, r15.w
        mad r14.w, r30.w, r14.w, r15.x
        gather4_c_aoffimmi_indexable(0,2,0)(texture2darray)(float,float,float,float) r28.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        mad r14.x, r28.z, l(2.000000), r14.x
        mad r14.x, r28.w, l(2.000000), r14.x
        mad r14.w, r28.y, l(2.000000), r14.w
        mad r14.w, r28.x, l(2.000000), r14.w
        mad r14.x, r27.y, r31.z, r14.x
        mad r14.x, r27.x, r16.x, r14.x
        mad r14.w, r28.z, r31.z, r14.w
        mad r14.w, r28.w, r16.x, r14.w
        gather4_c_aoffimmi_indexable(2,2,0)(texture2darray)(float,float,float,float) r24.xyzw, r24.xyzx, t21.xyzw, s3.x, r11.w
        mul r15.x, r12.y, r24.z
        mad r14.x, r24.z, r12.y, r14.x
        mad r14.x, r24.w, r31.x, r14.x
        mad r12.y, r24.y, r12.y, r14.w
        mad r12.y, r24.x, r31.x, r12.y
        add r14.x, r14.x, r18.y
        mad r24.x, r29.x, r31.w, r14.x
        mad r12.y, r15.x, l(2.000000), r12.y
        mad r24.y, r24.w, r31.w, r12.y
        add r13.xy, r13.xyxx, r24.xyxx
        mul r12.y, r12.w, r13.y
        mad r12.y, r13.x, r16.y, r12.y
        mul_sat r12.y, r12.y, l(0.0163934417)
      else 
        utof r23.z, r10.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r23.xyzx, t21.xxxx, s3, r11.w
        lt r11.w, r11.w, l(1.000000)
        movc r12.y, r11.w, r10.z, l(1.000000)
      endif 
      add r10.z, r12.y, l(-1.000000)
      mul r10.z, r10.z, cb4[r10.w + 4].w
      mad r10.z, r11.y, r10.z, l(1.000000)
      movc r10.z, r12.x, r10.z, l(1.000000)
      mul r11.x, r10.z, r11.x
    endif 
  endif 
  mad r20.xyz, r26.xyzx, r11.xxxx, r20.xyzx
  mad r19.xyz, r25.xyzx, r11.xxxx, r19.xyzx
  iadd r5.w, r5.w, l(1)
endloop 
add r1.x, r1.z, l(-1.000000)
mad r1.x, cb0[8].y, r1.x, l(1.000000)
mul r2.xyz, r1.xxxx, r20.xyzx
add r1.x, r1.z, r2.w
mad r1.y, r1.y, l(-16.000000), l(-1.000000)
exp r1.y, r1.y
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
add r1.x, r1.z, r1.x
add_sat r1.x, r1.x, l(-1.000000)
mul r1.xyz, r1.xxxx, r19.xyzx
mul r2.xyz, r2.xyzx, r3.yzwy
mul r1.xyz, r1.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mad r1.xyz, r2.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r1.xyzx
mul r1.xyz, r1.xyzx, cb0[4].zzzz
min r1.xyz, r1.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
mov r1.w, l(0)
store_uav_typed u0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 2221 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
